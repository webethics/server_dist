{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/_admin_nav.ts","webpack:///./src/app/admin/views/error/404.component.html","webpack:///./src/app/admin/views/error/404.component.ts","webpack:///./src/app/admin/views/error/500.component.html","webpack:///./src/app/admin/views/error/500.component.ts","webpack:///./src/app/admin/views/jobs/dialog-overview-example-dialog.css","webpack:///./src/app/admin/views/jobs/dialog-overview-example-dialog.html","webpack:///./src/app/admin/views/jobs/list.component.html","webpack:///./src/app/admin/views/jobs/list.component.ts","webpack:///./src/app/admin/views/login/login.component.css","webpack:///./src/app/admin/views/login/login.component.html","webpack:///./src/app/admin/views/login/login.component.ts","webpack:///./src/app/admin/views/partner/dialog-overview-example-dialog.css","webpack:///./src/app/admin/views/partner/dialog-overview-example-dialog.html","webpack:///./src/app/admin/views/partner/list.component.html","webpack:///./src/app/admin/views/partner/list.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/containers/admin-layout/admin-layout.component.css","webpack:///./src/app/containers/admin-layout/admin-layout.component.html","webpack:///./src/app/containers/admin-layout/admin-layout.component.ts","webpack:///./src/app/containers/admin-layout/index.ts","webpack:///./src/app/containers/frontend-layout/frontend-layout.component.css","webpack:///./src/app/containers/frontend-layout/frontend-layout.component.html","webpack:///./src/app/containers/frontend-layout/frontend-layout.component.ts","webpack:///./src/app/containers/frontend-layout/index.ts","webpack:///./src/app/containers/index.ts","webpack:///./src/app/frontend/_front_nav.ts","webpack:///./src/app/frontend/views/home/index-component.css","webpack:///./src/app/frontend/views/home/index.component.html","webpack:///./src/app/frontend/views/home/index.component.ts","webpack:///./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.css","webpack:///./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.html","webpack:///./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.ts","webpack:///./src/app/frontend/views/jobs/partners/completedjobs/dialog-overview-example-dialog.css","webpack:///./src/app/frontend/views/jobs/partners/completedjobs/dialog-overview-example-dialog.html","webpack:///./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.css","webpack:///./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.html","webpack:///./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.ts","webpack:///./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.css","webpack:///./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.html","webpack:///./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.ts","webpack:///./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.css","webpack:///./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.html","webpack:///./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.ts","webpack:///./src/app/frontend/views/jobs/partners/makebid/makebid.component.css","webpack:///./src/app/frontend/views/jobs/partners/makebid/makebid.component.html","webpack:///./src/app/frontend/views/jobs/partners/makebid/makebid.component.ts","webpack:///./src/app/frontend/views/jobs/partners/openbids/openbids.component.css","webpack:///./src/app/frontend/views/jobs/partners/openbids/openbids.component.html","webpack:///./src/app/frontend/views/jobs/partners/openbids/openbids.component.ts","webpack:///./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.css","webpack:///./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.html","webpack:///./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.ts","webpack:///./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.css","webpack:///./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.html","webpack:///./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.ts","webpack:///./src/app/frontend/views/jobs/users/completejob/completejob.component.css","webpack:///./src/app/frontend/views/jobs/users/completejob/completejob.component.html","webpack:///./src/app/frontend/views/jobs/users/completejob/completejob.component.ts","webpack:///./src/app/frontend/views/jobs/users/createjob/array.validator.ts","webpack:///./src/app/frontend/views/jobs/users/createjob/createjob.component.css","webpack:///./src/app/frontend/views/jobs/users/createjob/createjob.component.html","webpack:///./src/app/frontend/views/jobs/users/createjob/createjob.component.ts","webpack:///./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.css","webpack:///./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.html","webpack:///./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.ts","webpack:///./src/app/frontend/views/jobs/users/editjob/editjob.component.css","webpack:///./src/app/frontend/views/jobs/users/editjob/editjob.component.html","webpack:///./src/app/frontend/views/jobs/users/editjob/editjob.component.ts","webpack:///./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.css","webpack:///./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.html","webpack:///./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.ts","webpack:///./src/app/frontend/views/jobs/users/jobdetails/dialog-hire-decline.css","webpack:///./src/app/frontend/views/jobs/users/jobdetails/dialog-hire-decline.html","webpack:///./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.css","webpack:///./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.html","webpack:///./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.ts","webpack:///./src/app/frontend/views/jobs/users/joblisting/dialog-overview-example-dialog.css","webpack:///./src/app/frontend/views/jobs/users/joblisting/dialog-overview-example-dialog.html","webpack:///./src/app/frontend/views/jobs/users/joblisting/joblisting.component.css","webpack:///./src/app/frontend/views/jobs/users/joblisting/joblisting.component.html","webpack:///./src/app/frontend/views/jobs/users/joblisting/joblisting.component.ts","webpack:///./src/app/frontend/views/jobs/users/userscompletedjobs/dialog-overview-example-dialog.css","webpack:///./src/app/frontend/views/jobs/users/userscompletedjobs/dialog-overview-example-dialog.html","webpack:///./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.css","webpack:///./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.html","webpack:///./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.ts","webpack:///./src/app/frontend/views/users/changepassword/changepassword.component.html","webpack:///./src/app/frontend/views/users/changepassword/changepassword.component.ts","webpack:///./src/app/frontend/views/users/dashboard/dashboard.component.css","webpack:///./src/app/frontend/views/users/dashboard/dashboard.component.html","webpack:///./src/app/frontend/views/users/dashboard/dashboard.component.ts","webpack:///./src/app/frontend/views/users/dashboard/dialog-hire-decline.css","webpack:///./src/app/frontend/views/users/dashboard/dialog-hire-decline.html","webpack:///./src/app/frontend/views/users/editprofile/editprofile.component.css","webpack:///./src/app/frontend/views/users/editprofile/editprofile.component.html","webpack:///./src/app/frontend/views/users/editprofile/editprofile.component.ts","webpack:///./src/app/frontend/views/users/forgotpassword/forgotpassword.component.html","webpack:///./src/app/frontend/views/users/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/frontend/views/users/login/login.component.css","webpack:///./src/app/frontend/views/users/login/login.component.html","webpack:///./src/app/frontend/views/users/login/login.component.ts","webpack:///./src/app/frontend/views/users/payment/dialog-overview-example-dialog.html","webpack:///./src/app/frontend/views/users/payment/payment.component.css","webpack:///./src/app/frontend/views/users/payment/payment.component.html","webpack:///./src/app/frontend/views/users/payment/payment.component.ts","webpack:///./src/app/frontend/views/users/payment/stripe-dialog.css","webpack:///./src/app/frontend/views/users/profile/profile.component.css","webpack:///./src/app/frontend/views/users/profile/profile.component.html","webpack:///./src/app/frontend/views/users/profile/profile.component.ts","webpack:///./src/app/frontend/views/users/register/register.component.css","webpack:///./src/app/frontend/views/users/register/register.component.html","webpack:///./src/app/frontend/views/users/register/register.component.ts","webpack:///./src/app/frontend/views/users/register/verify.component.html","webpack:///./src/app/frontend/views/users/register/verify.component.ts","webpack:///./src/app/frontend/views/users/resetpassword/resetpassword.component.html","webpack:///./src/app/frontend/views/users/resetpassword/resetpassword.component.ts","webpack:///./src/app/frontend/views/users/viewallnotifications/viewallnotifications.component.css","webpack:///./src/app/frontend/views/users/viewallnotifications/viewallnotifications.component.html","webpack:///./src/app/frontend/views/users/viewallnotifications/viewallnotifications.component.ts","webpack:///./src/app/frontend/views/users/viewpartnerprofile/viewpartnerprofile.component.css","webpack:///./src/app/frontend/views/users/viewpartnerprofile/viewpartnerprofile.component.html","webpack:///./src/app/frontend/views/users/viewpartnerprofile/viewpartnerprofile.component.ts","webpack:///./src/app/frontend/views/users/viewuserprofile/viewuserprofile.component.css","webpack:///./src/app/frontend/views/users/viewuserprofile/viewuserprofile.component.html","webpack:///./src/app/frontend/views/users/viewuserprofile/viewuserprofile.component.ts","webpack:///./src/app/globals.ts","webpack:///./src/app/services/auth.guard.ts","webpack:///./src/app/services/backend/admin.service.ts","webpack:///./src/app/services/job.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/views/dashboard/dashboard.module\": [\n\t\t\"./src/app/admin/views/dashboard/dashboard.module.ts\",\n\t\t\"default~admin-views-dashboard-dashboard-module~admin-views-jobs-jobs-module\",\n\t\t\"common\",\n\t\t\"admin-views-dashboard-dashboard-module\"\n\t],\n\t\"./admin/views/jobs/jobs.module\": [\n\t\t\"./src/app/admin/views/jobs/jobs.module.ts\",\n\t\t\"default~admin-views-dashboard-dashboard-module~admin-views-jobs-jobs-module\",\n\t\t\"common\",\n\t\t\"admin-views-jobs-jobs-module\"\n\t],\n\t\"./admin/views/partner/users.module\": [\n\t\t\"./src/app/admin/views/partner/users.module.ts\",\n\t\t\"common\",\n\t\t\"admin-views-partner-users-module\"\n\t],\n\t\"./admin/views/plans/plan.module\": [\n\t\t\"./src/app/admin/views/plans/plan.module.ts\",\n\t\t\"admin-views-plans-plan-module\"\n\t],\n\t\"./admin/views/services/services.module\": [\n\t\t\"./src/app/admin/views/services/services.module.ts\",\n\t\t\"admin-views-services-services-module\"\n\t],\n\t\"./admin/views/users/users.module\": [\n\t\t\"./src/app/admin/views/users/users.module.ts\",\n\t\t\"common\",\n\t\t\"admin-views-users-users-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","export interface NavData {\r\n  name?: string;\r\n  url?: string;\r\n  icon?: string;\r\n  title?: boolean;\r\n  children?: any;\r\n  divider?: boolean;\r\n  class?: string;\r\n  label?: any;\r\n  wrapper?: any;\r\n}\r\n\r\nexport const navItems: NavData[] = [\r\n  {\r\n    name: 'Dashboard',\r\n    url: '/admin/dashboard',\r\n    icon: 'icon-speedometer',\r\n  },\r\n \r\n  {\r\n  //   name: 'Users',\r\n  //   url: '',\r\n  //   icon: 'icon-user',\r\n\t// children: [\r\n     \r\n\t//   /*,\r\n\t//    {\r\n  //       name: 'Add User',\r\n  //       url: '/admin/users/add',\r\n  //       icon: 'icon-user',\r\n  //     } */\r\n  //   ]\r\n  // },\r\n  \r\n    name: 'Customers',\r\n    url: '/admin/users/list',\r\n    icon: 'icon-user',\r\n    \r\n  },\r\n  {\r\n    name: 'Partners',\r\n    url: '/admin/partner/list',\r\n    icon: 'icon-user',\r\n  },\r\n  {\r\n    name: 'Plan',\r\n\t  url: '/admin/plan/list',\r\n    icon: 'icon-puzzle',\r\n  },\r\n  {\r\n    name: 'Services',\r\n\t  url: '/admin/services/list',\r\n    icon: 'icon-puzzle',\r\n  },\r\n  {\r\n    name: 'Jobs',\r\n\t  url: '/admin/jobs/list',\r\n    icon: 'icon-puzzle',\r\n  }\r\n  \r\n];\r\n","module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <h1 class=\\\"float-left display-3 mr-4\\\">404</h1>\\r\\n          <h4 class=\\\"pt-3\\\">Oops! You're lost.</h4>\\r\\n          <p class=\\\"text-muted\\\">The page you are looking for was not found.</p>\\r\\n        </div>\\r\\n        <div class=\\\"input-prepend input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\r\\n          <span class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '404.component.html'\r\n})\r\nexport class P404Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <h1 class=\\\"float-left display-3 mr-4\\\">500</h1>\\r\\n          <h4 class=\\\"pt-3\\\">Houston, we have a problem!</h4>\\r\\n          <p class=\\\"text-muted\\\">The page you are looking for is temporarily unavailable.</p>\\r\\n        </div>\\r\\n        <div class=\\\"input-prepend input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\r\\n          <span class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '500.component.html'\r\n})\r\nexport class P500Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","module.exports = \".mat-dialog-container{\\r\\n\\tpadding:50px !important;\\r\\n}\\r\\n.mat-raised-button.mat-primary{\\r\\n\\tbackground-color:#1695C2;\\r\\n}\\r\\n.mat-dialog-actions{padding:25px 0;}\\r\\n.cdk-overlay-pane {\\r\\n    width: 100% !important;\\r\\n    max-width: 750px !important;\\r\\n}\\r\\n.desc .loc_lable{    width: 100px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight:600;\\r\\n\\tfont-size:14px\\r\\n}\\r\\n.desc .loc_lable::after{content:\\\":\\\"}\\r\\n.job-info{\\r\\n    padding: 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.items-moved .job-info {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n.joblisting-panel .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.job-info .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.items-moved.joblisting-panel .title {\\r\\n\\tcolor:#303030;\\r\\n    font-weight: 900;  \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdmlld3Mvam9icy9kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS1kaWFsb2cuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsdUJBQXVCO0FBQ3hCO0FBQ0E7Q0FDQyx3QkFBd0I7QUFDekI7QUFFQSxvQkFBb0IsY0FBYyxDQUFDO0FBRW5DO0lBQ0ksc0JBQXNCO0lBQ3RCLDJCQUEyQjtBQUMvQjtBQUNBLHFCQUFxQixZQUFZO0lBQzdCLGtCQUFrQjtJQUNsQixxQkFBcUI7Q0FDeEIsaUJBQWlCO0NBQ2pCLGVBQWU7Q0FDZjtBQUNEO0FBQ0Esd0JBQXdCLFdBQVc7QUFFbkM7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFHSSxhQUFhO0lBRVQsZUFBZTtBQUN2QjtBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7Q0FDQyxhQUFhO0lBQ1YsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vdmlld3Mvam9icy9kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS1kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGFpbmVye1xyXG5cdHBhZGRpbmc6NTBweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeXtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiMxNjk1QzI7XHJcbn1cclxuXHJcbi5tYXQtZGlhbG9nLWFjdGlvbnN7cGFkZGluZzoyNXB4IDA7fVxyXG5cclxuLmNkay1vdmVybGF5LXBhbmUge1xyXG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIG1heC13aWR0aDogNzUwcHggIWltcG9ydGFudDtcclxufVxyXG4uZGVzYyAubG9jX2xhYmxleyAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0dGV4dC1hbGlnbjogcmlnaHQ7XHJcblx0Zm9udC13ZWlnaHQ6NjAwO1xyXG5cdGZvbnQtc2l6ZToxNHB4XHJcbn1cclxuLmRlc2MgLmxvY19sYWJsZTo6YWZ0ZXJ7Y29udGVudDpcIjpcIn1cclxuXHJcbi5qb2ItaW5mb3tcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbi5pdGVtcy1tb3ZlZCAuam9iLWluZm8ge1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxufSBcclxuXHJcbi5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uam9iLWluZm8gLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5pdGVtcy1tb3ZlZC5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcblx0Y29sb3I6IzMwMzAzMDtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7ICBcclxufSJdfQ== */\"","module.exports = \"<div mat-dialog-content class=\\\"custom-modal-wrap\\\">\\r\\n\\r\\n\\t\\t<div mat-dialog-actions>\\r\\n\\t\\t\\t\\t<p  (click)=\\\"onNoClick()\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\r\\n\\t<h3 class=\\\"title\\\">Job Details</h3>\\r\\n\\t\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">\\r\\n\\t\\t\\t\\t\\tSelected Moving Data\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 2\\\">Completed</span> \\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 1\\\">In Progress</span>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 0 && bidStatus != 2\\\">Open</span>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 0 && bidStatus == 2\\\">Declined</span>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"movingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of movingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"movingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of movingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t \\r\\n<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\r\\n\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\tItems to be Moved\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.appliances  && movingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of movingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_misc\\\">{{ movingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.appliances && movingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.bedRooms  && movingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of movingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedrooms_misc\\\">{{ movingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.bedRooms && movingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.livingRooms && movingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of movingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_misc\\\">{{ movingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.livingRooms && movingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.familyRooms && movingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of movingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_misc\\\">{{ movingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.familyRooms && movingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.diningRooms  && movingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of movingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_misc\\\">{{ movingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.diningRooms && movingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.kitchen && movingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of movingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_misc\\\">{{ movingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.kitchen && movingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.basement && movingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of movingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_misc\\\">{{ movingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.basement && movingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.garage  && movingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of movingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_misc\\\">{{ movingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.garage && movingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.patioYard  && movingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of movingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_misc\\\">{{ movingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.patioYard && movingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Packing Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of packingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of packingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Packed\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.appliances  && packingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of packingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.appliances_misc\\\">{{ packingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.appliances && packingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.bedRooms  && packingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of packingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.bedrooms_misc\\\">{{ packingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.bedRooms && packingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.livingRooms && packingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of packingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.livingRooms_misc\\\">{{ packingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.livingRooms && packingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.familyRooms && packingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of packingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.familyRooms_misc\\\">{{ packingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.familyRooms && packingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.diningRooms  && packingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of packingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.diningRooms_misc\\\">{{ packingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.diningRooms && packingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.kitchen && packingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of packingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.kitchen_misc\\\">{{ packingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.kitchen && packingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.basement && packingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of packingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.basement_misc\\\">{{ packingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.basement && packingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.garage  && packingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of packingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.garage_misc\\\">{{ packingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.garage && packingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.patioYard  && packingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of packingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.patioYard_misc\\\">{{ packingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.patioYard && packingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\"  *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Unpacking Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of unpackingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unpackingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Unpacked\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.appliances  && unpackingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unpackingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.appliances_misc\\\">{{ unpackingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.appliances && unpackingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.bedRooms  && unpackingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unpackingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.bedrooms_misc\\\">{{ unpackingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.bedRooms && unpackingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.livingRooms && unpackingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unpackingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.livingRooms_misc\\\">{{ unpackingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.livingRooms && unpackingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.familyRooms && unpackingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unpackingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.familyRooms_misc\\\">{{ unpackingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.familyRooms && unpackingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.diningRooms  && unpackingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unpackingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.diningRooms_misc\\\">{{ unpackingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.diningRooms && unpackingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.kitchen && unpackingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unpackingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.kitchen_misc\\\">{{ unpackingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.kitchen && unpackingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.basement && unpackingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unpackingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.basement_misc\\\">{{ unpackingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.basement && unpackingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.garage  && unpackingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unpackingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.garage_misc\\\">{{ unpackingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.garage && unpackingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.patioYard  && unpackingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unpackingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.patioYard_misc\\\">{{ unpackingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.patioYard && unpackingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar\\\"  *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Loading Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"loadingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of loadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"loadingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of loadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Loaded\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.appliances  && loadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of loadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.appliances_misc\\\">{{ loadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.appliances && loadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.bedRooms  && loadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of loadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.bedrooms_misc\\\">{{ loadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.bedRooms && loadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.livingRooms && loadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of loadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.livingRooms_misc\\\">{{ loadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.livingRooms && loadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.familyRooms && loadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of loadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.familyRooms_misc\\\">{{ loadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.familyRooms && loadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.diningRooms  && loadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of loadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.diningRooms_misc\\\">{{ loadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.diningRooms && loadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.kitchen && loadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of loadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.kitchen_misc\\\">{{ loadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.kitchen && loadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.basement && loadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of loadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.basement_misc\\\">{{ loadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.basement && loadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.garage  && loadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of loadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.garage_misc\\\">{{ loadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.garage && loadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.patioYard  && loadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of loadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.patioYard_misc\\\">{{ loadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.patioYard && loadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\r\\n\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Unloading Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unloadingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of unloadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unloadingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unloadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Unloaded\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.appliances  && unloadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unloadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.appliances_misc\\\">{{ unloadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.appliances && unloadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.bedRooms  && unloadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unloadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.bedrooms_misc\\\">{{ unloadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.bedRooms && unloadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.livingRooms && unloadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unloadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.livingRooms_misc\\\">{{ unloadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.livingRooms && unloadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.familyRooms && unloadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unloadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.familyRooms_misc\\\">{{ unloadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.familyRooms && unloadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.diningRooms  && unloadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unloadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.diningRooms_misc\\\">{{ unloadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.diningRooms && unloadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.kitchen && unloadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unloadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.kitchen_misc\\\">{{ unloadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.kitchen && unloadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.basement && unloadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unloadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.basement_misc\\\">{{ unloadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.basement && unloadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.garage  && unloadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unloadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.garage_misc\\\">{{ unloadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.garage && unloadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.patioYard  && unloadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unloadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.patioYard_misc\\\">{{ unloadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.patioYard && unloadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-align-justify\\\"></i> Plans\\r\\n        </div>\\r\\n        <div class=\\\"form-group filter-bar\\\">\\r\\n            <div class=\\\"col-3 pull-right\\\">\\r\\n\\r\\n              <form [formGroup]=\\\"angForm\\\" class=\\\"form-horizontal\\\" novalidate>\\r\\n                  <label class=\\\"col-form-label\\\" for=\\\"text-input\\\">Select Jobs</label>\\r\\n                <select  id=\\\"selectedjobs\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"selectedjobs\\\" (change)= \\\"showjobs($event)\\\">\\r\\n                  <option value=\\\"\\\" disabled selected=\\\"selected\\\">Please Select Job</option>\\r\\n                  <option value=\\\"0\\\">Created</option>\\r\\n                  <option value=\\\"2\\\">Completed</option>\\r\\n                  <option value=\\\"1\\\">Processing</option>\\r\\n                </select>\\r\\n              </form>\\r\\n          </div>\\r\\n        </div> \\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-striped table-condition\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Job ID</th>\\r\\n                <th>Created Date</th>\\r\\n                <th>Job Status</th>\\r\\n                <th>Action</th>    \\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody class=\\\"warning-msg\\\" *ngIf=\\\"!services\\\">\\r\\n                <p>No jobs Found</p>\\r\\n            </tbody>\\r\\n            <tbody *ngIf=\\\"services && services.length > 0\\\">\\r\\n                \\r\\n               \\r\\n                  <tr *ngFor=\\\"let service of services\\\">\\r\\n                    <td>{{service.jobId}}</td>\\r\\n                    <td>{{service.created_at | date:'mediumDate'}}</td>\\r\\n                    <td *ngIf=\\\"service.jobStatus == '0'\\\">Created</td> \\r\\n                    <td *ngIf=\\\"service.jobStatus == '2'\\\">Completed</td> \\r\\n                    <td *ngIf=\\\"service.jobStatus == '1'\\\">Failed</td> \\r\\n                    <td><button class=\\\"btn btn-primary\\\" (click)=\\\"openDialog(service._id);\\\"> Show Details</button></td>\\r\\n                  </tr>\\r\\n                \\r\\n            </tbody>\\r\\n          </table>\\r\\n        \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/.row-->\\r\\n</div>\\r\\n<!-- <a (click)=\\\"openDialog(jobs._id)\\\" href=\\\"javascript:void(0)\\\" ><i class=\\\"fas fa-trash-alt\\\"></i> Delete</a> -->\"","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\r\nimport { AdminService } from './../../../services/backend/admin.service';\r\nimport { Subject } from 'rxjs';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { FormGroup,  FormBuilder,  Validators, FormArray, FormControl } from '@angular/forms';\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n  jobID:any;\r\n}\r\n\r\n@Component({\r\n  templateUrl: 'list.component.html'\r\n})\r\n\r\n\r\nexport class ListComponent implements OnDestroy, OnInit {\r\n  angForm: FormGroup;\r\n  dtOptions: DataTables.Settings = {};\r\n  services: any;\r\n  show_dialog : boolean = false;\r\n  result:any;\r\n  startdate:any;\r\n  result1:any;\r\n  closeResult: string;\r\n  dtTrigger: Subject<any> = new Subject();\r\n\tconstructor(private http: HttpClient, private service: AdminService,private fb: FormBuilder,private router: Router,public dialog: MatDialog) {\r\n    this.LoginForm();\r\n  }\r\n  \r\n\tLoginForm() {\r\n\t\tthis.angForm = this.fb.group({\r\n\t\t\tselectedjobs: ['', Validators.required]\r\n\t\t});\r\n  }\r\n\r\n  openDialog(jobId): void {\r\n\t\tconst dialogRef = this.dialog.open(DialogOverviewExampleDialogAdmin, {\r\n\t\t  width: '1000px',\r\n\t\t  data: {jobID:jobId}\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\tif(result == 'Success'){\r\n\t\t\t\t// this._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t  }\r\n\r\n   \r\n\r\n  showjobs(event) {\r\n    this.result = event.target.value;\r\n    if(this.result != undefined && this.result != 'undefined') {\r\n      this.service.getspecificjobs(this.result).subscribe(res => {\r\n        console.log(res);\r\n        if(res.jobs) {\r\n          this.services = res.jobs;  \r\n        } else {\r\n          this.services = '';\r\n        } \r\n      });\r\n    } else {\r\n      window.alert('Please select');\r\n    }\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n\t  this.dtOptions = {\r\n        pagingType: 'full_numbers',\r\n\t    \tpageLength: 3,\r\n        columnDefs: [ { orderable: false, targets: [3] } ]\r\n    };  \r\n\r\n    let array = [];\r\n\r\n    // Call gertuser service function \r\n    this.service.getjobs().subscribe(res => {\r\n      console.log(res);\r\n      this.services = res.job;\r\n\t\t\r\n      this.dtTrigger.next();\r\n      }, err=> {\t\t\r\n        console.log(err); //   this.router.navigate(['login']);\r\n    });\r\n    \r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n  } \r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog-overview-example-dialog.html',\r\n  styleUrls : [ './dialog-overview-example-dialog.css' ]\r\n})\r\n\r\nexport class DialogOverviewExampleDialogAdmin {\r\n  jobID:any;jobData: any;button_text:any;movingData:any;packingData:any;unpackingData:any;loadingData:any;unloadingData:any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogAdmin>, \r\n     @Inject(MAT_DIALOG_DATA) public data: DialogData, private fb: FormBuilder,private service: AdminService) {\t\r\n      this.jobID = data.jobID;\r\n      //http://18.223.97.46:3001/api/user/editjobs/5c9a0c509b7238289d9f8432\r\n      this.service.getparticularjobs(this.jobID).subscribe(res => {\r\n        console.log(res);\r\n          this.jobData = res.job;\r\n\t\t  \r\n\t\tif(res.job.packing.length > 0){\r\n\t\t\tthis.movingData = res.job.moving[0];\r\n\t\t}\r\n\t\tif(res.job.packing.length > 0){\r\n\t\t\tthis.packingData = res.job.packing[0];\r\n\t\t}\r\n\t\tif(res.job.packing.length > 0){\r\n\t\t\tthis.unpackingData = res.job.unpacking[0];\r\n\t\t}\r\n\t\tif(res.job.packing.length > 0){\r\n\t\t\tthis.loadingData = res.job.loading[0];\r\n\t\t}\r\n\t\tif(res.job.packing.length > 0){\r\n\t\t\tthis.unloadingData = res.job.unloading[0];\r\n\t\t}\r\n          \r\n          this.button_text = 'View More';\r\n        }, err=> {\t\t\r\n          console.log(err); //   this.router.navigate(['login']);\r\n      });\r\n     }\r\n\r\n\tonNoClick(): void {\r\n\t\tthis.dialogRef.close('ignore');\r\n\t}\r\n}\r\n","module.exports = \".content_wrapper, .form-wrapper {\\r\\n    min-height: calc(100vh);\\r\\n}\\r\\n.form-main .first_form {\\r\\n    max-width: 450px;\\r\\n    margin: 0px auto;\\r\\n    padding: 30px 30px;\\r\\n}\\r\\n.form-inner {\\r\\n    width: 100%;\\r\\n    max-width: 530px;\\r\\n}\\t\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdmlld3MvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFdBQVc7SUFDWCxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi92aWV3cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnRfd3JhcHBlciwgLmZvcm0td3JhcHBlciB7XHJcbiAgICBtaW4taGVpZ2h0OiBjYWxjKDEwMHZoKTtcclxufVxyXG4uZm9ybS1tYWluIC5maXJzdF9mb3JtIHtcclxuICAgIG1heC13aWR0aDogNDUwcHg7XHJcbiAgICBtYXJnaW46IDBweCBhdXRvO1xyXG4gICAgcGFkZGluZzogMzBweCAzMHB4O1xyXG59XHJcbi5mb3JtLWlubmVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiA1MzBweDtcclxufVx0Il19 */\"","module.exports = \"<div class=\\\"form-wrapper signin-form\\\">\\r\\n\\t<div class=\\\"form-inner\\\">\\r\\n\\t\\t<div class=\\\"form-header\\\">Admin Login</div> \\r\\n\\t\\t<form class=\\\"form-main\\\" [formGroup]=\\\"angForm\\\" novalidate>\\r\\n\\t\\t\\t<div class=\\\"first_form\\\">\\r\\n\\t\\t\\t\\t<flash-messages></flash-messages>   \\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"sr-only\\\">User email</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\"  formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors}\\\" #email  />\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEmail is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].errors.pattern\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPlease enter Valid Email.  \\r\\n\\t\\t\\t\\t\\t\\t</div>\\t \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\\"sr-only\\\">Password :</label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors}\\\" #password  />\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['password'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tPassword is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<button (ngSubmit)=\\\"LoginUser(email.value, password.value)\\\" (click)=\\\"LoginUser(email.value, password.value)\\\"  class=\\\"btn btn-lg btn-primary\\\">LOGIN</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n     </div>\\r\\n </div>\\r\\n \\r\\n \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AdminService } from './../../../services/backend/admin.service';\r\nimport { FormGroup,  FormBuilder,  Validators, FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'admin-login',\r\n  templateUrl: 'login.component.html',\r\n  styleUrls : [ './login.component.css' ]\r\n})\r\n\r\nexport class AdminLoginComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  title = 'Login User';\r\n  submitted = false;\r\n  result :any =\"\";\r\n\r\n  \r\n  constructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute, private router: Router, private adminservice: AdminService, private fb: FormBuilder\t) { \r\n    this.LoginForm();\r\n   }\r\n\r\n  LoginForm() {\r\n    this.angForm = this.fb.group({\r\n      \temail: new FormControl('', Validators.compose([\r\n\t\t\t  Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])),\r\n      \tpassword: ['', Validators.required ],\r\n    });\r\n  }\r\n\tget f() { return this.angForm.controls; }\r\n\t\r\n\tLoginUser(email,password) {\r\n\t  this.submitted = true;\r\n\t   if(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\t\r\n\t\t\tthis.adminservice.login_user(email,password).subscribe(result => {\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\tlocalStorage.setItem('admin_token', result.admin_token);\r\n\t\t\t\t\tthis.router.navigate(['/admin/dashboard']);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:3000});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\t\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\r\n\t}\r\n}\r\n\r\n\r\n","module.exports = \".mat-dialog-container{\\r\\n\\tpadding:35px !important;\\r\\n}\\r\\n.mat-raised-button.mat-primary{\\r\\n\\tbackground-color:#1695C2;\\r\\n}\\r\\n.mat-dialog-actions{padding:25px 0;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdmlld3MvcGFydG5lci9kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS1kaWFsb2cuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsdUJBQXVCO0FBQ3hCO0FBQ0E7Q0FDQyx3QkFBd0I7QUFDekI7QUFFQSxvQkFBb0IsY0FBYyxDQUFDIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vdmlld3MvcGFydG5lci9kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS1kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGFpbmVye1xyXG5cdHBhZGRpbmc6MzVweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeXtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiMxNjk1QzI7XHJcbn1cclxuXHJcbi5tYXQtZGlhbG9nLWFjdGlvbnN7cGFkZGluZzoyNXB4IDA7fSJdfQ== */\"","module.exports = \"<div class=\\\"custom-modal-wrap\\\" mat-dialog-content>\\r\\n\\t\\t<div mat-dialog-actions>\\r\\n\\t\\t\\t\\t<p mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></p>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t<table class=\\\"table table-striped\\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<th>Customer</th>\\r\\n\\t\\t\\t\\t<th>customer Email</th>\\r\\n\\t\\t\\t\\t<th> Amount  Paid</th>\\r\\n\\t\\t\\t\\t<th>Status</th>\\r\\n\\t\\t\\t\\t<th>Date</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let service of jobData\\\">\\t\\r\\n\\t\\t\\t\\t\\t<td>{{service.customer}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{service.customer_email}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{service.amount_paid / 100}}</td> \\r\\n\\t\\t\\t\\t\\t<td *ngIf=\\\"service.status == 'paid'\\\">Success</td> \\r\\n\\t\\t\\t\\t\\t<td *ngIf=\\\"service.status != 'paid'\\\">Failed</td> \\r\\n\\t\\t\\t\\t\\t<td>{{service.date  * 1000 | date: 'medium'}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</tbody>\\r\\n\\t\\t</table>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <i class=\\\"fa fa-align-justify\\\"></i> Users here in partner\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n         <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"row-border hover\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Username</th>\\r\\n                <th>Email</th>\\r\\n                <th>Phone</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n               <tr *ngFor=\\\"let user of users\\\">\\r\\n\\t\\t\\t\\t  <td>{{ user.firstname }} {{ user.lastname }}</td>\\r\\n\\t\\t\\t\\t  <td>{{ user.email }}</td>\\r\\n\\t\\t\\t\\t  <td>{{ user.phone }}</td>\\r\\n          <td>\\r\\n            <a [routerLink]=\\\"['/admin/partner/edit', user._id]\\\" class=\\\"btn btn-primary\\\">Edit</a>\\r\\n            <button (click)=\\\"openDialog(user._id);\\\" class=\\\"btn btn-primary\\\">Show Invoices</button>\\r\\n          </td>\\r\\n\\t\\t\\t\\t  <!--td><button (click)=\\\"deleteUser(user._id)\\\"  class=\\\"btn btn-danger\\\">Delete</button></td-->\\r\\n\\t\\t\\t  </tr>\\r\\n   \\r\\n            </tbody>\\r\\n          </table>\\r\\n         \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/.row-->\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { AdminService } from './../../../services/backend/admin.service';\r\nimport { Component, OnInit,OnDestroy, Inject } from '@angular/core';\r\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators,FormArray,FormControl } from '@angular/forms';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n  jobID:any;\r\n}\r\n\r\n@Component({\r\n  selector: 'user-list',\r\n  templateUrl: 'list.component.html'\r\n})\r\nexport class ListComponent implements OnDestroy, OnInit {\r\n\r\n dtOptions: DataTables.Settings = {};\r\n  users: any;\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  constructor(private http: HttpClient, private service: AdminService,private router: Router,public dialog: MatDialog) {}\r\n\r\n  openDialog(jobId): void {\r\n      const dialogRef = this.dialog.open(DialogOverviewExampleDialogPartnerAdmin, {\r\n        width: '1000px',\r\n        data: {jobID:jobId}\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if(result == 'Success'){\r\n          // this._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success',timeout:6000});\r\n        }\r\n        \r\n      });\r\n\t  }\r\n\r\n  ngOnInit(): void {\r\n\t  \r\n\tthis.dtOptions = {\r\n        pagingType: 'full_numbers',\r\n\t\tpageLength: 3,\r\n        columnDefs: [ { orderable: false, targets: [3] } ]\r\n    };  \r\n\t// Call gertuser service function \r\n\t var user='partner';\r\n\t this.service.getUsers(user).subscribe(res => {\r\n     console.log(res);\r\n\t   this.users = res;\r\n\t   this.dtTrigger.next();\r\n\t   // console.log(this.users);\r\n\t  \r\n    },err=>{\t\t\r\n\t\tconsole.log(err);\r\n\t\t     //   this.router.navigate(['login']);\r\n\t\t    \r\n\t});\r\n\t  \r\n  }\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  } \r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog-overview-example-dialog.html',\r\n  styleUrls : [ './dialog-overview-example-dialog.css' ]\r\n})\r\nexport class DialogOverviewExampleDialogPartnerAdmin {\r\n  jobID:any;jobData: any;button_text:any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogPartnerAdmin>, \r\n     @Inject(MAT_DIALOG_DATA) public data: DialogData, private fb: FormBuilder,private service: AdminService) {\t\r\n      this.jobID = data.jobID;\r\n      this.service.getinvoices(this.jobID).subscribe(res => {\r\n        console.log(res);\r\n          this.jobData = res.data.data;\r\n          this.button_text = 'View More';\r\n        }, err=> {\t\t\r\n          console.log(err); //   this.router.navigate(['login']);\r\n      });\r\n     }\r\n\r\n\tonNoClick(): void {\r\n\t\tthis.dialogRef.close('ignore');\r\n\t}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router,NavigationStart, NavigationEnd,ActivatedRoute,Event } from '@angular/router';\r\nimport { UserService } from './services/user.service';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { SlimLoadingBarService } from \"ng2-slim-loading-bar\";\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'body',\r\n  template: ' <router-outlet><ng2-slim-loading-bar color=\"#1695C2\"></ng2-slim-loading-bar></router-outlet>'\r\n})\r\nexport class AppComponent implements OnInit {\r\n\tlocalToken = '';notifications:any = ''; notificationCount:any = ''; \r\n  constructor(private lBar: SlimLoadingBarService, private router: Router,private userservice: UserService) { \r\n\t\r\n\tthis.router.events.subscribe((event: Event) => {  \r\n      this.loadingBarInterceptor(event);  \r\n    }); \r\n\t\r\n\t\r\n\t\t/* this.router.events.subscribe((event) => {\r\n\t\t\tif (event instanceof NavigationEnd) {\r\n\t\t\t\tthis.getNotificationCount();\r\n\t\t\t};\r\n\t\t}); */ \r\n\t\t\r\n  }\r\n\tprivate loadingBarInterceptor(event: Event) {  \r\n\t\tif (event instanceof NavigationStart) {  \r\n\t\t  this.lBar.start();  \r\n\t\t}  \r\n\t\tif (event instanceof NavigationEnd) {  \r\n\t\t  this.lBar.complete();  \r\n\t\t}      \r\n\t}\r\n\t/* getNotificationCount(){\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\tthis.userservice.getNotificationCountForUser().subscribe(result => {\r\n\t\t\t\tthis.notificationCount = result.count;\r\n\t\t\t});\r\n\t\t}\r\n\t} */\r\n  ngOnInit() {\r\n\t  \r\n    this.router.events.subscribe((evt) => {\r\n\t\t if(localStorage.getItem('login_token')){\r\n\t\t\treturn true;\r\n\t\t  }else{\r\n\t\t\t\r\n\t\t  }\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n\r\n      window.scrollTo(0, 0);\r\n    });\r\n  }\r\n \r\n}\r\n","import { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { LocationStrategy, HashLocationStrategy,PathLocationStrategy } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Module as StripeModule } from \"stripe-angular\"\r\nimport {TimeAgoPipe} from 'time-ago-pipe';\r\nimport { Globals } from './globals';\r\nimport {SlimLoadingBarModule} from \"ng2-slim-loading-bar\";\r\n\r\n\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n \r\n} from '@angular/material';\r\n\r\n\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\nimport {  } from 'angular-datatables';\r\n\r\nimport {FlashMessagesModule} from 'angular2-flash-messages';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n// Import containers\r\nimport { AdminLayoutComponent } from './containers';\r\nimport { FrontendLayoutComponent } from './containers';\r\nimport { AdminLoginComponent } from './admin/views/login/login.component';\r\n// import { EditComponent } from './admin/views/services/edit.component';\r\n\r\n\r\n//Frontend\r\nimport { P404Component } from './admin/views/error/404.component';\r\nimport { P500Component } from './admin/views/error/500.component';\r\n\r\n// users component\r\nimport { LoginComponent } from './frontend/views/users/login/login.component';\r\nimport { PaymentComponent } from './frontend/views/users/payment/payment.component';\r\nimport { IndexComponent } from './frontend/views/home/index.component';\r\nimport { RegisterComponent } from './frontend/views/users/register/register.component';\r\nimport { ProfileComponent } from './frontend/views/users/profile/profile.component';\r\nimport { EditProfileComponent } from './frontend/views/users/editprofile/editprofile.component';\r\nimport { DashboardComponent } from './frontend/views/users/dashboard/dashboard.component';\r\nimport { ForgotpasswordComponent } from './frontend/views/users/forgotpassword/forgotpassword.component';\r\nimport { ResetpasswordComponent } from './frontend/views/users/resetpassword/resetpassword.component';\r\nimport { ChangepasswordComponent } from './frontend/views/users/changepassword/changepassword.component';\r\nimport { VerifyComponent } from './frontend/views/users/register/verify.component';\r\nimport { StripePaymentDialog } from './frontend/views/users/payment/payment.component';\r\nimport { PartnerProfileComponent } from './frontend/views/users/viewpartnerprofile/viewpartnerprofile.component';\r\nimport { UserProfileComponent } from './frontend/views/users/viewuserprofile/viewuserprofile.component';\r\nimport { ViewAllNotificationsComponent } from './frontend/views/users/viewallnotifications/viewallnotifications.component';\r\nimport { NgxStripeModule } from 'ngx-stripe';\r\n\r\n//job components for user \r\nimport { CreateJobComponent } from './frontend/views/jobs/users/createjob/createjob.component';\r\nimport { EditJobComponent } from './frontend/views/jobs/users/editjob/editjob.component';\r\nimport { CompleteJobComponent } from './frontend/views/jobs/users/completejob/completejob.component';\r\nimport { ListingJobComponent } from './frontend/views/jobs/users/joblisting/joblisting.component';\r\nimport { DetailsJobComponent } from './frontend/views/jobs/users/jobdetails/jobdetails.component';\r\nimport { DialogOverviewExampleDialog } from './frontend/views/jobs/users/joblisting/joblisting.component';\r\nimport { HireDeclineDialog } from './frontend/views/jobs/users/jobdetails/jobdetails.component';\r\nimport { HireDeclineDialogDashboard } from './frontend/views/users/dashboard/dashboard.component';\r\nimport { DialogOverviewFeedback } from './frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component';\r\nimport { UsersCompletedJobsComponent } from './frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component';\r\nimport { UsersInProgressJobsComponent } from './frontend/views/jobs/users/inprogressjobs/inprogressjobs.component';\r\nimport { EditFeedbackComponent } from './frontend/views/jobs/users/editfeedback/editfeedback.component';\r\n\r\n//job components for partner \r\nimport { MakeBidComponent } from './frontend/views/jobs/partners/makebid/makebid.component';\r\nimport { ViewBidomponent } from './frontend/views/jobs/partners/viewbid/viewbid.component';\r\nimport { ListingPartnersJobComponent } from './frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component';\r\nimport { DetailsJobPartnerComponent } from './frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component';\r\nimport { WonBidsComponent } from './frontend/views/jobs/partners/wonbids/wonbids.component';\r\nimport { LostBidsComponent } from './frontend/views/jobs/partners/lostbids/lostbids.component';\r\nimport { CompletedJobsComponent } from './frontend/views/jobs/partners/completedjobs/completedjobs.component';\r\nimport { OpenBidsComponent } from './frontend/views/jobs/partners/openbids/openbids.component';\r\nimport { DialogOverviewFeedbackPartner } from './frontend/views/jobs/partners/completedjobs/completedjobs.component';\r\nimport { DialogOverviewExampleDialogAdmin} from './admin/views/jobs/list.component';\r\nimport { DialogOverviewExampleDialogPartnerAdmin} from './admin/views/partner/list.component';\r\n\r\n//import { HeaderComponent } from './frontend/views/header/header.component';\r\n//import { FooterComponent } from './frontend/views/footer/footer.component';\r\n\r\n\r\nconst APP_CONTAINERS = [\r\n  AdminLayoutComponent,\r\n  FrontendLayoutComponent\r\n];\r\n\r\nimport {\r\n  AppAsideModule,\r\n  AppBreadcrumbModule,\r\n  AppHeaderModule,\r\n  AppFooterModule,\r\n  AppSidebarModule,\r\n} from '@coreui/angular';\r\n\r\n// Import routing module\r\nimport { routes } from './app.routing';\r\n\r\n// Import 3rd party components\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\n\r\n// Services\r\nimport { UserService } from './services/user.service';\r\n\r\nimport { AuthGuard } from './services/auth.guard';\r\nimport { JobService } from './services/job.service';\r\nimport { AdminService } from './services/backend/admin.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    AppAsideModule,\r\n    AppBreadcrumbModule.forRoot(),\r\n    AppFooterModule,\r\n    AppHeaderModule,\r\n    AppSidebarModule,\r\n    PerfectScrollbarModule,\r\n    BsDropdownModule.forRoot(),\r\n\tFlashMessagesModule.forRoot(), \r\n\tRouterModule.forRoot(routes),\r\n\tReactiveFormsModule,\r\n\tHttpClientModule,\r\n\tFormsModule,\r\n\tMatAutocompleteModule,\r\n\tMatButtonModule,\r\n\tMatButtonToggleModule,\r\n\tMatCardModule,\r\n\tMatCheckboxModule,\r\n\tMatChipsModule,\r\n\tMatDatepickerModule,\r\n\tMatDialogModule,\r\n\tMatDividerModule,\r\n\tMatExpansionModule,\r\n\tMatGridListModule,\r\n\tMatIconModule,\r\n\tMatInputModule,\r\n\tMatListModule,\r\n\tMatMenuModule,\r\n\tMatNativeDateModule,\r\n\tMatPaginatorModule,\r\n\tMatProgressBarModule,\r\n\tMatProgressSpinnerModule,\r\n\tMatRadioModule,\r\n\tMatRippleModule,\r\n\tMatSelectModule,\r\n\tMatSidenavModule,\r\n\tMatSliderModule,\r\n\tMatSlideToggleModule,\r\n\tMatSnackBarModule,\r\n\tMatSortModule,\r\n\tMatStepperModule,\r\n\tMatTableModule,\r\n\tMatTabsModule,\r\n\tMatToolbarModule,\r\n\tMatTooltipModule,\r\n\tBrowserAnimationsModule,\r\n\tNgxStripeModule.forRoot('pk_test_oUX3CoG5KpQL5KxzgxwE6rQd'),\r\n\tStripeModule.forRoot(),\r\n\tSlimLoadingBarModule.forRoot() ,\r\n\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    ...APP_CONTAINERS,\r\n    P404Component,\r\n    P500Component,\r\n    AdminLoginComponent,\r\n    LoginComponent,\r\n\tTimeAgoPipe,\r\n    PaymentComponent,\r\n    RegisterComponent,\r\n\tProfileComponent,\r\n\tEditProfileComponent,\r\n\tDashboardComponent,\r\n\tForgotpasswordComponent,\r\n\tResetpasswordComponent,\r\n\tChangepasswordComponent,\r\n\tVerifyComponent,\r\n\tCreateJobComponent,\r\n\tPartnerProfileComponent,\r\n\tUserProfileComponent,\r\n\tEditJobComponent,\r\n\tMakeBidComponent,\r\n\tViewBidomponent,\r\n\tCompleteJobComponent,\r\n\tListingJobComponent,\r\n\tListingPartnersJobComponent,\r\n\tDialogOverviewExampleDialog,\r\n\tDialogOverviewExampleDialogPartnerAdmin,\r\n\tHireDeclineDialog,\r\n\tHireDeclineDialogDashboard,\r\n\tDialogOverviewFeedback,\r\n\tDialogOverviewFeedbackPartner,\r\n\tStripePaymentDialog,\r\n\tDetailsJobComponent,\r\n\tDetailsJobPartnerComponent,\r\n\tIndexComponent,\r\n\tWonBidsComponent,\r\n\tLostBidsComponent,\r\n\tCompletedJobsComponent,\r\n\tUsersCompletedJobsComponent,\r\n\tUsersInProgressJobsComponent,\r\n\tViewAllNotificationsComponent,\r\n\tOpenBidsComponent,\r\n\tEditFeedbackComponent,\r\n\tDialogOverviewExampleDialogAdmin\r\n  ],\r\n  entryComponents: [DialogOverviewExampleDialogPartnerAdmin,DialogOverviewExampleDialog,StripePaymentDialog,DialogOverviewFeedback,DialogOverviewFeedbackPartner,HireDeclineDialog,HireDeclineDialogDashboard,DialogOverviewExampleDialogAdmin],\r\n  providers: [{\r\n    provide: LocationStrategy,\r\n    useClass: PathLocationStrategy \r\n  },UserService,JobService,AdminService,Globals, AuthGuard,Title],\r\n\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Import Containers\r\nimport { AdminLayoutComponent } from './containers';\r\nimport { FrontendLayoutComponent } from './containers';\r\nimport { AdminLoginComponent } from './admin/views/login/login.component';\r\nimport { AuthGuard } from './services/auth.guard';\r\n\r\nimport { P404Component } from './admin/views/error/404.component';\r\nimport { P500Component } from './admin/views/error/500.component';\r\n\r\n\r\n// users component\r\nimport { LoginComponent } from './frontend/views/users/login/login.component';\r\nimport { PaymentComponent } from './frontend/views/users/payment/payment.component';\r\nimport { IndexComponent } from './frontend/views/home/index.component';\r\nimport { RegisterComponent } from './frontend/views/users/register/register.component';\r\nimport { ProfileComponent } from './frontend/views/users/profile/profile.component';\r\nimport { EditProfileComponent } from './frontend/views/users/editprofile/editprofile.component';\r\nimport { DashboardComponent } from './frontend/views/users/dashboard/dashboard.component';\r\nimport { ForgotpasswordComponent } from './frontend/views/users/forgotpassword/forgotpassword.component';\r\nimport { ResetpasswordComponent } from './frontend/views/users/resetpassword/resetpassword.component';\r\nimport { ChangepasswordComponent } from './frontend/views/users/changepassword/changepassword.component';\r\nimport { VerifyComponent } from './frontend/views/users/register/verify.component';\r\nimport { StripePaymentDialog } from './frontend/views/users/payment/payment.component';\r\nimport { PartnerProfileComponent } from './frontend/views/users/viewpartnerprofile/viewpartnerprofile.component';\r\nimport { UserProfileComponent } from './frontend/views/users/viewuserprofile/viewuserprofile.component';\r\nimport { ViewAllNotificationsComponent } from './frontend/views/users/viewallnotifications/viewallnotifications.component';\r\n\r\n//job components for user \r\nimport { CreateJobComponent } from './frontend/views/jobs/users/createjob/createjob.component';\r\nimport { EditJobComponent } from './frontend/views/jobs/users/editjob/editjob.component';\r\nimport { CompleteJobComponent } from './frontend/views/jobs/users/completejob/completejob.component';\r\nimport { ListingJobComponent } from './frontend/views/jobs/users/joblisting/joblisting.component';\r\nimport { DetailsJobComponent } from './frontend/views/jobs/users/jobdetails/jobdetails.component';\r\nimport { DialogOverviewExampleDialog } from './frontend/views/jobs/users/joblisting/joblisting.component';\r\nimport { UsersCompletedJobsComponent } from './frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component';\r\nimport { UsersInProgressJobsComponent } from './frontend/views/jobs/users/inprogressjobs/inprogressjobs.component';\r\nimport { EditFeedbackComponent } from './frontend/views/jobs/users/editfeedback/editfeedback.component';\r\n\r\n\r\n//job components for partner \r\nimport { MakeBidComponent } from './frontend/views/jobs/partners/makebid/makebid.component';\r\nimport { ViewBidomponent } from './frontend/views/jobs/partners/viewbid/viewbid.component';\r\nimport { ListingPartnersJobComponent } from './frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component';\r\nimport { NgxStripeModule } from 'ngx-stripe';\r\nimport { DetailsJobPartnerComponent } from './frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component';\r\n\r\nimport { WonBidsComponent } from './frontend/views/jobs/partners/wonbids/wonbids.component';\r\nimport { OpenBidsComponent } from './frontend/views/jobs/partners/openbids/openbids.component';\r\nimport { LostBidsComponent } from './frontend/views/jobs/partners/lostbids/lostbids.component';\r\nimport { CompletedJobsComponent } from './frontend/views/jobs/partners/completedjobs/completedjobs.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n     //{ path: '', component: IndexComponent}, \r\n    { \r\n        path: '', \r\n        component: FrontendLayoutComponent,\r\n\t\t\r\n        children: [\r\n\t\t\t{ path: '', \t\t\t\t\t\tcomponent: IndexComponent},\r\n\t\t\t{ path: 'login', \t\t\t\t\tcomponent: LoginComponent},\r\n\t\t\t{ path: 'register', \t\t\t\tcomponent: RegisterComponent},\r\n\t\t\t{ path: 'profile', \t\t\t\t\tcomponent: ProfileComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'edit-profile', \t\t\tcomponent: EditProfileComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'dashboard', \t\t\t\tcomponent: DashboardComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'partner-profile/:id', \t\tcomponent: PartnerProfileComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'user-info/:id/:jobId', \tcomponent: UserProfileComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'verify/:verifycode', \t\tcomponent: VerifyComponent},\r\n\t\t\t{ path: 'forgotpassword', \t\t\tcomponent: ForgotpasswordComponent},\r\n\t\t\t{ path: 'create-job', \t\t\t\tcomponent: CreateJobComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'edit-job/:jobid', \t\t\tcomponent: EditJobComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'make-bid/:jobid', \t\t\tcomponent: MakeBidComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'complete-job/:jobid/:partnerid',component: CompleteJobComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'view-bid/:jobid', \t\t\tcomponent: ViewBidomponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'detail-job/:jobid', \t\tcomponent: DetailsJobComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'view-job/:jobid', \t\t\tcomponent: DetailsJobPartnerComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'jobs', \t\t\t\t\tcomponent: ListingJobComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'alljobs', \t\t\t\t\tcomponent: ListingPartnersJobComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'change-password', \t\t\tcomponent: ChangepasswordComponent},\r\n\t\t\t{ path: 'purchase-plans', \t\t\tcomponent: PaymentComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'resetpassword/:verifycode',component: ResetpasswordComponent},\r\n\t\t\t{ path: 'won-bids', \t\t\t\tcomponent: WonBidsComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'lost-bids', \t\t\t\tcomponent: LostBidsComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'completed-jobs', \t\t\tcomponent: CompletedJobsComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'user-completed-jobs', \t\tcomponent: UsersCompletedJobsComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'user-in-progress-jobs', \tcomponent: UsersInProgressJobsComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'open-bids', \t\t\t\tcomponent: OpenBidsComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'edit-feedback/:reviewid', \tcomponent: EditFeedbackComponent,canActivate: [AuthGuard]},\r\n\t\t\t{ path: 'view-all-notifications', \tcomponent: ViewAllNotificationsComponent,canActivate: [AuthGuard]},\r\n        ]\r\n    },\r\n    /* {\r\n\t\tpath: '404',\r\n\t\tcomponent: P404Component,\r\n\t\tdata: {\r\n\t\t  title: 'Page 404'\r\n\t\t}\r\n   },\r\n   {\r\n    path: '500',\r\n    component: P500Component,\r\n    data: {\r\n      title: 'Page 500'\r\n    }\r\n   }, */\r\n\r\n  //  Admin Routing \r\n \r\n  {\r\n    path: 'admin',\r\n    component: AdminLoginComponent,\r\n    data: {\r\n      title: 'Login Page'\r\n    }\r\n  },\r\n  {\r\n    path: '',\r\n    component: AdminLayoutComponent,\r\n    data: {\r\n      title: 'Home'\r\n    },\r\n    children: [\r\n      {\r\n        path: 'admin/users',\r\n        loadChildren: './admin/views/users/users.module#UsersModule'\r\n      }, \r\n\t   {\r\n        path: 'admin/partner',\r\n        loadChildren: './admin/views/partner/users.module#UsersModule'\r\n      },\r\n\t   {\r\n        path: 'admin/plan',\r\n        loadChildren: './admin/views/plans/plan.module#PlanModule'\r\n      },\r\n      {\r\n        path: 'admin/services',\r\n        loadChildren: './admin/views/services/services.module#ServicesModule'\r\n      },\r\n      {\r\n        path: 'admin/jobs',\r\n        loadChildren: './admin/views/jobs/jobs.module#JobsModule'\r\n      },\r\n      {\r\n        path: 'admin/dashboard',\r\n        loadChildren: './admin/views/dashboard/dashboard.module#DashboardModule'\r\n      }\r\n    ]\r\n  },\r\n  \r\n  { path: '**', component: P404Component }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \".app-header {\\r\\n   height: 65px;\\r\\n}\\r\\n.app-header {\\r\\n    flex: 0 0 65px;\\r\\n}\\r\\n@media (min-width: 992px){\\r\\n\\t:host /deep/ .header-fixed .app-body {\\r\\n\\t\\tmargin-top: 65px;\\r\\n\\t}\\r\\n\\t.app-body {\\r\\n\\t\\tmargin-top: 65px;\\r\\n\\t}\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFpbmVycy9hZG1pbi1sYXlvdXQvYWRtaW4tbGF5b3V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7R0FDRyxZQUFZO0FBQ2Y7QUFDQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTtDQUNDO0VBQ0MsZ0JBQWdCO0NBQ2pCO0NBQ0E7RUFDQyxnQkFBZ0I7Q0FDakI7QUFDRCIsImZpbGUiOiJzcmMvYXBwL2NvbnRhaW5lcnMvYWRtaW4tbGF5b3V0L2FkbWluLWxheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFwcC1oZWFkZXIge1xyXG4gICBoZWlnaHQ6IDY1cHg7XHJcbn1cclxuLmFwcC1oZWFkZXIge1xyXG4gICAgZmxleDogMCAwIDY1cHg7XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCl7XHJcblx0Omhvc3QgL2RlZXAvIC5oZWFkZXItZml4ZWQgLmFwcC1ib2R5IHtcclxuXHRcdG1hcmdpbi10b3A6IDY1cHg7XHJcblx0fVxyXG5cdC5hcHAtYm9keSB7XHJcblx0XHRtYXJnaW4tdG9wOiA2NXB4O1xyXG5cdH1cclxufSJdfQ== */\"","module.exports = \"<app-header\\r\\n  [fixed]=\\\"true\\\"\\r\\n  [navbarBrandFull]=\\\"{src: 'assets/img/brand/logo.svg', width: 89, height: 45, alt: 'Movers'}\\\"\\r\\n  [navbarBrandMinimized]=\\\"{src: 'assets/img/brand/logo.svg', width: 50, height: 40, alt: 'Movers'}\\\"\\r\\n  [sidebarToggler]=\\\"'lg'\\\"\\r\\n  [asideMenuToggler]=\\\"'lg'\\\"\\r\\n  [navbarBrandRouterLink]=\\\"'/admin/dashboard'\\\"\\r\\n  >\\r\\n \\r\\n  <ul class=\\\"nav navbar-nav ml-auto\\\">\\r\\n   \\r\\n    <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom right\\\">\\r\\n      <a class=\\\"nav-link\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" dropdownToggle (click)=\\\"false\\\">\\r\\n        <img src=\\\"assets/img/avatars/download.png\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\"/>\\r\\n      </a>\\r\\n      <div class=\\\"dropdown-menu dropdown-menu-right\\\" *dropdownMenu aria-labelledby=\\\"simple-dropdown\\\">\\r\\n         <div class=\\\"dropdown-header text-center\\\"><strong>Account</strong></div>\\r\\n\\t\\t <a (click)=\\\"logout()\\\" href=\\\"javascript:void();\\\"  class=\\\"dropdown-item\\\"  routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-lock\\\"></i> Logout</a>\\r\\n\\t\\t\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n</app-header>\\r\\n<div class=\\\"app-body\\\">\\r\\n  <app-sidebar [fixed]=\\\"true\\\" [display]=\\\"'lg'\\\">\\r\\n    <app-sidebar-nav [navItems]=\\\"navItems\\\" [perfectScrollbar] [disabled]=\\\"sidebarMinimized\\\"></app-sidebar-nav>\\r\\n    <app-sidebar-minimizer></app-sidebar-minimizer>\\r\\n  </app-sidebar>\\r\\n  <!-- Main content -->\\r\\n  <main class=\\\"main\\\">\\r\\n    <!-- Breadcrumb -->\\r\\n    <!-- breaking change 'cui-breadcrumb' -->\\r\\n    <cui-breadcrumb>\\r\\n      <!-- Breadcrumb Menu-->\\r\\n      <li class=\\\"breadcrumb-menu d-md-down-none\\\"></li>\\r\\n    </cui-breadcrumb>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div><!-- /.container-fluid -->\\r\\n  </main>\\r\\n</div>\\r\\n<app-footer>\\r\\n  <span><a routerLink=\\\"/admin/dashboard\\\">Movers</a> &copy; 2019</span>\\r\\n  <span class=\\\"ml-auto\\\">Powered by <a routerLink=\\\"/admin/dashboard\\\">Movers and Packers</a></span>\\r\\n</app-footer>\\r\\n\"","import { Component, OnDestroy, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { navItems } from '../../admin/_admin_nav';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls : [ './admin-layout.component.css' ]\r\n\r\n})\r\nexport class AdminLayoutComponent implements OnDestroy {\r\n  public navItems = navItems;\r\n  public sidebarMinimized = true;\r\n  private changes: MutationObserver;\r\n  public element: HTMLElement;\r\n  constructor(private router: Router,@Inject(DOCUMENT) _document?: any) {\r\n\t  \r\n    // if admin not logged in then redirect to the admin login \r\n\tvar token = localStorage.getItem('admin_token'); \r\n\tif(token==''){\r\n\t\t this.router.navigate(['admin']);\r\n\t }\r\n\t \r\n    this.changes = new MutationObserver((mutations) => {\r\n      this.sidebarMinimized = _document.body.classList.contains('sidebar-minimized');\r\n    });\r\n    this.element = _document.body;\r\n    this.changes.observe(<Element>this.element, {\r\n      attributes: true,\r\n      attributeFilter: ['class']\r\n    });\r\n  }\r\n  // Logout \r\n  logout(){\r\n\t  localStorage.setItem('admin_token', '');\r\n\t  this.router.navigate(['/admin']);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.changes.disconnect();\r\n  }\r\n}\r\n","export * from './admin-layout.component';\r\n","module.exports = \"/* .navbar-light {\\r\\n  overflow: hidden;\\r\\n}\\r\\n */\\r\\n.navbar-light a {\\r\\n  float: left;\\r\\n}\\r\\n.bottom-line span{\\r\\n    font-size: 14px;\\r\\n    color: #fff;\\r\\n    line-height: 24px;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.bottom-line span a{color:#1690be}\\r\\n.fl_left{float:left}\\r\\n.fl_right{float:right}\\r\\n.dropdown,.dropdown-note {\\r\\n  float: left;\\r\\n}\\r\\n.dropdown-note{\\r\\n\\tposition:relative;\\r\\n}\\r\\n.dropdown .dropbtn {\\r\\n font-size: inherit;\\r\\nborder: none;\\r\\noutline: none;\\r\\npadding: 8px 5px;\\r\\nbackground-color: inherit;\\r\\nmargin: 0;\\r\\ncolor: #203767;\\r\\n}\\r\\n/* .navbar-light a:hover, .dropdown:hover .dropbtn {\\r\\n  background-color: #fff;\\r\\n} */\\r\\n.dropdown-content{\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    min-width: 200px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n    background: #fff;\\r\\n    top: 100%;\\r\\n   right:0;\\r\\n}\\r\\n.dropdown-note {\\r\\n    margin-left: 12px;\\r\\n}\\r\\n.dropdown-content-note {\\r\\n    position: absolute;\\r\\n    min-width: 170px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n    background: #fff;\\r\\n    top: 100%;\\r\\n    \\r\\n    right: 0;\\r\\n\\ttransition-delay: .4s;\\r\\n\\t -webkit-transition: height .5s ease;\\r\\n        -webkit-transition-delay: .4s;\\r\\n}\\r\\n.notification.dropdown-toggle::after {\\r\\n    display: none;\\r\\n}\\r\\n.navbar-nav .dropdown-menu {\\r\\n    max-width: 245px;\\r\\n    min-width: 245px;\\r\\n}\\r\\n.dropdown-item {\\r\\n    white-space: normal;\\r\\n    word-wrap: break-word;\\r\\n}\\r\\n.dropdown-content a,.dropdown-content-note a {\\r\\n  float: none;\\r\\n  color: black;\\r\\n  padding: 12px 16px;\\r\\n  text-decoration: none;\\r\\n  display: block;\\r\\n  text-align: left;\\r\\n  border-bottom:1px dashed #ccc;\\r\\n}\\r\\n/* .dropdown-note:hover .dropdown-content {\\r\\n\\tdisplay: none;\\r\\n}\\t */\\r\\n.dropdown:hover .dropdown-content {\\r\\n  display: block;\\r\\n}\\r\\n.dropdown-item.active, .dropdown-item:active {\\r\\n    color: #fff !important;\\r\\n    text-decoration: none;\\r\\n    background-color: #0096c5 !important;\\r\\n}\\r\\n.cta-btn a:hover,.cta-btn a.active {\\r\\n\\tbackground:#1695C2;\\r\\n\\tcolor:#fff !important;\\r\\n}\\r\\n.cta-btn a:hover .fas,.cta-btn a.active .fas{\\r\\n\\tcolor:#fff !important;\\t\\r\\n}\\r\\n.badge {\\r\\n\\tposition: relative;\\r\\n\\ttop: -10px;\\r\\n\\tright: -10px;\\r\\n\\tpadding: 5px 10px;\\r\\n\\tborder-radius: 50%;\\r\\n\\tbackground: red;\\r\\n\\tcolor: white;\\r\\n}\\r\\nspan.fa-bell {\\r\\n  display: block;\\r\\n   \\r\\n  padding: 10px;\\r\\n\\r\\n  margin: 0 auto;\\r\\n  text-align: center;\\r\\n  position: relative;\\r\\n}\\r\\nmark {\\r\\n  border-radius: 20px;   \\r\\n  border: 2px solid #FFF;\\r\\n  width: 20px;\\r\\n  height: 20px;  \\r\\n  background-color: #FF6B6B;\\r\\n  position: absolute;\\r\\n  top: -5px;\\r\\n  left: -10px;\\r\\n  font-size: 10px;\\r\\n  line-height: 16px;\\r\\n  font-family: 'Roboto', sans-serif;\\r\\n  font-weight: 400;\\r\\n  color: #FFF;\\r\\n  font-weight: 700;\\r\\n}\\r\\na mark.big {\\r\\n  width: 22px;\\r\\n  height: 22px;\\r\\n  border-radius: 20px;\\r\\n  line-height: 15px;  \\r\\n  font-size: 12px;  \\r\\n  top: -1px;\\r\\n  left: 20px;\\r\\n}\\r\\na > span > mark {\\r\\n  -webkit-animation-name: bounceIn;\\r\\n          animation-name: bounceIn;\\r\\n  transform-origin: center bottom;\\r\\n  -webkit-animation-duration: 1s;\\r\\n          animation-duration: 1s;\\r\\n  -webkit-animation-fill-mode: both;\\r\\n          animation-fill-mode: both;   \\r\\n-webkit-animation-iteration-count: 1;\\r\\n        animation-iteration-count: 1;  \\r\\n}\\r\\na > span > mark.swing {\\r\\n  transform-origin: top center;\\r\\n  -webkit-animation-name: swing;\\r\\n          animation-name: swing;\\r\\n}\\r\\n.username_setting{\\r\\n\\tborder: 1px solid #0096c5;\\r\\n    border-radius: 45%;\\r\\n    padding: 8px 15px;\\r\\n    margin: 2px 10px;\\r\\n    background: #0096c5;\\r\\n    color: #fff;\\r\\n}\\r\\n.username_setting:hover{\\r\\n\\tbackground: #ffffff;\\r\\n\\tcolor: #0096c5;\\r\\n}\\r\\n.logoClass{height:64px}\\r\\n@media (max-width: 768px){\\r\\n\\t.logoClass{height:48px}\\r\\n}\\r\\n@media (max-width: 575.98px){\\r\\n\\t.logoClass{height:32px}\\r\\n\\t.dropdown[_ngcontent-c0] .dropbtn[_ngcontent-c0]{\\r\\n\\t\\tfont-size:12px\\r\\n\\t}\\r\\n\\t\\r\\n\\t:host /deep/ .dropdown[_ngcontent-nia-c0] .dropbtn[_ngcontent-nia-c0]{\\r\\n\\t\\tfont-size:12px\\r\\n\\t}\\r\\n\\t.mat-horizontal-stepper-header-container{display:none}\\r\\n\\t\\r\\n\\t.dropdown .dropbtn {\\r\\n\\t\\tfont-size:12px\\r\\n\\t}\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<!--------------------------- MENU ----------------------------------->\\r\\n      <header> \\r\\n      \\r\\n\\t\\t   \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t \\r\\n          <nav  class=\\\"navbar navbar-expand-lg custom_navbar_1\\\">\\r\\n\\t\\t\\t  <div class=\\\"container\\\">\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t\\t <a  class=\\\"navbar-brand\\\" *ngIf =\\\"!isLoggedIn\\\" routerLink=\\\"/\\\" ><img class=\\\"img-fluid logoClass\\\" alt=\\\"MoveLaunch\\\" src=\\\"../../../assets/images/logo.png\\\"></a>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t<a  class=\\\"navbar-brand\\\" *ngIf =\\\"isLoggedIn && setusertype=='user'\\\" routerLink=\\\"/dashboard\\\" ><img class=\\\"img-fluid logoClass\\\" alt=\\\"MoveLaunch\\\" src=\\\"../../../assets/images/logo.png\\\"></a>\\r\\n\\t\\t\\t \\r\\n\\t\\t\\t\\t<a  class=\\\"navbar-brand\\\" *ngIf =\\\"isLoggedIn && setusertype=='partner'\\\" routerLink=\\\"/alljobs\\\" ><img class=\\\"img-fluid logoClass\\\" alt=\\\"MoveLaunch\\\" src=\\\"../../../assets/images/logo.png\\\"></a>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExample07\\\" aria-controls=\\\"navbarsExample07\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n\\t\\t\\t\\t  <i class=\\\"fa fa-bars\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExample07\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"get-free-quotes ml-auto mr-0 mr-lg-4\\\"><a *ngIf =\\\"isLoggedIn && setusertype=='user'\\\"  routerLink=\\\"/create-job\\\" [class.active]=\\\"router.isActive('/create-job')\\\" routerLinkActive=\\\"active\\\" >Get Free Moving Quotes</a></div>\\r\\n\\t\\t\\t\\t <!-- <div class=\\\"createjob ml-auto mr-4\\\"><a *ngIf =\\\"isLoggedIn && setusertype=='user'\\\"  routerLink=\\\"/create-job\\\" [class.active]=\\\"router.isActive('/create-job')\\\" routerLinkActive=\\\"active\\\" >Create Job</a></div> -->\\t\\r\\n\\t\\t\\t\\t  <ul class=\\\"navbar-nav align-items-lg-center\\\">\\r\\n\\t\\t\\t\\t\\t<li *ngIf =\\\"isLoggedIn\\\"  class=\\\"nav-item active dropdown\\\">\\r\\n\\t\\t\\t\\t\\t  <a class=\\\"nav-link notification\\\" (click)=\\\"toggle()\\\"  data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"fas fa-bell\\\"></i><span class=\\\"counter\\\">{{notificationCount}}</span></a>\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"dropdown-menu dropdown-content-note\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/detail-job/{{notification.jobId._id}}\\\" *ngFor=\\\"let notification of notifications\\\" (click)= \\\"readNotification(notification.jobId._id)\\\">{{notification.notificationId.notification_message}} <b><i>{{notification.service_name}} on {{notification.jobId.created_at | date:'mediumDate'}}</i></b> </a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/view-all-notifications\\\">View All Notifications</a>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li *ngIf =\\\"!isLoggedIn\\\" class=\\\"nav-item active\\\">\\r\\n\\t\\t\\t\\t\\t  <a routerLink=\\\"/login\\\"  class=\\\"p-2 text-dark\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fas fa-sign-in-alt\\\"></i> Login</a> \\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li *ngIf =\\\"!isLoggedIn\\\" class=\\\"nav-item active\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/register\\\"  class=\\\"p-2 text-dark\\\"  routerLinkActive=\\\"active\\\" (click) = \\\"setuserpartner('user')\\\" > <i class=\\\"fas fa-key\\\"></i> Sign Up</a> \\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li *ngIf =\\\"isLoggedIn && setusertype=='user'\\\" class=\\\"nav-item dropdown\\\" >\\r\\n\\t\\t\\t\\t\\t  <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\"  data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Estimates</a>\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"dropdown-menu\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"dropdown-item\\\" *ngIf =\\\"isLoggedIn && setusertype=='user'\\\"  routerLink=\\\"/dashboard\\\" [class.active]=\\\"router.isActive('/dashboard')\\\" routerLinkActive=\\\"active\\\"  >Dashboard</a>\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"dropdown-item\\\" *ngIf =\\\"isLoggedIn && setusertype=='user'\\\"  routerLink=\\\"/create-job\\\" [class.active]=\\\"router.isActive('/create-job')\\\" routerLinkActive=\\\"active\\\"  >Create New Estimates</a>\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"dropdown-item\\\"*ngIf =\\\"isLoggedIn && setusertype=='user'\\\" routerLink=\\\"/jobs\\\" [class.active]=\\\"router.isActive('/jobs')\\\" routerLinkActive=\\\"active\\\">All Estimates Created</a>\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"dropdown-item\\\"*ngIf =\\\"isLoggedIn && setusertype=='user'\\\" routerLink=\\\"/user-in-progress-jobs\\\" [class.active]=\\\"router.isActive('/user-in-progress-jobs')\\\" routerLinkActive=\\\"active\\\">All Estimates Received</a>\\r\\n\\t\\t\\t\\t\\t\\t<a class=\\\"dropdown-item\\\" *ngIf =\\\"isLoggedIn && setusertype=='user'\\\" routerLink=\\\"/user-completed-jobs\\\" [class.active]=\\\"router.isActive('/user-completed-jobs')\\\" routerLinkActive=\\\"active\\\" >History of Accepted Estimates</a>\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<li *ngIf =\\\"isLoggedIn && setusertype=='partner'\\\" class=\\\"nav-item dropdown\\\">\\r\\n\\t\\t\\t\\t\\t  <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\"  data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Estimates</a>\\r\\n\\t\\t\\t\\t\\t  <div class=\\\"dropdown-menu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"isLoggedIn && setusertype=='partner'\\\" routerLink=\\\"/alljobs\\\"  class=\\\"dropdown-item\\\" [class.active]=\\\"router.isActive('/alljobs')\\\" routerLinkActive=\\\"active\\\">New Estimates</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"isLoggedIn && setusertype=='partner'\\\" routerLink=\\\"/won-bids\\\"  class=\\\"dropdown-item\\\" [class.active]=\\\"router.isActive('/won-bids')\\\" routerLinkActive=\\\"active\\\">Won Estimates</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"isLoggedIn && setusertype=='partner'\\\" routerLink=\\\"/lost-bids\\\"  class=\\\"dropdown-item\\\" [class.active]=\\\"router.isActive('/lost-bids')\\\" routerLinkActive=\\\"active\\\">Lost Estimates</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"isLoggedIn && setusertype=='partner'\\\" routerLink=\\\"/open-bids\\\"  class=\\\"dropdown-item\\\" [class.active]=\\\"router.isActive('/open-bids')\\\" routerLinkActive=\\\"active\\\">Open Estimates</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"isLoggedIn && setusertype=='partner'\\\" routerLink=\\\"/completed-jobs\\\"  class=\\\"dropdown-item\\\" [class.active]=\\\"router.isActive('/completed-jobs')\\\" routerLinkActive=\\\"active\\\">Completed Estimates</a>\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li *ngIf =\\\"isLoggedIn\\\" class=\\\"nav-item dropdown\\\">\\r\\n\\t\\t\\t\\t\\t  <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\"  data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n\\t\\t\\t\\t\\t  <span class=\\\"username_setting\\\">{{setFirstChar | uppercase}}</span>{{userdetail.firstname}}</a>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"dropdown-menu dropdown-menu-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t   \\r\\n\\t\\t\\t\\t\\t\\t   <a *ngIf =\\\"isLoggedIn && setusertype=='partner' && userdetail.customer_id\\\" [class.active]=\\\"router.isActive('/profile')\\\" routerLink=\\\"/profile\\\"  class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" > My Account</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"isLoggedIn && setusertype=='user'\\\" [class.active]=\\\"router.isActive('/profile')\\\" routerLink=\\\"/profile\\\"  class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" > My Account</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t   \\r\\n\\t\\t\\t\\t\\t\\t   <a *ngIf =\\\"isLoggedIn && setusertype=='partner' && userdetail.customer_id\\\" routerLink=\\\"/purchase-plans\\\" [class.active]=\\\"router.isActive('/purchase-plans')\\\"  class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" > Upgrade Plan</a> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"isLoggedIn && setusertype=='partner' && !userdetail.customer_id\\\" routerLink=\\\"/purchase-plans\\\" [class.active]=\\\"router.isActive('/purchase-plans')\\\"  class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" > Purchase Plan</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t   <a class=\\\"dropdown-item\\\" routerLink=\\\"/view-all-notifications\\\" ><span>Notifications</span></a>\\r\\n\\t\\t\\t\\t\\t\\t   \\r\\n\\t\\t\\t\\t\\t\\t   <a *ngIf =\\\"isLoggedIn\\\" href=\\\"javascript:void(0)\\\" (click) = \\\"logout()\\\" routerLinkActive=\\\"active\\\"  class=\\\"dropdown-item\\\" > Logout</a> \\r\\n\\t\\t\\t\\t\\t\\t   \\r\\n\\t\\t\\t\\t\\t\\t   \\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</li>\\t\\t\\r\\n\\t\\t\\t\\t  </ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t</nav> \\r\\n\\r\\n\\r\\n     \\r\\n\\t </header>  \\r\\n \\r\\n<!--------------------------- END MENU  ------------------------------>\\r\\n\\r\\n\\t<div class=\\\"content_wrapper\\\">\\r\\n<!--------------------------- BODY ----------------------------------->\\r\\n\\t\\r\\n      <router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n<!-------------------------- END BODY ---------------------------------->\\r\\n</div>\\r\\n<!--------------------------- FOOTER ----------------------------------->\\r\\n\\r\\n\\r\\n\\t<footer class=\\\"ft\\\">\\r\\n\\t\\t<div class=\\\"bottom-line\\\">\\r\\n\\t\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<span class=\\\"fl_left\\\">© 2019 MoveLaunch All rights reserved.</span>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<span class=\\\"fl_right\\\">Powered By  <a href=\\\"https://www.webethicssolutions.com/\\\" target=\\\"_blank\\\">Webethics Solutions</a></span>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</footer> \\r\\n\\r\\n\\r\\n<!--------------------------- END FOOTER ----------------------------------->\\r\\n\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { navItems } from '../../frontend/_front_nav';\r\nimport { UserService } from '../../services/user.service';\r\nimport { JobService } from '../../services/job.service';\r\nimport { Router, NavigationEnd,Event } from '@angular/router';\r\nimport { ActivatedRoute,ActivationEnd } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-frontheader',\r\n  templateUrl: './frontend-layout.component.html',\r\n  styleUrls: [ './frontend-layout.component.css' ]\r\n  \r\n})\r\nexport class FrontendLayoutComponent implements OnInit {\r\n  public navItems = navItems;\r\n  //public sidebarMinimized = true; \r\n  private changes: MutationObserver;\r\n  public element: HTMLElement;\r\n  user_id = '';\r\n  userdetail:any = ''; setFirstChar:any = '';jobservices:any = '';\r\n  setusertype:any = '';  \r\n  notificationCount:any=0;  notifications:any = '';\r\n  logged_in = false;\r\n  show_dialog : boolean = false;\r\n  isLoggedIn:boolean=false;\r\n\tconstructor(private router: Router,private activatedRoute : ActivatedRoute,private userservice: UserService,private jobservice: JobService,@Inject(DOCUMENT) _document?: any) {\r\n\t\t\r\n\t\t\tthis.router.routeReuseStrategy.shouldReuseRoute = function(){\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\r\n\t\t this.changes = new MutationObserver((mutations) => {\r\n\t\t\t\r\n\t\t // this.sidebarMinimized = _document.body.classList.contains('sidebar-minimized');\r\n\t\t});\r\n\t\t\r\n\t\tthis.element = _document.body;\r\n\t\tthis.changes.observe(<Element>this.element, {\r\n\t\t  attributes: true,\r\n\t\t  attributeFilter: ['class']\r\n\t\t}); \r\n\t\t//this.getNotificationCount();\r\n\t\t/* this.router.events.subscribe((event) => {\r\n\t\t\tif (event instanceof NavigationEnd) {\r\n\t\t\t\tthis.getLoggedInUser();\r\n\t\t\t\tthis.getNotificationCount();\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t});  \r\n */\r\n\t\t\tthis.getServices();\r\n\t\t\t\r\n\t}\r\n\tgetServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t}); \r\n\t}\r\n\tngOnInit() {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\tthis.isLoggedIn =  true ;\r\n\t\t\tthis.setusertype =  localStorage.getItem('user_role');\r\n\t\t\tthis.userdetail = {firstname:localStorage.getItem('firstname'),lastname:localStorage.getItem('lastname'),customer_id:localStorage.getItem('customer_id'),totalbid:localStorage.getItem('total_bid')};\r\n\t\t\tthis.setFirstChar = localStorage.getItem('firstname')[0];\r\n\t\t}else{\r\n\t\t\tthis.router.navigate([this.router.url]);\r\n\t\t\tthis.isLoggedIn =  false ;\r\n\t\t}\r\n\t\t\r\n\t\t//console.log('fist='+this.setFirstChar);\r\n\t}\r\n\t\r\n\tlogout(){\r\n\t\tlocalStorage.clear();\r\n\t\tthis.router.navigate(['/login']);\r\n\t} \r\n\tngOnDestroy(): void {\r\n\t\tthis.changes.disconnect();\r\n\t\r\n\t}\r\n\tgetLoggedInUser(){\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\tthis.userservice.getUsers().subscribe(result => {\r\n\t\t\t\tthis.userdetail = result[0];\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tgetNotificationCount(){\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\t/* this.notificationCount = 0; */\r\n\t\t\tthis.userservice.getNotificationCountForUser().subscribe(result1 => {\r\n\t\t\t\tthis.notificationCount = result1.count;\r\n\t\t\t}); \r\n\t\t}\r\n\t}\r\n\tgetAllNotifications(){\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\tthis.userservice.getAllNotifications(5).subscribe(result => {\r\n\t\t\t\tthis.notifications = result.notfication;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treadNotification(jobId){\r\n\t\tthis.show_dialog = !this.show_dialog;\r\n\t\t\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\tthis.userservice.readAllNotifications().subscribe(result => {\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t} \r\n\t}\r\n\ttoggle() {\r\n\t\tthis.show_dialog = !this.show_dialog;\r\n\t\t\r\n\t\t\tif(this.show_dialog){\r\n\t\t\t\tthis.userservice.getAllNotifications(5).subscribe(result => {\r\n\t\t\t\t\tconsole.log(result.notfication);\r\n\t\t\t\t\tthis.notifications = result.notfication;\r\n\t\t\t\t\tthis.notifications.forEach((x,key) => {\r\n\t\t\t\t\t\tvar setApp = [];\r\n\t\t\t\t\t\tfor(var i=0;i<this.jobservices.length;i++ ){\r\n\t\t\t\t\t\t\tvar servic = x.jobId.serviceId;\r\n\t\t\t\t\t\t\tvar _id = this.jobservices[i]._id;\r\n\t\t\t\t\t\t\tvar _name = this.jobservices[i].name;\r\n\t\t\t\t\t\t\t$.each(servic,function(index,value){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(value != \"\" && value == _id){\r\n\t\t\t\t\t\t\t\t\t var item = _name;\r\n\t\t\t\t\t\t\t\t\t setApp[i] = item;\r\n\t\t\t\t\t\t\t\t } \r\n\t\t\t\t\t\t\t });  \t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar filtered = setApp.filter(function (el) {\r\n\t\t\t\t\t\t  return el != null;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tthis.notifications[key].service_name = filtered.join(',');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.userservice.readAllNotifications().subscribe(result => {\r\n\r\n\t\t\t\t}); \r\n\t\t\t}\r\n\t}\r\n\t/* isLoggedIn() {\r\n\t\t\r\n\t\tthis.setusertype =  localStorage.getItem('user_role');\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\treturn true ;\r\n\t\t}else{\r\n\t\t\treturn false ;\r\n\t\t}\r\n\t\t\r\n\t} */\r\n\tsetuserpartner(usertype){\r\n\t\tlocalStorage.setItem('usertype',usertype);\r\n\t}\r\n\t \r\n}\r\n","export * from './frontend-layout.component';\r\n","export * from './admin-layout';\r\nexport * from './frontend-layout';\r\n\r\n","export interface NavData {\r\n  name?: string;\r\n  url?: string;\r\n  icon?: string;\r\n  badge?: any;\r\n  title?: boolean;\r\n  children?: any;\r\n  variant?: string;\r\n  attributes?: object;\r\n  divider?: boolean;\r\n  class?: string;\r\n  label?: any;\r\n  wrapper?: any;\r\n}\r\n\r\nexport const navItems: NavData[] = [\r\n  {\r\n    name: 'Login',\r\n    url: '/login',\r\n  },\r\n  {\r\n\tname: 'Sign Up',\r\n\turl: '/register',\r\n   },\r\n   {\r\n\tname: 'Profile',\r\n\turl: '/profile',\r\n   }\r\n];\r\n","module.exports = \".bnr-txt a{\\r\\n\\tbackground-color:#37D61A;\\r\\n\\tcolor:#fff;\\r\\n\\tfont-weight:600;\\r\\n}\\r\\n/* .service-cont div[class*=\\\"col\\\"] .serv-txt h4{\\r\\n\\tpadding-top:85px\\r\\n} */\\r\\n.serviceclass {\\r\\n    width: 100%;\\r\\n}\\r\\n.how-to:nth-child(n+3)::before {\\r\\n    display:none;\\r\\n}\\r\\n/* .service-cont div[class*=\\\"col\\\"] label.serviceclass{\\r\\n\\t    background: #179dce;\\r\\n​\\r\\n}\\r\\n.serv-txt h4 {\\r\\n​\\r\\n\\t\\r\\n\\tfont-size: 26px;\\r\\n    text-transform: capitalize;\\r\\n    color: #fff;\\r\\n    padding: 0 5px;\\r\\n    margin: 0;\\r\\n    line-height: 40px;\\r\\n\\t\\r\\n}\\r\\n */\\r\\n.service-cont div[class*=\\\"col\\\"]::before {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    content: \\\"\\\";\\r\\n    border: 1px dashed #C8D3D7;\\r\\n    margin: 5px;\\r\\n}\\r\\n.service-cont div[class*=\\\"col\\\"]:hover::before{\\r\\n    border: 1px dashed #ECF7FB;\\r\\n}\\r\\n​\\r\\n.service-cont .container {\\r\\n    max-width: 1350px;\\r\\n}\\r\\n.service-cont div[class*=\\\"col\\\"] {\\r\\n    background-color: #ecf7fb;\\r\\n    height: 200px;\\r\\n    padding: 0;\\r\\n    margin: 0 20px;\\r\\n        margin-top: 0px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n    border-radius: 5px;\\r\\n    margin-top: -105px;\\r\\n    box-shadow: 1px 2px 31px -7px rgba(0,0,0,0.69);\\r\\n    transition: all ease 0.3s;\\r\\n}\\r\\n.service-cont div[class*=\\\"col\\\"]:hover {\\r\\n    box-shadow: 1px 2px 31px 7px rgba(0,0,0,0.69);\\r\\n}\\r\\n.serv-txt img{\\r\\n margin-bottom:15px;\\r\\n}\\r\\n.serv-txt h4 {\\r\\n    font-size: 16px;\\r\\n    text-transform: uppercase;\\r\\n    color: #202020;\\r\\n    padding: 0 15px;\\r\\n    margin: 0;\\r\\n}\\r\\n.service-cont div[class*=\\\"col\\\"]:hover h4 {\\r\\n    color: #179DCE;\\r\\n}\\r\\n​\\r\\n@media(max-width:991px){\\r\\n.service-cont div[class*=\\\"col\\\"] {\\r\\n    min-width: 28.333%;\\r\\n    margin-top: 50px;\\r\\n}\\t\\r\\n.banner-cont {\\r\\n    padding-bottom: 40px;\\r\\n    padding-top: 40px;\\r\\n}\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvaG9tZS9pbmRleC1jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0Msd0JBQXdCO0NBQ3hCLFVBQVU7Q0FDVixlQUFlO0FBQ2hCO0FBQ0E7O0dBRUc7QUFDSDtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7RUFlRTtBQUNGO0lBQ0ksa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxRQUFRO0lBQ1IsTUFBTTtJQUNOLFNBQVM7SUFDVCxXQUFXO0lBQ1gsMEJBQTBCO0lBQzFCLFdBQVc7QUFDZjtBQUNBO0lBQ0ksMEJBQTBCO0FBQzlCO0FBQ0E7O0lBRUksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLFVBQVU7SUFDVixjQUFjO1FBQ1YsZUFBZTtJQUduQixhQUFhO0lBR0wsbUJBQW1CO0lBQzNCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBRVYsOENBQThDO0lBR3RELHlCQUF5QjtBQUM3QjtBQUNBO0lBR1ksNkNBQTZDO0FBQ3pEO0FBQ0E7Q0FDQyxrQkFBa0I7QUFDbkI7QUFDQTtJQUNJLGVBQWU7SUFDZix5QkFBeUI7SUFDekIsY0FBYztJQUNkLGVBQWU7SUFDZixTQUFTO0FBQ2I7QUFDQTtJQUNJLGNBQWM7QUFDbEI7QUFDQTs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLG9CQUFvQjtJQUNwQixpQkFBaUI7QUFDckI7QUFDQSIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2hvbWUvaW5kZXgtY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ibnItdHh0IGF7XHJcblx0YmFja2dyb3VuZC1jb2xvcjojMzdENjFBO1xyXG5cdGNvbG9yOiNmZmY7XHJcblx0Zm9udC13ZWlnaHQ6NjAwO1xyXG59XHJcbi8qIC5zZXJ2aWNlLWNvbnQgZGl2W2NsYXNzKj1cImNvbFwiXSAuc2Vydi10eHQgaDR7XHJcblx0cGFkZGluZy10b3A6ODVweFxyXG59ICovXHJcbi5zZXJ2aWNlY2xhc3Mge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmhvdy10bzpudGgtY2hpbGQobiszKTo6YmVmb3JlIHtcclxuICAgIGRpc3BsYXk6bm9uZTtcclxufVxyXG4vKiAuc2VydmljZS1jb250IGRpdltjbGFzcyo9XCJjb2xcIl0gbGFiZWwuc2VydmljZWNsYXNze1xyXG5cdCAgICBiYWNrZ3JvdW5kOiAjMTc5ZGNlO1xyXG7igItcclxufVxyXG4uc2Vydi10eHQgaDQge1xyXG7igItcclxuXHRcclxuXHRmb250LXNpemU6IDI2cHg7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMCA1cHg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBsaW5lLWhlaWdodDogNDBweDtcclxuXHRcclxufVxyXG4gKi9cclxuLnNlcnZpY2UtY29udCBkaXZbY2xhc3MqPVwiY29sXCJdOjpiZWZvcmUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGJvcmRlcjogMXB4IGRhc2hlZCAjQzhEM0Q3O1xyXG4gICAgbWFyZ2luOiA1cHg7XHJcbn1cclxuLnNlcnZpY2UtY29udCBkaXZbY2xhc3MqPVwiY29sXCJdOmhvdmVyOjpiZWZvcmV7XHJcbiAgICBib3JkZXI6IDFweCBkYXNoZWQgI0VDRjdGQjtcclxufVxyXG7igItcclxuLnNlcnZpY2UtY29udCAuY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogMTM1MHB4O1xyXG59XHJcbi5zZXJ2aWNlLWNvbnQgZGl2W2NsYXNzKj1cImNvbFwiXSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNmN2ZiO1xyXG4gICAgaGVpZ2h0OiAyMDBweDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IDAgMjBweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIG1hcmdpbi10b3A6IC0xMDVweDtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMXB4IDJweCAzMXB4IC03cHggcmdiYSgwLDAsMCwwLjY5KTtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMXB4IDJweCAzMXB4IC03cHggcmdiYSgwLDAsMCwwLjY5KTtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIGVhc2UgMC4zcztcclxuICAgIC1vLXRyYW5zaXRpb246IGFsbCBlYXNlIDAuM3M7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgZWFzZSAwLjNzO1xyXG59XHJcbi5zZXJ2aWNlLWNvbnQgZGl2W2NsYXNzKj1cImNvbFwiXTpob3ZlciB7XHJcbiAgICBcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMXB4IDJweCAzMXB4IDdweCByZ2JhKDAsMCwwLDAuNjkpO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAxcHggMnB4IDMxcHggN3B4IHJnYmEoMCwwLDAsMC42OSk7XHJcbn1cclxuLnNlcnYtdHh0IGltZ3tcclxuIG1hcmdpbi1ib3R0b206MTVweDtcclxufVxyXG4uc2Vydi10eHQgaDQge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiAjMjAyMDIwO1xyXG4gICAgcGFkZGluZzogMCAxNXB4O1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcbi5zZXJ2aWNlLWNvbnQgZGl2W2NsYXNzKj1cImNvbFwiXTpob3ZlciBoNCB7XHJcbiAgICBjb2xvcjogIzE3OURDRTtcclxufVxyXG7igItcclxuQG1lZGlhKG1heC13aWR0aDo5OTFweCl7XHJcbi5zZXJ2aWNlLWNvbnQgZGl2W2NsYXNzKj1cImNvbFwiXSB7XHJcbiAgICBtaW4td2lkdGg6IDI4LjMzMyU7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHRcclxuLmJhbm5lci1jb250IHtcclxuICAgIHBhZGRpbmctYm90dG9tOiA0MHB4O1xyXG4gICAgcGFkZGluZy10b3A6IDQwcHg7XHJcbn1cclxufSJdfQ== */\"","module.exports = \" <section>\\r\\n <div class=\\\"block no-padding homepage\\\">\\r\\n <div class=\\\"banner-cont\\\">\\r\\n <div class=\\\"container\\\">\\r\\n <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n\\t\\t <div class=\\\"bnr-txt\\\">\\r\\n          <h1><span> Moving Professionals </span><br>\\r\\n              Easier, Faster and Safer</h1>\\r\\n          <p>We make your moving process easy!</p>\\r\\n\\t\\t  <p>With only a few clicks we connect you with moving professionals in your area.</p>\\r\\n          \\r\\n\\t\\t  <a *ngIf =\\\"!isLoggedIn()\\\"  routerLink=\\\"/register\\\" (click) = \\\"setuserpartner('user')\\\">Get FREE Moving Quotes</a>\\r\\n\\t\\t  <a *ngIf =\\\"isLoggedIn()\\\" routerLink=\\\"/create-job\\\">Get FREE Moving Quotes</a>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n        </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"col-md-3 hidden-md d-none d-md-block\\\">\\r\\n\\t\\t<img class=\\\"img-fluid mx-auto d-block\\\" alt=\\\"Responsive image\\\" src=\\\"../../assets/images/mp-man.png\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n </div>\\r\\n </div>\\r\\n <!-- \\r\\n <div class=\\\"service-cont\\\">\\r\\n <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12 col-sm\\\" *ngFor=\\\"let services of jobservices; let i=index\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<label for=\\\"moving_{{i}}\\\" class=\\\"serviceclass\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"serv-txt moving_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"sad\\\"></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../assets/images/{{services.slug}}.png\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h4>{{services.name}} </h4>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t</div>\\r\\n </div>\\r\\n </div>\\r\\n \\r\\n </section> -->\\r\\n \\r\\n \\r\\n\\t<section>\\r\\n\\t<div class=\\\"block happy-cand\\\">\\r\\n\\t\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h2>Kind Words From Happy Candidates</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"sub-info\\\">What other people thought about the service provided by JobHunt</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"brd clearfix\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div><!-- Heading  -->\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"reviews-sec\\\" id=\\\"reviews\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"reviews style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../assets/images/r1.jpg\\\" alt=\\\"\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3>Katie S.<span>Redondo Beach, CA</span></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>Will use MoveLaunch again for my next move!  I was able to get estimates really quick without getting bombarded by phone calls and emails.  The guys that showed up did a great job!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div><!-- Reviews -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"reviews style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../assets/images/r2.jpg\\\" alt=\\\"\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3>Ali T.<span>Chicago, IL</span></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>This site was REALLY easy to use.  After sending out my move details I just sat back and waited for the estimates to come to me. Highly recommend.</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div><!-- Reviews -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"reviews style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../assets/images/janifir.png\\\" alt=\\\"\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3>Jessica S. <span>Tampa, FL</span></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>WOW! This was so easy and I will definitely do this again next time I move or need storage.</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div><!-- Reviews -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t</section> \\r\\n \\r\\n <section>\\r\\n <div class=\\\"block how-works\\\">\\r\\n\\t\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h2>How It Works</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sub-info\\\">Let us do the work of finding you the best moving quotes in your area. Did we mention it's FREE?</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"brd clearfix\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div><!-- Heading -->\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"how-to-sec\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"how-to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"how-icon\\\"><img src=\\\"../../assets/images/pj-icon.png\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Post your move details</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>Post the details about your move ONE time to get FREE quotes from companies in your area. </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"how-to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"how-icon\\\"><img src=\\\"../../assets/images/quta-icon.png\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Get quotes</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>We remove your personal information such as last names, addresses, phone numbers and emails and send your request to local moving companies. </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"how-to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"how-icon\\\"><img src=\\\"../../assets/images/cp-icon.png\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Choose a Moving Company</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>Review the quotes you receive and select a moving company.  Then we release your contact information to ONLY the company you've selected.  Finalize your move with the company of your choice.</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t</section>\\r\\n \\r\\n \\r\\n<section>\\r\\n<div class=\\\"block abt-section\\\">\\r\\n<div class=\\\"container\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"simple-text-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h2 class=\\\"heading-title\\\">About Us</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"sub-info\\\">We exist to provide our customers a hassle-free moving experience </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"brd\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>MoveLaunch.com was established to help move people forward through the use of automating and expediting the process of getting moving estimates.  Having been in the moving industry for almost a decade founder and CEO Tim Finnerty thought there has to be a better way for customers to get moving estimates.  The old fashioned \\\"calling around for quotes\\\" and repeating your job details over and over was not efficient and simply a waste of time.  Also, for smaller but hard working moving companies it's very hard to compete with the moving industry giants.  We aim to revolutionize the moving industry by connecting reputable moving companies to customers in the most automated way possible.</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n</section> \\r\\n \\r\\n \\r\\n \\r\\n<!--  \\r\\n \\r\\n <section>\\r\\n <div class=\\\"block our-partners\\\">\\r\\n\\t\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h2>Our Top Partners</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"sub-info\\\">Duis aute irure dolor in reprehenderit in voluptate velit esse pariatur. </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"brd\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div><!-- Heading\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"top-company-sec\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\" id=\\\"companies-carousel\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"top-compnay style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../assets/images/tc1.jpg\\\" alt=\\\"\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3><a href=\\\"#\\\" title=\\\"\\\">Symtech</a></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>United States, Los Angeles</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/login\\\"  title=\\\"\\\">View Profile</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"top-compnay style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../assets/images/tc2.jpg\\\" alt=\\\"\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3><a href=\\\"#\\\" title=\\\"\\\">Symtech</a></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>United States, Los Angeles</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/login\\\"  title=\\\"\\\">View Profile</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"top-compnay style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../assets/images/tc3.jpg\\\" alt=\\\"\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3><a routerLink=\\\"/login\\\"  title=\\\"\\\">Symtech</a></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>United States, Los Angeles</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/login\\\" title=\\\"\\\">View Profile</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"top-compnay style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../assets/images/tc4.jpg\\\" alt=\\\"\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3><a href=\\\"#\\\" title=\\\"\\\">Symtech</a></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>United States, Los Angeles</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/login\\\"  title=\\\"\\\">View Profile</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"top-compnay style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../assets/images/tc2.jpg\\\" alt=\\\"\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3><a href=\\\"#\\\" title=\\\"\\\">Symtech</a></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>United States, Los Angeles</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/login\\\" title=\\\"\\\">View Profile</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t</section>\\r\\n \\r\\n \\r\\n \\r\\n<section>\\r\\n\\t\\t<div class=\\\"block level-service\\\">\\r\\n\\t\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h2>Find the level of service that works for you</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span>onsectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore.Duis aute irure dolor in reprehenderit in voluptate velit esse nulla pariatur. </span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"plans-sec\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row justify-content-center\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4 col-md-6 col-sm-6 col-xs-12\\\" *ngFor=\\\"let plans of allplans\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"pricetable style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"pricetable-head\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3>{{plans.name}}</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{plans.plan_bid}} Bids</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>${{plans.price/100}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>Consectetur adipiscing elit, sed</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>Contrary to popular belief</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>Lorem Ipsum is not simply random text</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>Consectetur adipiscing elit, sed</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>dolore eu fugiat nulla pariatur.</li> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"!isLoggedIn()\\\" class=\\\"partner-btn btn\\\" routerLink=\\\"/register\\\" (click) = \\\"setuserpartner('partner')\\\">Become a partner</a>\\r\\n\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"isLoggedIn()\\\" class=\\\"partner-btn btn\\\" routerLink=\\\"/create-job\\\">Create a Job</a>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</section>  -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport * as $ from 'jquery';\r\nimport 'slick-carousel';\r\n//import { ActivatedRoute, Router } from '@angular/router';\r\n//import { UserService } from './../../../../services/user.service';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { JobService } from '../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'index.component.html',\r\n   styleUrls : [ './index-component.css' ]\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\ttitle = 'Home Page';\r\n\tallplans:any=\"\";jobservices:any=\"\";\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private jobservice: JobService,private titleService: Title) { \r\n\r\n\t\tthis.getAllplans();this.getServices();\r\n\t\tthis.titleService.setTitle( 'Home | MoveLaunch' );\r\n\t}\r\n\t\r\n\tgetAllplans(){\r\n\t\tthis.jobservice.getAllPlans().subscribe(result =>\r\n\t\t{\r\n\t\t\t\r\n\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\tthis.allplans = result.data;\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t   \r\n\t\t}); \r\n\t} \r\n\tsetuserpartner(usertype){\r\n\t\tlocalStorage.setItem('usertype',usertype);\r\n\t}\r\n\tgetServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t\r\n\t\t}); \r\n\t}\r\n\r\n\tisLoggedIn() {\r\n\t   let token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\treturn true ;\r\n\t\t}else{\r\n\t\t\treturn false ;\r\n\t\t}\r\n\t\t\r\n\t}\r\n  ngOnInit() {\r\n\t\t\r\n\t     $(document).ready(function(){\r\n\t\t\t(<any>$('#reviews')).slick({\r\n\t\t\t\t\t  slidesToShow: 1,\r\n\t\t\t\t\t  slidesToScroll: 1,\r\n\t\t\t\t\t  arrows: false,\r\n\t\t\t\t\t  autoplay: false,\r\n\t\t\t\t\t  slide: 'div',\r\n\t\t\t\t\t  fade: false,\r\n\t\t\t\t\t  infinite: true,\r\n\t\t\t\t\t  dots: true\r\n\t\t\t });\r\n\t\t \r\n\t\t (<any>$('#companies-carousel')).slick({\r\n\t\t\t\t  slidesToShow: 4,\r\n\t\t\t\t  slidesToScroll: 1,\r\n\t\t\t\t  arrows: true,\r\n\t\t\t\t  autoplay: true,\r\n\t\t\t\t  slide: 'div',\r\n\t\t\t\t  fade: false,\r\n\t\t\t\t  infinite: true,\r\n\t\t\t\t  dots: false,\r\n\t\t\t\t  responsive: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t  breakpoint: 980,\r\n\t\t\t\t\t  settings: {\r\n\t\t\t\t\t\tslidesToShow: 3,\r\n\t\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\t\tinfinite: true,\r\n\t\t\t\t\t\tvertical: false,\r\n\t\t\t\t\t\tcenterMode: false,\r\n\t\t\t\t\t\tcenterPadding: '0px',\r\n\t\t\t\t\t\tdots: true,\r\n\t\t\t\t\t\tarrows: false\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t  breakpoint: 767,\r\n\t\t\t\t\t  settings: {\r\n\t\t\t\t\t\tslidesToShow: 2,\r\n\t\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\t\tinfinite: true,\r\n\t\t\t\t\t\tvertical: false,\r\n\t\t\t\t\t\tcenterMode: false,\r\n\t\t\t\t\t\tcenterPadding: '0px',\r\n\t\t\t\t\t\tdots: true,\r\n\t\t\t\t\t\tarrows: false\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t  breakpoint: 520,\r\n\t\t\t\t\t  settings: {\r\n\t\t\t\t\t\tslidesToShow: 1,\r\n\t\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\t\tinfinite: true,\r\n\t\t\t\t\t\tvertical: false,\r\n\t\t\t\t\t\tcenterMode: false,\r\n\t\t\t\t\t\tcenterPadding: '0px',\r\n\t\t\t\t\t\tdots: true,\r\n\t\t\t\t\t\tarrows: false\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t}\r\n\t\t\t\t  ]\r\n\t\t\t\t});\t\r\n\t\t\r\n       });\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \".action a{margin-right:7px}\\r\\n.joblisting-panel .content-left .time_ago{font-size:12px;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9jb21wbGV0ZWRqb2JzL2NvbXBsZXRlZGpvYnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLGdCQUFnQjtBQUMxQiwwQ0FBMEMsY0FBYyxDQUFDIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9jb21wbGV0ZWRqb2JzL2NvbXBsZXRlZGpvYnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24gYXttYXJnaW4tcmlnaHQ6N3B4fVxyXG4uam9ibGlzdGluZy1wYW5lbCAuY29udGVudC1sZWZ0IC50aW1lX2Fnb3tmb250LXNpemU6MTJweDt9Il19 */\"","module.exports = \"\\r\\n<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">Completed Estimates</h3>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Request Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Completed Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"allJobs && allJobs.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t   <tr *ngFor=\\\"let jobs of allJobs\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" href=\\\"#/\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.completedAt | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\" routerLink=\\\"/view-job/{{jobs._id}}\\\">View Job</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\" (click)=\\\"openDialog(jobs._id)\\\" href=\\\"javascript:void(0)\\\">Feedback</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"!allJobs || allJobs.length == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td colspan=\\\"4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Sorry! You did not completed any estimate.</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> \"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { JobService } from '../../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { Title } from '@angular/platform-browser';\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n  jobID:any;\r\n  reviews:any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'completedjobs.component.html',\r\n   styleUrls : [ './completedjobs.component.css' ]\r\n  \r\n})\r\nexport class CompletedJobsComponent implements OnInit{\r\n\t\r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tisValid : boolean = false;\r\n\tname:any='';animal:any='';jobidisset:any='';\r\n\tmessage:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,public dialog: MatDialog,private titleService: Title)\r\n\t{\r\n\t\t this.getAllJobs();\r\n\t\t this.titleService.setTitle( 'Completed Jobs | MoveLaunch' );\r\n\t}\r\n\t\r\n\t openDialog(jobId): void {\r\n\t\tconst dialogRef = this.dialog.open(DialogOverviewFeedbackPartner, {\r\n\t\t  width: '450px',\r\n\t\t  data: {jobID:jobId}\r\n\t\t});\r\n\t\t\r\n\t\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\tif(result == 'Success'){\r\n\t\t\t\tthis._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\tgetAllJobs(){\r\n\t\t\r\n\t\tthis.jobservice.getFilteredJobsForPartner(1,2).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs = result.jobs;\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\tthis.jobservice.getBidsOnJob(x._id).subscribe(result1 =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(result1.success){\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'applied';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'Notapplied';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t$.each(result.jobs, function(index, value) { \t\r\n\t\t\t\t\r\n\t\t\t\t\t/* var d1 = new Date(value.jobEnd);\r\n\t\t\t\t\tvar month1 = '' + (d1.getMonth() + 1);\r\n\t\t\t\t\tvar day1 = '' + d1.getDate();\r\n\t\t\t\t\tvar year1 = d1.getFullYear();\r\n\t\t\t\t\tif (month1.length < 2) month1 = '0' + month1;\r\n\t\t\t\t\tif (day1.length < 2) day1 = '0' + day1;\r\n\t\t\t\t\tvar mindateset1 = [year1, month1, day1].join('-');\r\n\t\t\t\t\tif(mindateset1 < mindateset){\r\n\t\t\t\t\t\tresult.jobs[index].jobStatus =  'Closed';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresult.jobs[index].jobStatus =  'Active';\r\n\t\t\t\t\t} */\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t}); \r\n\t\t\t\t\r\n\t\t\t\t/* this.allJobs = result.jobs;\t\r\n\t\t\t\tconsole.log(this.allJobs);   */\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\t//this._flashMessagesService.show(\"No job founds\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}   \r\n\t\t   \r\n\t\t});\r\n\t\t\t\r\n\t}\r\n\tgetBidsOnJob(){\r\n\t\tconsole.log('dgdf');\r\n\t\t/* this.jobservice.getBidsOnJob(value_id).subscribe(result1 =>\r\n\t\t{\r\n\t\t\tconsole.log(result1);\r\n\t\t}); */ \r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.isValid = false;\r\n\t}\r\n\t\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog-overview-example-dialog.html',\r\n  styleUrls : [ './dialog-overview-example-dialog.css' ]\r\n})\r\nexport class DialogOverviewFeedbackPartner {\r\n\tpublic jobID:any='';public reviews:any='';public width:any='';\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewFeedbackPartner>,  @Inject(MAT_DIALOG_DATA) public data: DialogData,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder) {\r\n\t\tthis.jobID = data.jobID;\r\n\t\tthis.getFeedback(this.jobID);\r\n\t}\r\n\tgetFeedback(jobID){\r\n\t\tthis.jobservice.getJobFeedbackForPartner(jobID).subscribe(result=>{\r\n\t\t\tthis.reviews = result.review;\r\n\t\t\tthis.width = result.review.rating*20;\r\n\t\t});\r\n\t}\r\n\r\n}","module.exports = \".mat-dialog-container{\\r\\n\\tpadding:35px !important;\\r\\n}\\r\\n.mat-raised-button.mat-primary{\\r\\n\\tbackground-color:#1695C2;\\r\\n}\\r\\n.mat-dialog-actions{padding:25px 0;}\\r\\n.desc{\\r\\n\\tline-height:18px;\\r\\n\\tfont-size:14px;\\r\\n\\tpadding:15px 18px;\\r\\n}\\r\\n.desc label{font-weight:bold}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9jb21wbGV0ZWRqb2JzL2RpYWxvZy1vdmVydmlldy1leGFtcGxlLWRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyx1QkFBdUI7QUFDeEI7QUFDQTtDQUNDLHdCQUF3QjtBQUN6QjtBQUVBLG9CQUFvQixjQUFjLENBQUM7QUFHbkM7Q0FDQyxnQkFBZ0I7Q0FDaEIsY0FBYztDQUNkLGlCQUFpQjtBQUNsQjtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCO0lBQ0ksVUFBVTtBQUNkO0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFNBQVM7SUFDVCxhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFDZixVQUFVO0FBQ2Q7QUFFQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCO0FBR0E7OztJQUdJLGNBQWM7QUFDbEI7QUFHQTtFQUNFLG9HQUFvRztFQUNwRyxZQUFZO0VBQ1osWUFBWTtFQUNaLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0VBQ1gsY0FBYztBQUNoQjtBQUdBO0lBQ0ksb0dBQW9HO0lBQ3BHLDJCQUEyQjtJQUMzQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7RUFDZiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvcGFydG5lcnMvY29tcGxldGVkam9icy9kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS1kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGFpbmVye1xyXG5cdHBhZGRpbmc6MzVweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeXtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiMxNjk1QzI7XHJcbn1cclxuXHJcbi5tYXQtZGlhbG9nLWFjdGlvbnN7cGFkZGluZzoyNXB4IDA7fVxyXG5cclxuXHJcbi5kZXNje1xyXG5cdGxpbmUtaGVpZ2h0OjE4cHg7XHJcblx0Zm9udC1zaXplOjE0cHg7XHJcblx0cGFkZGluZzoxNXB4IDE4cHg7XHJcbn1cclxuLmRlc2MgbGFiZWx7Zm9udC13ZWlnaHQ6Ym9sZH1cclxuLnJhdGluZyB7XHJcbiAgICBmbG9hdDpsZWZ0O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBpbnB1dCB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDotOTk5OXB4O1xyXG4gICAgY2xpcDpyZWN0KDAsMCwwLDApO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICAgIHdpZHRoOjFlbTtcclxuICAgIHBhZGRpbmc6MC4xZW07XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZToxMDAlO1xyXG4gICAgbGluZS1oZWlnaHQ6MS4yO1xyXG4gICAgY29sb3I6I2RkZDtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6ICfimIUgJztcclxufVxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICMxNjkxYmU7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyIH4gbGFiZWwsXHJcbi5yYXRpbmcgPiBsYWJlbDpob3ZlciB+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlIHtcclxuICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgZm9udC1zaXplOiAwO1xyXG4gIGhlaWdodDogMjFweDtcclxuICBsaW5lLWhlaWdodDogMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtaW5kZW50OiAtOTk5ZW07XHJcbiAgd2lkdGg6IDExMHB4O1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUtcmF0aW5ne1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBoZWlnaHQ6IDIxcHg7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gIH0iXX0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<h3 class=\\\"col-md-12\\\">User Rating and Feedback</h3>\\r\\n\\t<div class=\\\" col-md-12\\\">\\r\\n\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"desc col-md-12\\\">\\r\\n\\t\\t<label>Comments</label> : {{reviews.feedback}}\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \".hire-panel .info .rate span{font-size:14px;font-weight:500}\\r\\n.hire-panel .info .completedjob {\\r\\n\\tcolor: #1691be;\\r\\n\\tfont-weight: 700;\\r\\n\\tfont-size: 14px;\\r\\n\\tdisplay: inline-flex;\\r\\n}\\r\\np.data_row{ margin-bottom:0}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.job_status{\\r\\n    float: right;\\r\\n    color: green;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\\r\\nspan.itemcount{width:25px; float:right}\\r\\n.border-class{\\r\\n\\tborder-bottom: 1px dashed #ccc;\\r\\n    width: 97%;\\r\\n    margin: 15px auto;\\r\\n}\\r\\n.desc .loc_lable{    width: 100px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight:600;\\r\\n\\tfont-size:14px\\r\\n}\\r\\n.desc .loc_lable::after{content:\\\":\\\"}\\r\\n.job-info{\\r\\n    padding: 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.items-moved .job-info {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n.joblisting-panel .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.job-info .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.items-moved.joblisting-panel .title {\\r\\n\\tcolor:#303030;\\r\\n    font-weight: 900;  \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9qb2JkZXRhaWxzcGFydG5lci9qb2JkZXRhaWxzcGFydG5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZCQUE2QixjQUFjLENBQUMsZUFBZTtBQUMzRDtDQUNDLGNBQWM7Q0FDZCxnQkFBZ0I7Q0FDaEIsZUFBZTtDQUNmLG9CQUFvQjtBQUNyQjtBQUNBLFlBQVksZUFBZTtBQUUzQjtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmO0FBQ0EsZUFBZSxVQUFVLENBQUMsZUFBZSxDQUFDLGVBQWU7QUFDM0QsZUFBZSxVQUFVLEVBQUUsV0FBVztBQUV0QztDQUNDLDhCQUE4QjtJQUMzQixVQUFVO0lBQ1YsaUJBQWlCO0FBQ3JCO0FBRUEscUJBQXFCLFlBQVk7SUFDN0Isa0JBQWtCO0lBQ2xCLHFCQUFxQjtDQUN4QixpQkFBaUI7Q0FDakIsZUFBZTtDQUNmO0FBQ0Q7QUFDQSx3QkFBd0IsV0FBVztBQUVuQztJQUNJLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7QUFDQTtJQUdJLGFBQWE7SUFFVCxlQUFlO0FBQ3ZCO0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7QUFDQTtDQUNDLGFBQWE7SUFDVixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3BhcnRuZXJzL2pvYmRldGFpbHNwYXJ0bmVyL2pvYmRldGFpbHNwYXJ0bmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlyZS1wYW5lbCAuaW5mbyAucmF0ZSBzcGFue2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH1cclxuLmhpcmUtcGFuZWwgLmluZm8gLmNvbXBsZXRlZGpvYiB7XHJcblx0Y29sb3I6ICMxNjkxYmU7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn1cclxucC5kYXRhX3Jvd3sgbWFyZ2luLWJvdHRvbTowfVxyXG5cclxuLnJhdGluZyB7XHJcbiAgICBmbG9hdDpsZWZ0O1xyXG59XHJcbi5qb2Jfc3RhdHVze1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OjEuMjtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlciB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjMTY5MWJlO1xyXG59XHJcblxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlcixcclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlciB+IGxhYmVsLFxyXG4ucmF0aW5nID4gbGFiZWw6aG92ZXIgfiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDIxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9XHJcbiAgc3Bhbi5pdGVtbmFtZXsgd2lkdGg6MjBweDtmb250LXdlaWdodDo2MDA7Zm9udC1zaXplOjE0cHggfVxyXG5zcGFuLml0ZW1jb3VudHt3aWR0aDoyNXB4OyBmbG9hdDpyaWdodH1cclxuXHJcbi5ib3JkZXItY2xhc3N7XHJcblx0Ym9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjY2NjO1xyXG4gICAgd2lkdGg6IDk3JTtcclxuICAgIG1hcmdpbjogMTVweCBhdXRvO1xyXG59XHJcbiAgXHJcbi5kZXNjIC5sb2NfbGFibGV7ICAgIHdpZHRoOiAxMDBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRmb250LXdlaWdodDo2MDA7XHJcblx0Zm9udC1zaXplOjE0cHhcclxufVxyXG4uZGVzYyAubG9jX2xhYmxlOjphZnRlcntjb250ZW50OlwiOlwifVxyXG5cclxuLmpvYi1pbmZve1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuLml0ZW1zLW1vdmVkIC5qb2ItaW5mbyB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG59IFxyXG5cclxuLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5qb2ItaW5mbyAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLml0ZW1zLW1vdmVkLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuXHRjb2xvcjojMzAzMDMwO1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDsgIFxyXG59Il19 */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\t\\t<h3 class=\\\"mb-4\\\">Job Details</h3>\\r\\n\\r\\n\\r\\n\\r\\n\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">\\r\\n\\t\\t\\t\\t\\tSelected Moving Data\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 2\\\">Completed</span> \\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 1\\\">In Progress</span>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 0 && bidStatus != 2\\\">Open</span>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 0 && bidStatus == 2\\\">Declined</span>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"movingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of movingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"movingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of movingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t \\r\\n<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\r\\n\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\tItems to be Moved\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.appliances  && movingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of movingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_misc\\\">{{ movingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.appliances && movingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.bedRooms  && movingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of movingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedrooms_misc\\\">{{ movingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.bedRooms && movingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.livingRooms && movingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of movingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_misc\\\">{{ movingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.livingRooms && movingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.familyRooms && movingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of movingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_misc\\\">{{ movingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.familyRooms && movingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.diningRooms  && movingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of movingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_misc\\\">{{ movingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.diningRooms && movingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.kitchen && movingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of movingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_misc\\\">{{ movingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.kitchen && movingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.basement && movingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of movingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_misc\\\">{{ movingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.basement && movingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.garage  && movingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of movingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_misc\\\">{{ movingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.garage && movingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.patioYard  && movingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of movingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_misc\\\">{{ movingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.patioYard && movingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Packing Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of packingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of packingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Packed\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.appliances  && packingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of packingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.appliances_misc\\\">{{ packingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.appliances && packingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.bedRooms  && packingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of packingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.bedrooms_misc\\\">{{ packingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.bedRooms && packingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.livingRooms && packingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of packingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.livingRooms_misc\\\">{{ packingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.livingRooms && packingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.familyRooms && packingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of packingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.familyRooms_misc\\\">{{ packingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.familyRooms && packingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.diningRooms  && packingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of packingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.diningRooms_misc\\\">{{ packingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.diningRooms && packingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.kitchen && packingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of packingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.kitchen_misc\\\">{{ packingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.kitchen && packingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.basement && packingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of packingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.basement_misc\\\">{{ packingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.basement && packingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.garage  && packingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of packingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.garage_misc\\\">{{ packingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.garage && packingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.patioYard  && packingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of packingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.patioYard_misc\\\">{{ packingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.patioYard && packingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\"  *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Unpacking Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of unpackingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unpackingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Unpacked\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.appliances  && unpackingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unpackingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.appliances_misc\\\">{{ unpackingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.appliances && unpackingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.bedRooms  && unpackingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unpackingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.bedrooms_misc\\\">{{ unpackingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.bedRooms && unpackingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.livingRooms && unpackingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unpackingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.livingRooms_misc\\\">{{ unpackingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.livingRooms && unpackingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.familyRooms && unpackingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unpackingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.familyRooms_misc\\\">{{ unpackingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.familyRooms && unpackingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.diningRooms  && unpackingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unpackingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.diningRooms_misc\\\">{{ unpackingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.diningRooms && unpackingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.kitchen && unpackingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unpackingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.kitchen_misc\\\">{{ unpackingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.kitchen && unpackingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.basement && unpackingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unpackingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.basement_misc\\\">{{ unpackingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.basement && unpackingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.garage  && unpackingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unpackingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.garage_misc\\\">{{ unpackingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.garage && unpackingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.patioYard  && unpackingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unpackingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.patioYard_misc\\\">{{ unpackingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.patioYard && unpackingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar\\\"  *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Loading Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\" *ngIf=\\\"loadingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of loadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Loaded\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.appliances  && loadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of loadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.appliances_misc\\\">{{ loadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.appliances && loadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.bedRooms  && loadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of loadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.bedrooms_misc\\\">{{ loadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.bedRooms && loadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.livingRooms && loadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of loadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.livingRooms_misc\\\">{{ loadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.livingRooms && loadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.familyRooms && loadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of loadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.familyRooms_misc\\\">{{ loadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.familyRooms && loadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.diningRooms  && loadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of loadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.diningRooms_misc\\\">{{ loadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.diningRooms && loadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.kitchen && loadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of loadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.kitchen_misc\\\">{{ loadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.kitchen && loadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.basement && loadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of loadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.basement_misc\\\">{{ loadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.basement && loadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.garage  && loadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of loadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.garage_misc\\\">{{ loadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.garage && loadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.patioYard  && loadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of loadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.patioYard_misc\\\">{{ loadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.patioYard && loadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\r\\n\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Unloading Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\" *ngIf=\\\"unloadingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unloadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Unloaded\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.appliances  && unloadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unloadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.appliances_misc\\\">{{ unloadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.appliances && unloadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.bedRooms  && unloadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unloadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.bedrooms_misc\\\">{{ unloadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.bedRooms && unloadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.livingRooms && unloadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unloadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.livingRooms_misc\\\">{{ unloadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.livingRooms && unloadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.familyRooms && unloadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unloadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.familyRooms_misc\\\">{{ unloadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.familyRooms && unloadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.diningRooms  && unloadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unloadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.diningRooms_misc\\\">{{ unloadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.diningRooms && unloadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.kitchen && unloadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unloadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.kitchen_misc\\\">{{ unloadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.kitchen && unloadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.basement && unloadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unloadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.basement_misc\\\">{{ unloadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.basement && unloadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.garage  && unloadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unloadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.garage_misc\\\">{{ unloadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.garage && unloadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.patioYard  && unloadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unloadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.patioYard_misc\\\">{{ unloadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.patioYard && unloadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t<div class=\\\" col-12 text-center\\\" *ngIf=\\\"showButton\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<button *ngIf=\\\"bidStatus == 0\\\" routerLink=\\\"/view-bid/{{jobData._id}}\\\" class=\\\"btn btn-lg btn-primary mt-3 mb-5\\\" type=\\\"button\\\">Update Bid Now</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\" col-12 text-center\\\"  *ngIf=\\\"!showButton\\\">\\r\\n\\t\\t\\t<button *ngIf=\\\"!bidStatus\\\" routerLink=\\\"/make-bid/{{jobData._id}}\\\" class=\\\"btn btn-lg btn-primary mt-3 mb-5\\\" type=\\\"button\\\">Bid Now</button>\\r\\n\\t\\t</div>\\r\\n\\t<div class=\\\"container hire-panel-wrap\\\" style=\\\"display:none\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\" > \\r\\n\\t\\t\\t\\t<div class=\\\"hire-panel\\\" *ngFor=\\\"let list of userslist\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"img\\\"><img src=\\\"../../../assets/images/johan.png\\\"></div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"name\\\">{{list.firstname}} {{list.lasttname}}</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"sub-label\\\">USA Movers & Packers</div>\\r\\n\\t\\t\\t\\t\\t\\t<p>Provide Services More then Your Expectation. Provide Services More then Your Expectation.Provide Services More then Your Expectation.</p>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"list.width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"completedjob\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{list.totalCompletedJob}} jobs completed\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"action\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\"><i class=\\\"fas fa-check\\\"></i>Hire Now</a><a href=\\\"#\\\"><i class=\\\"fas fa-times\\\"></i>Decline</a>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div> \\r\\n</div> \\r\\n</div> \\r\\n</div> \\r\\n \"","import { Component, OnInit ,Input, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\nimport { JobService } from '../../../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'jobdetailspartner.component.html',\r\n  styleUrls : [ './jobdetailspartner.component.css' ]\r\n})\r\nexport class DetailsJobPartnerComponent implements OnInit{\r\n\t@Input() rating: number;\r\n\t@Input() itemId: number;\r\n\t@Output() ratingClick: EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";allUsers:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\t\r\n\tjobid = '';\tappliances:any='';basements:any='';\tdiningrooms:any='';bedrooms:any='';\r\n\tfamilyrooms:any='';garages:any='';kitchens:any='';livingrooms:any='';patioyards:any='';\r\n\tuserslist:any='';\tjobData:any='';thisisdone:any=\"\";alllocations:any=\"\";\r\n\tstates:any = '';counties:any = '';cities:any = '';allappliances:any='';\r\n\tshow_dialog : boolean = false;\r\n\tbutton_text:any='';\r\n\tbidStatus:any='';\r\n\tmovingData:any='';\r\n\tpackingData:any='';\r\n\tunpackingData:any='';\r\n\tloadingData:any='';\r\n\tunloadingData:any='';showButton:boolean =false;\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private router: Router,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\tthis.titleService.setTitle( 'Jobs For Partner | MoveLaunch' );\r\n\t\tthis.getSavedJob();\r\n\t\tthis.getbidsOnJob();\r\n\t}\r\n\t\r\n\tgetSavedJob(){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\tlocalStorage.setItem('jobType','saved');\r\n\t\t\r\n\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\r\n\t\tthis.jobservice.getEditJob(this.jobid).subscribe(result => {\r\n\t\t/* this.createFromLocationForm(); */\r\n\t\t\tif(result.success){\r\n\t\t\t\t//this.jobData = result.job;\r\n\t\t\t\t\r\n\t\t\t//\tthis.jobData.servicename = this.jobData.serviceId.name;\r\n\t\t\t\t\tthis.jobData = result.job;\r\n\t\t\t\t\t//console.log(this.jobData);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(result.job.moving && result.job.moving.length > 0){\r\n\t\t\t\t\t\tthis.movingData = result.job.moving[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log(this.movingData);\r\n\t\t\t\t\tif(result.job.packing && result.job.packing.length > 0){\r\n\t\t\t\t\t\tthis.packingData = result.job.packing[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(result.job.unpacking && result.job.unpacking.length > 0){\r\n\t\t\t\t\t\tthis.unpackingData = result.job.unpacking[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(result.job.loading && result.job.loading.length > 0){\r\n\t\t\t\t\t\tthis.loadingData = result.job.loading[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(result.job.unloading && result.job.unloading.length > 0){\r\n\t\t\t\t\t\tthis.unloadingData = result.job.unloading[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t/* \tthis.movingData = result.job.moving[0];\r\n\t\t\t\t\tthis.packingData = result.job.packing[0];\r\n\t\t\t\t\tthis.unpackingData = result.job.unpacking[0];\r\n\t\t\t\t\tthis.loadingData = result.job.loading[0];\r\n\t\t\t\t\tthis.unloadingData = result.job.unloading[0]; */\r\n\t\t\t\t\t\r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(\"No Saved Job Found.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t  } \r\n\t\t});\r\n\t\t\r\n\t}\r\n\tgetbidsOnJob(){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\t\r\n\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\t\tthis.jobservice.getJobBids(this.jobid).subscribe(result1=>{\r\n\t\t\tif(result1.success){\r\n\t\t\t\tthis.showButton = true;\r\n\t\t\t\tthis.allUsers = result1.users;\r\n\t\t\t\tthis.allUsers.forEach((x,key) => {\r\n\t\t\t\t\tconsole.log(x._id);\r\n\t\t\t\t\tconsole.log(user_id);\r\n\t\t\t\t\tif(x._id == user_id){\r\n\t\t\t\t\t\tthis.bidStatus =  x.bidStatus;\r\n\t\t\t\t\t\tconsole.log(this.bidStatus);\r\n\t\t\t\t\t\tconsole.log(this.showButton);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}); \r\n\t\t\r\n\t}\r\n\tdeleteJob(jobID){\r\n\t\tthis.jobservice.deleteJob(jobID).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis._flashMessagesService.show(\"job has been deleted successfully\", { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}else{\r\n\t\t\t\tthis._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t} \r\n\t\t   \r\n\t\t}); \r\n\t}\r\n\ttoggle() {\r\n\t\tthis.show_dialog = !this.show_dialog;\r\n\t\tthis.button_text = this.show_dialog ? 'View Less' : 'View More';\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\t\r\n\t\tthis.button_text = 'View More';\r\n\t}\r\n\r\n}\r\n","module.exports = \".action a{margin-right:7px}\\r\\n.joblisting-panel .content-left .time_ago{font-size:12px;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9qb2JsaXN0aW5ncGFydG5lci9qb2JsaXN0aW5ncGFydG5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsZ0JBQWdCO0FBQzFCLDBDQUEwQyxjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3BhcnRuZXJzL2pvYmxpc3RpbmdwYXJ0bmVyL2pvYmxpc3RpbmdwYXJ0bmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uIGF7bWFyZ2luLXJpZ2h0OjdweH1cclxuLmpvYmxpc3RpbmctcGFuZWwgLmNvbnRlbnQtbGVmdCAudGltZV9hZ297Zm9udC1zaXplOjEycHg7fSJdfQ== */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">Open estimates</h3>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Request Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"allJobs && allJobs.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t   <tr *ngFor=\\\"let jobs of allJobs\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" routerLink=\\\"/view-job/{{jobs._id}}\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\" routerLink=\\\"/view-job/{{jobs._id}}\\\">View</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  *ngIf=\\\"jobs.jobStatus == 'Notapplied'\\\" routerLink=\\\"/make-bid/{{jobs._id}}\\\">Bid Now</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  *ngIf=\\\"jobs.jobStatus == 'applied'\\\" routerLink=\\\"/view-bid/{{jobs._id}}\\\">View Bid</a></td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> \"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\nimport { JobService } from '../../../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'joblistingpartner.component.html',\r\n  styleUrls : [ './joblistingpartner.component.css' ]\r\n})\r\nexport class ListingPartnersJobComponent implements OnInit{\r\n\t\r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tisValid : boolean = false;\r\n\tname:any='';animal:any='';jobidisset:any='';\r\n\tmessage:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\tthis.titleService.setTitle( 'Jobs | MoveLaunch' );\r\n\t\t this.getAllJobs();\r\n\t}\r\n\t\r\n\t \r\n\tgetAllJobs(){\r\n\t\t\r\n\t\tthis.jobservice.getAllJobsForPartner().subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs = result.jobs;\r\n\t\t\t\tconsole.log(this.allJobs);\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\tthis.jobservice.getBidsOnJob(x._id).subscribe(result1 =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(result1.success){\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'applied';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'Notapplied';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}); \r\n\t\t\t\t\r\n\t\t\t\t/* this.allJobs = result.jobs;*/\t\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\t//this._flashMessagesService.show(\"No job founds\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}   \r\n\t\t   \r\n\t\t});\r\n\t\t\t\r\n\t}\r\n\tgetBidsOnJob(){\r\n\t\tconsole.log('dgdf');\r\n\t\t/* this.jobservice.getBidsOnJob(value_id).subscribe(result1 =>\r\n\t\t{\r\n\t\t\tconsole.log(result1);\r\n\t\t}); */ \r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.isValid = false;\r\n\t\t\r\n\t}\r\n\t\r\n\r\n}\r\n","module.exports = \".action a{margin-right:7px}\\r\\n.joblisting-panel .content-left .time_ago{font-size:12px;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9sb3N0Ymlkcy9sb3N0Ymlkcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsZ0JBQWdCO0FBQzFCLDBDQUEwQyxjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3BhcnRuZXJzL2xvc3RiaWRzL2xvc3RiaWRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uIGF7bWFyZ2luLXJpZ2h0OjdweH1cclxuLmpvYmxpc3RpbmctcGFuZWwgLmNvbnRlbnQtbGVmdCAudGltZV9hZ297Zm9udC1zaXplOjEycHg7fSJdfQ== */\"","module.exports = \"\\r\\n<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">Lost Estimates</h3>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Request Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Respond Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"allJobs && allJobs.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t   <tr *ngFor=\\\"let jobs of allJobs\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" href=\\\"#/\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.bidsOn | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  routerLink=\\\"/view-job/{{jobs._id}}\\\">View</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  *ngIf=\\\"jobs.jobStatus == 'Notapplied'\\\" routerLink=\\\"/make-bid/{{jobs._id}}\\\">Bid Now</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  *ngIf=\\\"jobs.jobStatus == 'applied'\\\" routerLink=\\\"/view-bid/{{jobs._id}}\\\">View Bid</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  routerLink=\\\"/user-info/{{jobs.userId._id}}/{{jobs._id}}\\\">View Info</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"!allJobs || allJobs.length == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td colspan=\\\"4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Great! You did not have any lost bid.</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> \"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\nimport { JobService } from '../../../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'lostbids.component.html',\r\n   styleUrls : [ './lostbids.component.css' ]\r\n\r\n})\r\nexport class LostBidsComponent implements OnInit{\r\n\t\r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tisValid : boolean = false;\r\n\tname:any='';animal:any='';jobidisset:any='';\r\n\tmessage:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\t this.getAllJobs();\r\n\t\t this.titleService.setTitle( 'Lost Jobs | MoveLaunch' );\r\n\t}\r\n\t\r\n\t \r\n\tgetAllJobs(){\r\n\t\t\r\n\t\tthis.jobservice.getFilteredJobsForPartner(2,0).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs = result.jobs;\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\tthis.jobservice.getBidsOnJob(x._id).subscribe(result1 =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(result1.success){\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'applied';\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidsOn =  result1.data.hired_decline;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'Notapplied';\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidsOn =  result1.data.hired_decline;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t$.each(result.jobs, function(index, value) { \t\r\n\t\t\t\t\r\n\t\t\t\t\t/* var d1 = new Date(value.jobEnd);\r\n\t\t\t\t\tvar month1 = '' + (d1.getMonth() + 1);\r\n\t\t\t\t\tvar day1 = '' + d1.getDate();\r\n\t\t\t\t\tvar year1 = d1.getFullYear();\r\n\t\t\t\t\tif (month1.length < 2) month1 = '0' + month1;\r\n\t\t\t\t\tif (day1.length < 2) day1 = '0' + day1;\r\n\t\t\t\t\tvar mindateset1 = [year1, month1, day1].join('-');\r\n\t\t\t\t\tif(mindateset1 < mindateset){\r\n\t\t\t\t\t\tresult.jobs[index].jobStatus =  'Closed';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresult.jobs[index].jobStatus =  'Active';\r\n\t\t\t\t\t} */\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t}); \r\n\t\t\t\t\r\n\t\t\t\t/* this.allJobs = result.jobs;\t\r\n\t\t\t\tconsole.log(this.allJobs);   */\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\t//this._flashMessagesService.show(\"No job founds\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}   \r\n\t\t   \r\n\t\t});\r\n\t\t\t\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.isValid = false;\r\n\t}\r\n\t\r\n\r\n}\r\n","module.exports = \".hire-panel .info .rate span{font-size:14px;font-weight:500}\\r\\n.hire-panel .info .completedjob {\\r\\n\\tcolor: #1691be;\\r\\n\\tfont-weight: 700;\\r\\n\\tfont-size: 14px;\\r\\n\\tdisplay: inline-flex;\\r\\n}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.desc .loc_lable{    width: 100px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight:600;\\r\\n\\tfont-size:14px\\r\\n}\\r\\n.desc .loc_lable::after{content:\\\":\\\"}\\r\\n.job-info{\\r\\n    padding: 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.items-moved .job-info {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n.joblisting-panel .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.job-info .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.items-moved.joblisting-panel .title {\\r\\n\\tcolor:#303030;\\r\\n    font-weight: 900;  \\r\\n}\\r\\n  \\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9tYWtlYmlkL21ha2ViaWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkIsY0FBYyxDQUFDLGVBQWU7QUFDM0Q7Q0FDQyxjQUFjO0NBQ2QsZ0JBQWdCO0NBQ2hCLGVBQWU7Q0FDZixvQkFBb0I7QUFDckI7QUFHQTtJQUNJLFVBQVU7QUFDZDtBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7QUFFQTtJQUNJLFdBQVc7SUFDWCxTQUFTO0lBQ1QsYUFBYTtJQUNiLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGNBQWM7SUFDZCxlQUFlO0lBQ2YsVUFBVTtBQUNkO0FBRUE7SUFDSSxhQUFhO0FBQ2pCO0FBRUE7SUFDSSxjQUFjO0FBQ2xCO0FBRUE7O0lBRUksY0FBYztBQUNsQjtBQUdBOzs7SUFHSSxjQUFjO0FBQ2xCO0FBR0E7RUFDRSxvR0FBb0c7RUFDcEcsWUFBWTtFQUNaLFlBQVk7RUFDWixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osV0FBVztFQUNYLGNBQWM7QUFDaEI7QUFHQTtJQUNJLG9HQUFvRztJQUNwRywyQkFBMkI7SUFDM0IsV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0VBQ2Y7QUFFQSxxQkFBcUIsWUFBWTtJQUMvQixrQkFBa0I7SUFDbEIscUJBQXFCO0NBQ3hCLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2Y7QUFDRDtBQUNBLHdCQUF3QixXQUFXO0FBRW5DO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2QjtBQUNBO0lBR0ksYUFBYTtJQUVULGVBQWU7QUFDdkI7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0NBQ0MsYUFBYTtJQUNWLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvcGFydG5lcnMvbWFrZWJpZC9tYWtlYmlkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlyZS1wYW5lbCAuaW5mbyAucmF0ZSBzcGFue2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH1cclxuLmhpcmUtcGFuZWwgLmluZm8gLmNvbXBsZXRlZGpvYiB7XHJcblx0Y29sb3I6ICMxNjkxYmU7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nIHtcclxuICAgIGZsb2F0OmxlZnQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGlucHV0IHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOi05OTk5cHg7XHJcbiAgICBjbGlwOnJlY3QoMCwwLDAsMCk7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsIHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6MWVtO1xyXG4gICAgcGFkZGluZzowLjFlbTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDoxLjI7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZS1yYXRpbmd7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5kZXNjIC5sb2NfbGFibGV7ICAgIHdpZHRoOiAxMDBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRmb250LXdlaWdodDo2MDA7XHJcblx0Zm9udC1zaXplOjE0cHhcclxufVxyXG4uZGVzYyAubG9jX2xhYmxlOjphZnRlcntjb250ZW50OlwiOlwifVxyXG5cclxuLmpvYi1pbmZve1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuLml0ZW1zLW1vdmVkIC5qb2ItaW5mbyB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG59IFxyXG5cclxuLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5qb2ItaW5mbyAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLml0ZW1zLW1vdmVkLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuXHRjb2xvcjojMzAzMDMwO1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDsgIFxyXG59XHJcbiAgXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t<h3 class=\\\"mb-4\\\">Job Details</h3>\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Moving</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of movingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.phone}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of movingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.phone}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Packing</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of packingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.phone}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of packingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.phone}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Unpacking</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of unpackingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.phone}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unpackingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.phone}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Loading of Truck</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of loadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.phone}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Unloading of Truck</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unloadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.phone}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<h3 class=\\\"mb-4\\\">Bid Details</h3>\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info signup-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"angForm\\\"  class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Bid Amount(USD)</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bidAmount\\\" placeholder=\\\"Bid Amount\\\" formControlName=\\\"bidAmount\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.bidAmount.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.bidAmount.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.bidAmount.errors.required\\\">Bid Amount is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Bid Proposal</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" id=\\\"bidProposal\\\" placeholder=\\\"Bid Proposal\\\"  formControlName=\\\"bidProposal\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.bidProposal.errors }\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.bidProposal.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.bidProposal.errors.required\\\">Bid Proposal is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Attachment(if Any)</label><br>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input #imageInput type=\\\"file\\\" formControlName=\\\"imageInput\\\" (change)=\\\"processFile(imageInput)\\\" accept=\\\"file/pdf\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\"  (ngSubmit)=\\\"onSubmit()\\\">Submit</button> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t</form>\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n \"","import { Component, OnInit ,Input, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\nimport { JobService } from '../../../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'makebid.component.html',\r\n  styleUrls : [ './makebid.component.css' ]\r\n})\r\nexport class MakeBidComponent implements OnInit{\r\n\tangForm: FormGroup;\r\n\t\r\n\t@Input() rating: number;\r\n\t@Input() itemId: number;\r\n\t@Output() ratingClick: EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tselectedFile: ImageSnippet;\r\n\tjobid = '';\tappliances:any='';basements:any='';\tdiningrooms:any='';bedrooms:any='';\r\n\tfamilyrooms:any='';garages:any='';kitchens:any='';livingrooms:any='';patioyards:any='';\r\n\tuserslist:any='';\tjobData:any='';thisisdone:any=\"\";alllocations:any=\"\";\r\n\tstates:any = '';counties:any = '';cities:any = '';allappliances:any='';totalbid:any='';\r\n\tshow_dialog : boolean = false;\r\n\tbutton_text:any='';\r\n\tsubmitted:any='';\r\n\tmovingData:any='';\r\n\tpackingData:any='';\r\n\tunpackingData:any='';\r\n\tloadingData:any='';\r\n\tunloadingData:any=''; \r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private router: Router,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\tthis.makeBidForm();\r\n\t\tthis.titleService.setTitle( 'Make a Bid | MoveLaunch' );\r\n\t}\r\n\tmakeBidForm() {\r\n\t\tthis.angForm = this.fb.group({\r\n\t\t\t// name: ['',  Validators.required ],\r\n\t\t\tbidAmount: ['', Validators.required ],\r\n\t\t\tbidProposal: ['', Validators.required ],\r\n\t\t\timageInput: ['']\r\n\t\t}); \r\n\t}\r\n\tprivate onSuccess() {\r\n\t\tthis.selectedFile.pending = false;\r\n\t\tthis.selectedFile.status = 'ok';\r\n\t}\r\n\r\n\tprivate onError() {\r\n\t\tthis.selectedFile.pending = false;\r\n\t\tthis.selectedFile.status = 'fail';\r\n\t\tthis.selectedFile.src = '';\r\n\t}\r\n\r\n\tprocessFile(imageInput: any) {\r\n\t\tconst file: File = imageInput.files[0];\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\treader.addEventListener('load', (event: any) => {\r\n\r\n\t\t  this.selectedFile = new ImageSnippet(event.target.result, file);\r\n\t\t  this.selectedFile.pending = true;\r\n\t\t});\r\n\t\r\n\t\treader.readAsDataURL(file);\r\n\t\t\r\n\t}\r\n\t\r\n\tgetSavedJob(){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\tlocalStorage.setItem('jobType','saved');\r\n\t\t\r\n\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\r\n\t\tthis.jobservice.getEditJob(this.jobid).subscribe(result => {\r\n\t\t/* this.createFromLocationForm(); */\r\n\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\tthis.jobData = result.job;\r\n\t\t\t\t//this.jobData.servicename = this.jobData.serviceId.name;\r\n\t\t\t\tif(result.job.moving && result.job.moving.length > 0){\r\n\t\t\t\t\tthis.movingData = result.job.moving[0];\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.movingData);\r\n\t\t\t\tif(result.job.packing && result.job.packing.length > 0){\r\n\t\t\t\t\tthis.packingData = result.job.packing[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(result.job.unpacking && result.job.unpacking.length > 0){\r\n\t\t\t\t\tthis.unpackingData = result.job.unpacking[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(result.job.loading && result.job.loading.length > 0){\r\n\t\t\t\t\tthis.loadingData = result.job.loading[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(result.job.unloading && result.job.unloading.length > 0){\r\n\t\t\t\t\tthis.unloadingData = result.job.unloading[0];\r\n\t\t\t\t} \r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t});\r\n\t\t\t\tvar currentState = this.jobData.state;\r\n\t\t\t\tvar currentCounty = this.jobData.county;\r\n\t\t\t\r\n\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t}); \r\n\t\t\t\t\t\r\n\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t//console.log(this.living);\r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(\"No Saved Job Found.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t  } \r\n\t\t});\r\n\t\t/* this.jobservice.getJobBids(this.jobid).subscribe(result=>{\r\n\t\t\r\n\t\t\t\r\n\t\t\t$.each(result.users, function(index, value) { \t\t\r\n\t\t\t\tresult.users[index].width = value.userRating*10;\r\n\t\t\t});\t\r\n\t\t\tthis.userslist = result.users;\r\n\t\t\tconsole.log(this.userslist);\r\n\t\t}); */\r\n\t}\r\n\tget f() { return this.angForm.controls; }\r\n\tonSubmit() {\r\n        this.submitted = true;\r\n\t\t\r\n\t\tif(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\tvar bid_info = this.angForm.value;\r\n\t\t\tvar _userid = localStorage.getItem('userid');\r\n\t\t\tvar jobid = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\t/* this.jobservice.addbid(bid_info,jobid,_userid).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\t if(result.success){\r\n\t\t\t\t\tthis._flashMessagesService.show('Your bid has been placed successfully.', { cssClass: 'alert-success',timeout:5000}); \r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t}); */\r\n\t\t \tif(this.selectedFile == undefined){\r\n\t\t\t\tthis.jobservice.addbid(bid_info,jobid,_userid).subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\t\tthis.totalbid = localStorage.getItem('total_bid');\r\n\t\t\t\t\t\t\tthis.totalbid = this.totalbid -1 ;\r\n\t\t\t\t\t\t\tlocalStorage.setItem('total_bid',this.totalbid);\r\n\t\t\t\t\t\t\tthis._flashMessagesService.show('Your bid has been placed successfully.', { cssClass: 'alert-success',timeout:2000}); \r\n\t\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t\t\tthis.router.navigate(['/open-bids']);\r\n\t\t\t\t\t\t\t },2500);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t\t\t} \r\n\t\t\t\t   \r\n\t\t\t\t});  \r\n\t\t\t}else{\r\n\t\t\t\tthis.jobservice.addbidWithFile(bid_info,jobid,_userid,this.selectedFile.file).subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tthis.totalbid = localStorage.getItem('total_bid');\r\n\t\t\t\t\t\tthis.totalbid = this.totalbid -1 ;\r\n\t\t\t\t\t\tlocalStorage.setItem('total_bid',this.totalbid);\r\n\t\t\t\t\t\tthis._flashMessagesService.show('Your bid has been placed successfully.', { cssClass: 'alert-success',timeout:2000}); \r\n\t\t\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t\tthis.router.navigate(['/open-bids']);\r\n\t\t\t\t\t\t}, 2500);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t\t} \r\n\t\t\t\t   \r\n\t\t\t\t}); \r\n\t\t\t} \r\n\t\t}\t\r\n\t}\r\n\tdeleteJob(jobID){\r\n\t\tthis.jobservice.deleteJob(jobID).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis._flashMessagesService.show(\"job has been deleted successfully\", { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}else{\r\n\t\t\t\tthis._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t} \r\n\t\t   \r\n\t\t}); \r\n\t}\r\n\ttoggle() {\r\n\t\tthis.show_dialog = !this.show_dialog;\r\n\t\tthis.button_text = this.show_dialog ? 'View Less' : 'View More';\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.getSavedJob();\r\n\t\tthis.button_text = 'View More';\r\n\t}\r\n\r\n}\r\n","module.exports = \".action a{margin-right:7px}\\r\\n.joblisting-panel .content-left .time_ago{font-size:12px;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9vcGVuYmlkcy9vcGVuYmlkcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsZ0JBQWdCO0FBQzFCLDBDQUEwQyxjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3BhcnRuZXJzL29wZW5iaWRzL29wZW5iaWRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uIGF7bWFyZ2luLXJpZ2h0OjdweH1cclxuLmpvYmxpc3RpbmctcGFuZWwgLmNvbnRlbnQtbGVmdCAudGltZV9hZ297Zm9udC1zaXplOjEycHg7fSJdfQ== */\"","module.exports = \"\\r\\n<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">Open Estimates</h3>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Request Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Respond Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"allJobs && allJobs.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t   <tr *ngFor=\\\"let jobs of allJobs\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" routerLink=\\\"/view-job/{{jobs._id}}\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.bidsOn | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <a class=\\\"hire\\\"  routerLink=\\\"/view-job/{{jobs._id}}\\\">View</a> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  *ngIf=\\\"jobs.jobStatus == 'Notapplied'\\\" routerLink=\\\"/make-bid/{{jobs._id}}\\\">Bid Now</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  *ngIf=\\\"jobs.jobStatus == 'applied'\\\" routerLink=\\\"/view-bid/{{jobs._id}}\\\">View Bid</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  routerLink=\\\"/user-info/{{jobs.userId._id}}/{{jobs._id}}\\\">View User Info</a>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"!allJobs || allJobs.length == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td colspan=\\\"4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Sorry! You did not have any open bid yet.</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> \"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { JobService } from '../../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'openbids.component.html',\r\n     styleUrls : [ './openbids.component.css' ]\r\n})\r\nexport class OpenBidsComponent implements OnInit{\r\n\t\r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tisValid : boolean = false;\r\n\tname:any='';animal:any='';jobidisset:any='';\r\n\tmessage:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\t this.getAllJobs();\r\n\t\t this.titleService.setTitle( 'Open Jobs | MoveLaunch' );\r\n\t}\r\n\t\r\n\t \r\n\tgetAllJobs(){\r\n\t\t\r\n\t\tthis.jobservice.getFilteredJobsForPartner(0,0).subscribe(result =>\r\n\t\t{\r\n\t\t\tconsole.log(result);\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs = result.jobs;\r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\tthis.jobservice.getBidsOnJob(x._id).subscribe(result1 =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log(result1);\r\n\t\t\t\t\t\tif(result1.success){\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'applied';\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidsOn =  result1.data.updated_at;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'Notapplied';\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidsOn =  result1.data.updated_at;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t// this.allJobs.sort((a,b) => b.bidsOn.localeCompare(a.bidsOn));\r\n\t\t\t\t\r\n\t\t\t\t$.each(result.jobs, function(index, value) { \t\r\n\t\t\t\t\r\n\t\t\t\t\t/* var d1 = new Date(value.jobEnd);\r\n\t\t\t\t\tvar month1 = '' + (d1.getMonth() + 1);\r\n\t\t\t\t\tvar day1 = '' + d1.getDate();\r\n\t\t\t\t\tvar year1 = d1.getFullYear();\r\n\t\t\t\t\tif (month1.length < 2) month1 = '0' + month1;\r\n\t\t\t\t\tif (day1.length < 2) day1 = '0' + day1;\r\n\t\t\t\t\tvar mindateset1 = [year1, month1, day1].join('-');\r\n\t\t\t\t\tif(mindateset1 < mindateset){\r\n\t\t\t\t\t\tresult.jobs[index].jobStatus =  'Closed';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresult.jobs[index].jobStatus =  'Active';\r\n\t\t\t\t\t} */\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t}); \r\n\t\t\t\t\r\n\t\t\t\t/* this.allJobs = result.jobs;\t\r\n\t\t\t\tconsole.log(this.allJobs);   */\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\t//this._flashMessagesService.show(\"No job founds\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}   \r\n\t\t   \r\n\t\t});\r\n\t\t\t\r\n\t}\r\n\tgetBidsOnJob(){\r\n\t\tconsole.log('dgdf');\r\n\t\t/* this.jobservice.getBidsOnJob(value_id).subscribe(result1 =>\r\n\t\t{\r\n\t\t\tconsole.log(result1);\r\n\t\t}); */ \r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.isValid = false;\r\n\t\t\r\n\t}\r\n\t\r\n\r\n}\r\n","module.exports = \".hire-panel .info .rate span{font-size:14px;font-weight:500}\\r\\n.hire-panel .info .completedjob {\\r\\n\\tcolor: #1691be;\\r\\n\\tfont-weight: 700;\\r\\n\\tfont-size: 14px;\\r\\n\\tdisplay: inline-flex;\\r\\n}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.desc .loc_lable{    width: 100px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight:600;\\r\\n\\tfont-size:14px\\r\\n}\\r\\n.desc .loc_lable::after{content:\\\":\\\"}\\r\\n.job-info{\\r\\n    padding: 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.items-moved .job-info {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n.joblisting-panel .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.job-info .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.items-moved.joblisting-panel .title {\\r\\n\\tcolor:#303030;\\r\\n    font-weight: 900;  \\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy92aWV3YmlkL3ZpZXdiaWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkIsY0FBYyxDQUFDLGVBQWU7QUFDM0Q7Q0FDQyxjQUFjO0NBQ2QsZ0JBQWdCO0NBQ2hCLGVBQWU7Q0FDZixvQkFBb0I7QUFDckI7QUFHQTtJQUNJLFVBQVU7QUFDZDtBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7QUFFQTtJQUNJLFdBQVc7SUFDWCxTQUFTO0lBQ1QsYUFBYTtJQUNiLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGNBQWM7SUFDZCxlQUFlO0lBQ2YsVUFBVTtBQUNkO0FBRUE7SUFDSSxhQUFhO0FBQ2pCO0FBRUE7SUFDSSxjQUFjO0FBQ2xCO0FBRUE7O0lBRUksY0FBYztBQUNsQjtBQUdBOzs7SUFHSSxjQUFjO0FBQ2xCO0FBR0E7RUFDRSxvR0FBb0c7RUFDcEcsWUFBWTtFQUNaLFlBQVk7RUFDWixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osV0FBVztFQUNYLGNBQWM7QUFDaEI7QUFHQTtJQUNJLG9HQUFvRztJQUNwRywyQkFBMkI7SUFDM0IsV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0VBQ2Y7QUFFRixxQkFBcUIsWUFBWTtJQUM3QixrQkFBa0I7SUFDbEIscUJBQXFCO0NBQ3hCLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2Y7QUFDRDtBQUNBLHdCQUF3QixXQUFXO0FBRW5DO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2QjtBQUNBO0lBR0ksYUFBYTtJQUVULGVBQWU7QUFDdkI7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0NBQ0MsYUFBYTtJQUNWLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvcGFydG5lcnMvdmlld2JpZC92aWV3YmlkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlyZS1wYW5lbCAuaW5mbyAucmF0ZSBzcGFue2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH1cclxuLmhpcmUtcGFuZWwgLmluZm8gLmNvbXBsZXRlZGpvYiB7XHJcblx0Y29sb3I6ICMxNjkxYmU7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nIHtcclxuICAgIGZsb2F0OmxlZnQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGlucHV0IHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOi05OTk5cHg7XHJcbiAgICBjbGlwOnJlY3QoMCwwLDAsMCk7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsIHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6MWVtO1xyXG4gICAgcGFkZGluZzowLjFlbTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDoxLjI7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZS1yYXRpbmd7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4uZGVzYyAubG9jX2xhYmxleyAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0dGV4dC1hbGlnbjogcmlnaHQ7XHJcblx0Zm9udC13ZWlnaHQ6NjAwO1xyXG5cdGZvbnQtc2l6ZToxNHB4XHJcbn1cclxuLmRlc2MgLmxvY19sYWJsZTo6YWZ0ZXJ7Y29udGVudDpcIjpcIn1cclxuXHJcbi5qb2ItaW5mb3tcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbi5pdGVtcy1tb3ZlZCAuam9iLWluZm8ge1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxufSBcclxuXHJcbi5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uam9iLWluZm8gLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5pdGVtcy1tb3ZlZC5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcblx0Y29sb3I6IzMwMzAzMDtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7ICBcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t<h3 class=\\\"mb-4\\\">Job Details</h3>\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Moving</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of movingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of movingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Packing</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of packingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of packingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Unpacking</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of unpackingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unpackingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Loading of Truck</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of loadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of loadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Unloading of Truck</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of unloadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unloadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<h3 class=\\\"mb-4 mt-4\\\">Bid Details</h3>\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info signup-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"angForm\\\"  class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Bid Amount(USD)</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bidAmount\\\" placeholder=\\\"Bid Amount\\\" formControlName=\\\"bidAmount\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.bidAmount.errors}\\\" [(ngModel)]=\\\"bidData.bid_price\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.bidAmount.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.bidAmount.errors.required\\\">Bid Amount is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Bid Proposal</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" id=\\\"bidProposal\\\" placeholder=\\\"Bid Proposal\\\"  formControlName=\\\"bidProposal\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.bidProposal.errors }\\\" [(ngModel)]=\\\"bidData.bid_proposal\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.bidProposal.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.bidProposal.errors.required\\\">Bid Proposal is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Attachment(if Any)</label><br>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-file-pdf text-danger\\\"></i> {{docUrl}}\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\" *ngIf=\\\"bidData.bidStatus == 0\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit(bidData._id)\\\"  (ngSubmit)=\\\"onSubmit(bidData._id)\\\">Update</button> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t</form>\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit ,Input, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\nimport { JobService } from '../../../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { environment } from '../../../../../../environments/environment';\r\nimport { Title } from '@angular/platform-browser';\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'viewbid.component.html',\r\n  styleUrls : [ './viewbid.component.css' ]\r\n})\r\nexport class ViewBidomponent implements OnInit{\r\n\tangForm: FormGroup;\r\n\t\r\n\t@Input() rating: number;\r\n\t@Input() itemId: number;\r\n\t@Output() ratingClick: EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tselectedFile: ImageSnippet;\r\n\tjobid = '';\tappliances:any='';basements:any='';\tdiningrooms:any='';bedrooms:any='';\r\n\tfamilyrooms:any='';garages:any='';kitchens:any='';livingrooms:any='';patioyards:any='';\r\n\tuserslist:any='';\tjobData:any='';thisisdone:any=\"\";alllocations:any=\"\";\r\n\tstates:any = '';counties:any = '';cities:any = '';allappliances:any='';\r\n\tshow_dialog : boolean = false;\r\n\tbutton_text:any='';\r\n\tsubmitted:any='';bidData:any='';docUrl:any='';attachment_pic:any='';user_id:any='';\r\n\tmovingData:any='';\r\n\tpackingData:any='';\r\n\tunpackingData:any='';\r\n\tloadingData:any='';\r\n\tunloadingData:any=''; \r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private router: Router,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\tthis.makeBidForm();\r\n\t\tthis.titleService.setTitle( 'View Bid | MoveLaunch' );\r\n\t}\r\n\tmakeBidForm() {\r\n\t\tthis.angForm = this.fb.group({\r\n\t\t\t// name: ['',  Validators.required ],\r\n\t\t\tbidAmount: ['', Validators.required ],\r\n\t\t\tbidProposal: ['', Validators.required ],\r\n\t\t\timageInput: ['']\r\n\t\t}); \r\n\t}\r\n\tprivate onSuccess() {\r\n\t\tthis.selectedFile.pending = false;\r\n\t\tthis.selectedFile.status = 'ok';\r\n\t}\r\n\r\n\tprivate onError() {\r\n\t\tthis.selectedFile.pending = false;\r\n\t\tthis.selectedFile.status = 'fail';\r\n\t\tthis.selectedFile.src = '';\r\n\t}\r\n\r\n\tprocessFile(imageInput: any) {\r\n\t\tconst file: File = imageInput.files[0];\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\treader.addEventListener('load', (event: any) => {\r\n\r\n\t\t  this.selectedFile = new ImageSnippet(event.target.result, file);\r\n\t\t  this.selectedFile.pending = true;\r\n\t\t});\r\n\t\r\n\t\treader.readAsDataURL(file);\r\n\t\t\r\n\t}\r\n\t\r\n\tgetSavedJob(){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\tlocalStorage.setItem('jobType','saved');\r\n\t\t\r\n\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\r\n\t\tthis.jobservice.getEditJob(this.jobid).subscribe(result => {\r\n\t\t/* this.createFromLocationForm(); */\r\n\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\tthis.jobData = result.job;\r\n\t\t\t\t//this.jobData.servicename = this.jobData.serviceId.name;\r\n\t\t\t\tif(result.job.moving && result.job.moving.length > 0){\r\n\t\t\t\t\tthis.movingData = result.job.moving[0];\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.movingData);\r\n\t\t\t\tif(result.job.packing && result.job.packing.length > 0){\r\n\t\t\t\t\tthis.packingData = result.job.packing[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(result.job.unpacking && result.job.unpacking.length > 0){\r\n\t\t\t\t\tthis.unpackingData = result.job.unpacking[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(result.job.loading && result.job.loading.length > 0){\r\n\t\t\t\t\tthis.loadingData = result.job.loading[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(result.job.unloading && result.job.unloading.length > 0){\r\n\t\t\t\t\tthis.unloadingData = result.job.unloading[0];\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t});\r\n\t\t\t\tvar currentState = this.jobData.state;\r\n\t\t\t\tvar currentCounty = this.jobData.county;\r\n\t\t\t\r\n\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t}); \r\n\t\t\t\t\t\r\n\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t//console.log(this.living);\r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(\"No Saved Job Found.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t  } \r\n\t\t});\r\n\t//\thttp://18.188.2.226:3001/api/partner/editbid/5cd518c538bc5c24ab886e43\r\n\t\tthis.jobservice.editJobBids(this.jobid).subscribe( result=>{\r\n\t\t\tconsole.log(result);\r\n\t\t\tthis.bidData = result.bid;\r\n\t\t\tvar user_id = localStorage.getItem('userid');\r\n\t\t\r\n\t\t\t\r\n\t\t\t//this.docUrl  = environment.bid_document_url+this.user_id+'/'+this.jobid+'/'+result.bid.attachment_pic;\r\n\t\t\tthis.docUrl  = result.bid.attachment_pic;\r\n\t\t});\r\n\t}\r\n\tget f() { return this.angForm.controls; }\r\n\t\r\n\tonSubmit(bidId) {\r\n        this.submitted = true;\r\n\t\t\r\n\t\tif(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\tvar bid_info = this.angForm.value;\r\n\t\t\tvar _userid = localStorage.getItem('userid');\r\n\t\t\t\r\n\t\t\tthis.jobservice.updateBid(bid_info,bidId,_userid).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\t if(result.success){\r\n\t\t\t\t\tthis._flashMessagesService.show('Your bid has been updated successfully.', { cssClass: 'alert-success',timeout:5000}); \r\n\t\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\tthis.router.navigate(['/open-bids']);\r\n\t\t\t\t\t},2500);\r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t});  \r\n\t\t\t\r\n\t\t}\t\r\n\t}\r\n\tdeleteJob(jobID){\r\n\t\tthis.jobservice.deleteJob(jobID).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\tthis.router.navigate(['/open-bids']);\r\n\t\t\t\t},2500);\r\n\t\t\t\tthis._flashMessagesService.show(\"job has been deleted successfully\", { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}else{\r\n\t\t\t\tthis._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t} \r\n\t\t   \r\n\t\t}); \r\n\t}\r\n\ttoggle() {\r\n\t\tthis.show_dialog = !this.show_dialog;\r\n\t\tthis.button_text = this.show_dialog ? 'View Less' : 'View More';\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.getSavedJob();\r\n\t\tthis.button_text = 'View More';\r\n\t}\r\n\r\n}\r\n","module.exports = \".action a{margin-right:7px}\\r\\n.joblisting-panel .content-left .time_ago{font-size:12px;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy93b25iaWRzL3dvbmJpZHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLGdCQUFnQjtBQUMxQiwwQ0FBMEMsY0FBYyxDQUFDIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy93b25iaWRzL3dvbmJpZHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24gYXttYXJnaW4tcmlnaHQ6N3B4fVxyXG4uam9ibGlzdGluZy1wYW5lbCAuY29udGVudC1sZWZ0IC50aW1lX2Fnb3tmb250LXNpemU6MTJweDt9Il19 */\"","module.exports = \"\\r\\n<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">Winning Estimates</h3>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Request Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Hired Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"allJobs && allJobs.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t   <tr *ngFor=\\\"let jobs of allJobs\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" routerLink=\\\"/view-job/{{jobs._id}}\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.bidsOn | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  routerLink=\\\"/view-job/{{jobs._id}}\\\">View</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  *ngIf=\\\"jobs.jobStatus == 'Notapplied'\\\" routerLink=\\\"/make-bid/{{jobs._id}}\\\">Bid Now</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  *ngIf=\\\"jobs.jobStatus == 'applied'\\\" routerLink=\\\"/view-bid/{{jobs._id}}\\\">View Bid</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\"  routerLink=\\\"/user-info/{{jobs.userId._id}}/{{jobs._id}}\\\">View Info</a>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"!allJobs || allJobs.length == 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td colspan=\\\"4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Sorry! You did not won any of your bid yet.</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { JobService } from '../../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'wonbids.component.html',\r\n   styleUrls : [ './wonbids.component.css' ]\r\n})\r\nexport class WonBidsComponent implements OnInit{\r\n\t\r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tisValid : boolean = false;\r\n\tname:any='';animal:any='';jobidisset:any='';\r\n\tmessage:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\t this.getAllJobs();\r\n\t\t this.titleService.setTitle( 'Won Jobs | MoveLaunch' );\r\n\t}\r\n\t\r\n\t \r\n\tgetAllJobs(){\r\n\t\t\r\n\t\tthis.jobservice.getFilteredJobsForPartner(1,1).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs = result.jobs;\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\tthis.jobservice.getBidsOnJob(x._id).subscribe(result1 =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(result1.success){\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'applied';\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidsOn =  result1.data.hired_decline;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.allJobs[key].jobStatus =  'Notapplied';\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidsOn =  result1.data.hired_decline;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t$.each(result.jobs, function(index, value) { \t\r\n\t\t\t\t\r\n\t\t\t\t\t/* var d1 = new Date(value.jobEnd);\r\n\t\t\t\t\tvar month1 = '' + (d1.getMonth() + 1);\r\n\t\t\t\t\tvar day1 = '' + d1.getDate();\r\n\t\t\t\t\tvar year1 = d1.getFullYear();\r\n\t\t\t\t\tif (month1.length < 2) month1 = '0' + month1;\r\n\t\t\t\t\tif (day1.length < 2) day1 = '0' + day1;\r\n\t\t\t\t\tvar mindateset1 = [year1, month1, day1].join('-');\r\n\t\t\t\t\tif(mindateset1 < mindateset){\r\n\t\t\t\t\t\tresult.jobs[index].jobStatus =  'Closed';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresult.jobs[index].jobStatus =  'Active';\r\n\t\t\t\t\t} */\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t}); \r\n\t\t\t\t\r\n\t\t\t\t/* this.allJobs = result.jobs;\t\r\n\t\t\t\tconsole.log(this.allJobs);   */\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\t//this._flashMessagesService.show(\"No job founds\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}   \r\n\t\t   \r\n\t\t});\r\n\t\t\t\r\n\t}\r\n\tgetBidsOnJob(){\r\n\t\tconsole.log('dgdf');\r\n\t\t/* this.jobservice.getBidsOnJob(value_id).subscribe(result1 =>\r\n\t\t{\r\n\t\t\tconsole.log(result1);\r\n\t\t}); */ \r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.isValid = false;\r\n\t\t\r\n\t}\r\n\t\r\n\r\n}\r\n","module.exports = \".hire-panel .info .rate span{font-size:14px;font-weight:500}\\r\\n.hire-panel .info .completedjob {\\r\\n\\tcolor: #1691be;\\r\\n\\tfont-weight: 700;\\r\\n\\tfont-size: 14px;\\r\\n\\tdisplay: inline-flex;\\r\\n}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.ratingclass label{line-height:45px}\\r\\n.rating {\\r\\n    float:left;\\r\\n\\tdisplay:block;\\r\\n}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:28px;\\r\\n    line-height:32px;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: green;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: green;\\r\\n}\\r\\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\\r\\nspan.itemcount{width:25px; float:right}\\r\\n.border-class{\\r\\n\\tborder-bottom: 1px dashed #ccc;\\r\\n    width: 97%;\\r\\n    margin: 15px auto;\\r\\n}\\r\\n.desc .loc_lable{    width: 100px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight:600;\\r\\n\\tfont-size:14px\\r\\n}\\r\\n.desc .loc_lable::after{content:\\\":\\\"}\\r\\n.job-info{\\r\\n    padding: 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.items-moved .job-info {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n.joblisting-panel .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.job-info .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.items-moved.joblisting-panel .title {\\r\\n\\tcolor:#303030;\\r\\n    font-weight: 900;  \\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9jb21wbGV0ZWpvYi9jb21wbGV0ZWpvYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZCQUE2QixjQUFjLENBQUMsZUFBZTtBQUMzRDtDQUNDLGNBQWM7Q0FDZCxnQkFBZ0I7Q0FDaEIsZUFBZTtDQUNmLG9CQUFvQjtBQUNyQjtBQUdBO0lBQ0ksVUFBVTtBQUNkO0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFNBQVM7SUFDVCxhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFDZixVQUFVO0FBQ2Q7QUFFQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCO0FBR0E7OztJQUdJLGNBQWM7QUFDbEI7QUFHQTtFQUNFLG9HQUFvRztFQUNwRyxZQUFZO0VBQ1osWUFBWTtFQUNaLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0VBQ1gsY0FBYztBQUNoQjtBQUdBO0lBQ0ksb0dBQW9HO0lBQ3BHLDJCQUEyQjtJQUMzQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7RUFDZjtBQUVGLG1CQUFtQixnQkFBZ0I7QUFDbkM7SUFDSSxVQUFVO0NBQ2IsYUFBYTtBQUNkO0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFNBQVM7SUFDVCxhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixVQUFVO0FBQ2Q7QUFFQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLFlBQVk7QUFDaEI7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCO0FBR0E7OztJQUdJLFlBQVk7QUFDaEI7QUFFQSxlQUFlLFVBQVUsQ0FBQyxlQUFlLENBQUMsZUFBZTtBQUN6RCxlQUFlLFVBQVUsRUFBRSxXQUFXO0FBRXRDO0NBQ0MsOEJBQThCO0lBQzNCLFVBQVU7SUFDVixpQkFBaUI7QUFDckI7QUFFQSxxQkFBcUIsWUFBWTtJQUM3QixrQkFBa0I7SUFDbEIscUJBQXFCO0NBQ3hCLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2Y7QUFDRDtBQUNBLHdCQUF3QixXQUFXO0FBRW5DO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2QjtBQUNBO0lBR0ksYUFBYTtJQUVULGVBQWU7QUFDdkI7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0NBQ0MsYUFBYTtJQUNWLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvY29tcGxldGVqb2IvY29tcGxldGVqb2IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaXJlLXBhbmVsIC5pbmZvIC5yYXRlIHNwYW57Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NTAwfVxyXG4uaGlyZS1wYW5lbCAuaW5mbyAuY29tcGxldGVkam9iIHtcclxuXHRjb2xvcjogIzE2OTFiZTtcclxuXHRmb250LXdlaWdodDogNzAwO1xyXG5cdGZvbnQtc2l6ZTogMTRweDtcclxuXHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcge1xyXG4gICAgZmxvYXQ6bGVmdDtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OjEuMjtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlciB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjMTY5MWJlO1xyXG59XHJcblxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlcixcclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlciB+IGxhYmVsLFxyXG4ucmF0aW5nID4gbGFiZWw6aG92ZXIgfiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDIxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9XHJcbiAgXHJcbi5yYXRpbmdjbGFzcyBsYWJlbHtsaW5lLWhlaWdodDo0NXB4fVxyXG4ucmF0aW5nIHtcclxuICAgIGZsb2F0OmxlZnQ7XHJcblx0ZGlzcGxheTpibG9jaztcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MjhweDtcclxuICAgIGxpbmUtaGVpZ2h0OjMycHg7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICMxNjkxYmU7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyIH4gbGFiZWwsXHJcbi5yYXRpbmcgPiBsYWJlbDpob3ZlciB+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogZ3JlZW47XHJcbn1cclxuXHJcbnNwYW4uaXRlbW5hbWV7IHdpZHRoOjIwcHg7Zm9udC13ZWlnaHQ6NjAwO2ZvbnQtc2l6ZToxNHB4IH1cclxuc3Bhbi5pdGVtY291bnR7d2lkdGg6MjVweDsgZmxvYXQ6cmlnaHR9XHJcblxyXG4uYm9yZGVyLWNsYXNze1xyXG5cdGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2NjYztcclxuICAgIHdpZHRoOiA5NyU7XHJcbiAgICBtYXJnaW46IDE1cHggYXV0bztcclxufVxyXG5cclxuLmRlc2MgLmxvY19sYWJsZXsgICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cdGZvbnQtd2VpZ2h0OjYwMDtcclxuXHRmb250LXNpemU6MTRweFxyXG59XHJcbi5kZXNjIC5sb2NfbGFibGU6OmFmdGVye2NvbnRlbnQ6XCI6XCJ9XHJcblxyXG4uam9iLWluZm97XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG4uaXRlbXMtbW92ZWQgLmpvYi1pbmZvIHtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn0gXHJcblxyXG4uam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLmpvYi1pbmZvIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uaXRlbXMtbW92ZWQuam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG5cdGNvbG9yOiMzMDMwMzA7XHJcbiAgICBmb250LXdlaWdodDogOTAwOyAgXHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t<h3 class=\\\"mb-4\\\">Estimate Details</h3>\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Moving</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEstimate Date : {{movingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of movingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of movingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Packing</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEstimate Date : {{packingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of packingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of packingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Unpacking</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEstimate Date : {{unpackingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of unpackingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unpackingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Loading of Truck</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEstimate Date : {{loadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of loadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of loadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Unloading of Truck</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEstimate Date : {{unloadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of unloadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unloadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<h3 class=\\\"mb-4 mt-4\\\">Feedback Details</h3>\\r\\n\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"job-info signup-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"angForm\\\"  class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 ratingclass\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Rating</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<fieldset class=\\\"rating\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"5\\\" [checked]=\\\"rating===5\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Rocks!\\\" (click)='onClick(5)'>5 stars</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"4\\\" [checked]=\\\"rating===4\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Pretty good\\\" (click)='onClick(4)'>4 stars</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"3\\\" [checked]=\\\"rating===3\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Meh\\\" (click)='onClick(3)'>3 stars</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"2\\\" [checked]=\\\"rating===2\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Kinda bad\\\" (click)='onClick(2)'>2 stars</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"1\\\" [checked]=\\\"rating===1\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Sucks big time\\\" (click)='onClick(1)'>1 star</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" type=\\\"text\\\" style=\\\"display: none;\\\" readonly=\\\"readonly\\\" id=\\\"ratingSelected\\\" formControlName=\\\"ratingSelected\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.ratingSelected.errors }\\\" [ngModel]=\\\"ratingClicked\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.ratingSelected.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.ratingSelected.errors.required\\\">Rating is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"clearfix\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Feedback</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" id=\\\"jobFeedback\\\" placeholder=\\\"Job Feedback\\\"  formControlName=\\\"jobFeedback\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.jobFeedback.errors }\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.jobFeedback.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.jobFeedback.errors.required\\\">Feedback is Required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\"  (ngSubmit)=\\\"onSubmit()\\\">Submit</button> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t</form>\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n \\r\\n \"","import { Component, OnInit ,Input, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\nimport { JobService } from '../../../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'completejob.component.html',\r\n  styleUrls : [ './completejob.component.css' ]\r\n})\r\nexport class CompleteJobComponent implements OnInit{\r\n\tangForm: FormGroup;\r\n\t\r\n\t@Input() rating: number;\r\n\t@Input() itemId: number;\r\n\t@Output() ratingClick: EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tselectedFile: ImageSnippet;\r\n\tjobid = '';\tappliances:any='';basements:any='';\tdiningrooms:any='';bedrooms:any='';\r\n\tfamilyrooms:any='';garages:any='';kitchens:any='';livingrooms:any='';patioyards:any='';\r\n\tuserslist:any='';\tjobData:any='';thisisdone:any=\"\";alllocations:any=\"\";\r\n\tstates:any = '';counties:any = '';cities:any = '';allappliances:any='';\r\n\tshow_dialog : boolean = false;\r\n\tbutton_text:any='';\r\n\tsubmitted:any='';inputName: string;ratingClicked:any='';\r\n\t movingData:any='';\r\n\tpackingData:any='';\r\n\tunpackingData:any='';\r\n\tloadingData:any='';\r\n\tunloadingData:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private router: Router,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\tthis.makeBidForm();\r\n\t\tthis.titleService.setTitle( 'Complete A Job | MoveLaunch' );\r\n\t}\r\n\tmakeBidForm() {\r\n\t\tthis.angForm = this.fb.group({\r\n\t\t\t// name: ['',  Validators.required ],\r\n\t\t\tratingSelected: ['', Validators.required ],\r\n\t\t\tjobFeedback: ['', Validators.required ],\r\n\t\t}); \r\n\t}\r\n\t\r\n\tgetSavedJob(){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\tlocalStorage.setItem('jobType','saved');\r\n\t\t\r\n\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\r\n\t\tthis.jobservice.getEditJob(this.jobid).subscribe(result => {\r\n\t\t/* this.createFromLocationForm(); */\r\n\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\tthis.jobData = result.job;\r\n\t\t\t\tif(result.job.moving && result.job.moving.length > 0){\r\n\t\t\t\t\t\tthis.movingData = result.job.moving[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(this.movingData);\r\n\t\t\t\t\tif(result.job.packing && result.job.packing.length > 0){\r\n\t\t\t\t\t\tthis.packingData = result.job.packing[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(result.job.unpacking && result.job.unpacking.length > 0){\r\n\t\t\t\t\t\tthis.unpackingData = result.job.unpacking[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(result.job.loading && result.job.loading.length > 0){\r\n\t\t\t\t\t\tthis.loadingData = result.job.loading[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(result.job.unloading && result.job.unloading.length > 0){\r\n\t\t\t\t\t\tthis.unloadingData = result.job.unloading[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t//this.jobData.servicename = this.jobData.serviceId.name;\r\n\t\t\t\t \r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t});\r\n\t\t\t\tvar currentState = this.jobData.state;\r\n\t\t\t\tvar currentCounty = this.jobData.county;\r\n\t\t\t\r\n\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t}); \r\n\t\t\t\t\t\r\n\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t//console.log(this.living);\r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(\"No Saved Job Found.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t  } \r\n\t\t});\r\n\t\t/* this.jobservice.getJobBids(this.jobid).subscribe(result=>{\r\n\t\t\r\n\t\t\t\r\n\t\t\t$.each(result.users, function(index, value) { \t\t\r\n\t\t\t\tresult.users[index].width = value.userRating*10;\r\n\t\t\t});\t\r\n\t\t\tthis.userslist = result.users;\r\n\t\t\tconsole.log(this.userslist);\r\n\t\t}); */\r\n\t}\r\n\tonClick(rating: number): void {\r\n\t\tthis.rating = rating;\r\n\t\tthis.ratingClick.emit({\r\n\t\t  itemId: this.itemId,\r\n\t\t  rating: rating\r\n\t\t});\r\n\t\tthis.ratingClicked  = this.rating;\r\n\t}\r\n\tget f() { return this.angForm.controls; }\r\n\tonSubmit() {\r\n        this.submitted = true;\r\n\t\t\r\n\t\tif(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\t\r\n\t\t\tvar rating_info = this.angForm.value;\r\n\t\t\tvar sender_id = localStorage.getItem('userid');\r\n\t\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\tvar partnerid = this.route.snapshot.paramMap.get('partnerid');\r\n\t\t\tconsole.log(rating_info);\r\n\t\t\tthis.jobservice.sendReviews(rating_info,sender_id,this.jobid,partnerid).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t if(result.success){\r\n\t\t\t\t\tthis._flashMessagesService.show('Your job has been completed successfully.', { cssClass: 'alert-success',timeout:2000}); \r\n\t\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\tthis.router.navigate(['/user-completed-jobs']);\r\n\t\t\t\t\t },2500);\r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t});\r\n\t\t \t \r\n\t\t}\t\r\n\t}\r\n\tdeleteJob(jobID){\r\n\t\tthis.jobservice.deleteJob(jobID).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis._flashMessagesService.show(\"job has been deleted successfully\", { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}else{\r\n\t\t\t\tthis._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t} \r\n\t\t   \r\n\t\t}); \r\n\t}\r\n\ttoggle() {\r\n\t\tthis.show_dialog = !this.show_dialog;\r\n\t\tthis.button_text = this.show_dialog ? 'View Less' : 'View More';\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.inputName = this.itemId + '_rating';\r\n\t\tthis.first_show = true;\r\n\t\tthis.getSavedJob();\r\n\t\tthis.button_text = 'View More';\r\n\t\tthis.ratingClicked= '';\r\n\t}\r\n\r\n}\r\n","import { ValidatorFn, AbstractControl, FormArray } from '@angular/forms';\r\n\r\n// Array Validators\r\nexport class ArrayValidators {\r\n\r\n    // max length\r\n    public static maxLength(max: number): ValidatorFn | any {\r\n        return (control: AbstractControl[]) => {\r\n            if (!(control instanceof FormArray)) return;\r\n            return control.length > max ? { maxLength: true } : null;\r\n        }\r\n    }\r\n\r\n    // min length\r\n    public static minLength(min: number): ValidatorFn | any {\r\n        return (control: AbstractControl[]) => {\r\n            if (!(control instanceof FormArray)) return;\r\n            return control.length < min ? { minLength: true } : null;\r\n        }\r\n    }\r\n\r\n    // between length\r\n    public static betweenLength(min: number, max: number): ValidatorFn | any {\r\n        return (control: AbstractControl[]) => {\r\n            if (!(control instanceof FormArray)) return;\r\n            return control.length < min || control.length > max ? { betweenLength: true } : null;\r\n        }\r\n    }\r\n\r\n    // compare in elements with a value, it need at least one match in a formGroup\r\n    public static equalsToSomeGroupKey(key: string, toCompare: number | string, strict: boolean = false): ValidatorFn | any {\r\n        return (control: AbstractControl[]) => {\r\n            if (!(control instanceof FormArray)) return;\r\n\r\n            for (let item of control.value) {\r\n                if (!item[ key ] && typeof item[ key ] === 'undefined') return { equalsToSomeGroupKey: true, err: 'Property invalid' };\r\n\r\n                const condition = strict ? item[ key ] === toCompare : item[ key ] == toCompare;\r\n\r\n                if (condition) return null;\r\n            }\r\n\r\n            return { equalsToSomeGroupKey: true };\r\n        }\r\n    }\r\n\r\n    // compare in elements with a value, it need at least one match in a formControl\r\n    public static equalsToSomeElement(toCompare: number | string, strict: boolean = false): ValidatorFn | any {\r\n        return (control: AbstractControl[]) => {\r\n            if (!(control instanceof FormArray)) return;\r\n\r\n            for (let item of control.value) {\r\n                const condition = strict ? item === toCompare : item == toCompare;\r\n\r\n                if (condition) return null;\r\n            }\r\n\r\n            return { equalsToSomeElement: true };\r\n        }\r\n    }\r\n\r\n    // check if key exists in all elements\r\n    public static keyExistsInGroups(key: string): ValidatorFn | any {\r\n        return (control: AbstractControl[]) => {\r\n            if (!(control instanceof FormArray)) return;\r\n\r\n            for (let item of control.value) {\r\n                if (!item[ key ]) return { keyExistsInGroups: true, item };\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // check if the key exists in at least one element group\r\n    public static keyExistsInAtLeastOneGroup(key: string): ValidatorFn | any {\r\n        return (control: AbstractControl[]) => {\r\n            if (!(control instanceof FormArray)) return;\r\n\r\n            for (let item of control.value) {\r\n                if (item[ key ]) return null;\r\n            }\r\n\r\n            return { keyExistsInAtLeastOneGroup: true };\r\n        }\r\n    }\r\n\r\n}","module.exports = \".mat-step-icon{\\r\\n\\theight:32px !important;\\r\\n\\twidth:32px !important;\\r\\n}\\r\\n.mat-icon-no-color{\\r\\ncolor: #1691be;\\r\\nfont-size: 20px;\\r\\nvertical-align: top !important;\\r\\n\\t\\r\\n}\\r\\n.invalid_field{\\r\\n\\twidth: 100%;\\r\\n    margin-top: .25rem;\\r\\n    font-size: 80%;\\r\\n    color: #dc3545;\\r\\n}\\r\\n.mat-icon-button.cdk-focused.cdk-program-focused{outline:none!important}\\r\\n.mat-icon-button:focus{\\r\\n\\toutline:none!important\\r\\n}\\r\\n.job_change_step_page form .custom-control-label{\\r\\n\\tpadding-left:30px\\r\\n}\\r\\n::ng-deep .mat-horizontal-stepper-header-container{display:none !important}\\r\\n::ng-deep .mat-horizontal-stepper-header{\\r\\n    pointer-events: none !important;\\r\\n}\\r\\n.mat-datepicker-toggle {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 12px;\\r\\n\\tright: 12px;\\r\\n\\tline-height: 45px;\\r\\n}\\r\\n.service-cont div[class*=\\\"col\\\"] label.serviceclass {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n\\tmargin: 0;\\r\\n\\tborder-radius: 5px;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    flex-direction: column;\\r\\n}\\r\\n.service-cont div[class*=\\\"col\\\"] .serv-txt {\\r\\n    background-position: center;\\r\\n}\\r\\n.service-cont div[class*=\\\"col\\\"] .serv-txt h4 {\\r\\n    padding-top: 70px;\\r\\n}\\r\\n.service-cont div[class*=\\\"col\\\"] .serv-txt {\\r\\n    background-position: center;\\r\\n    margin-top: -30px;\\r\\n}\\r\\n.cdb .service-cont div[class*=\\\"col\\\"] input {\\r\\n    margin: 0px auto;\\r\\n    visibility: hidden;\\r\\n    position: absolute;\\r\\n    margin: 0px auto;\\r\\n    top: 14px;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n}\\r\\n.homepage .service-cont div[class*=\\\"col\\\"] input {\\r\\n    margin: 0px auto;\\r\\n    visibility: hidden;\\r\\n    position: absolute;\\r\\n    margin: 0px auto;\\r\\n    top: 14px;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n}\\r\\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\\r\\nspan.itemcount{width:25px; float:right}\\r\\n.border-class{\\r\\n\\tborder-bottom: 1px dashed #ccc;\\r\\n    width: 97%;\\r\\n    margin: 15px auto;\\r\\n}\\r\\n.right-border{\\r\\n\\tborder-right: 1px dashed #ccc;\\r\\n   margin-right:-5px\\r\\n}\\r\\n.desc .loc_lable{    width: 100px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight:600;\\r\\n\\tfont-size:14px\\r\\n}\\r\\n.desc .loc_lable::after{content:\\\":\\\"}\\r\\n.job-info{\\r\\n    padding: 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.items-moved .job-info {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n.joblisting-panel .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.job-info .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.items-moved.joblisting-panel .title {\\r\\n\\tcolor:#303030;\\r\\n    font-weight: 900;  \\r\\n}\\r\\n.example-h2 {\\r\\n  margin: 10px;\\r\\n}\\r\\n.example-section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n.example-margin {\\r\\n  margin: 0 10px;\\r\\n  display:inline-block;\\r\\n  vertical-align:bottom;\\r\\n}\\r\\n:host ::ng-deep .mat-progress-spinner circle, .mat-spinner circle {   \\r\\n    stroke: #1691be;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9jcmVhdGVqb2IvY3JlYXRlam9iLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxzQkFBc0I7Q0FDdEIscUJBQXFCO0FBQ3RCO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsZUFBZTtBQUNmLDhCQUE4Qjs7QUFFOUI7QUFDQTtDQUNDLFdBQVc7SUFDUixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGNBQWM7QUFDbEI7QUFDQSxpREFBaUQsc0JBQXNCO0FBQ3ZFO0NBQ0M7QUFDRDtBQUVBO0NBQ0M7QUFDRDtBQUNBLG1EQUFtRCx1QkFBdUI7QUFFMUU7SUFDSSwrQkFBK0I7QUFDbkM7QUFFQTtDQUNDLGtCQUFrQjtDQUNsQixTQUFTO0NBQ1QsV0FBVztDQUNYLGlCQUFpQjtBQUNsQjtBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxRQUFRO0NBQ1gsU0FBUztDQUNULGtCQUFrQjtJQUNmLE1BQU07SUFDTixTQUFTO0lBR1QsYUFBYTtJQUdMLG1CQUFtQjtJQUduQix1QkFBdUI7SUFJdkIsc0JBQXNCO0FBQ2xDO0FBQ0E7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksMkJBQTJCO0lBQzNCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLFNBQVM7SUFDVCxPQUFPO0lBQ1AsUUFBUTtBQUNaO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsU0FBUztJQUNULE9BQU87SUFDUCxRQUFRO0FBQ1o7QUFDQSxlQUFlLFVBQVUsQ0FBQyxlQUFlLENBQUMsZUFBZTtBQUN6RCxlQUFlLFVBQVUsRUFBRSxXQUFXO0FBRXRDO0NBQ0MsOEJBQThCO0lBQzNCLFVBQVU7SUFDVixpQkFBaUI7QUFDckI7QUFDQTtDQUNDLDZCQUE2QjtHQUMzQjtBQUNIO0FBQ0EscUJBQXFCLFlBQVk7SUFDN0Isa0JBQWtCO0lBQ2xCLHFCQUFxQjtDQUN4QixpQkFBaUI7Q0FDakIsZUFBZTtDQUNmO0FBQ0Q7QUFDQSx3QkFBd0IsV0FBVztBQUVuQztJQUNJLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7QUFDQTtJQUdJLGFBQWE7SUFFVCxlQUFlO0FBQ3ZCO0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7QUFDQTtDQUNDLGFBQWE7SUFDVixnQkFBZ0I7QUFDcEI7QUFFQTtFQUNFLFlBQVk7QUFDZDtBQUVBO0VBQ0UsYUFBYTtFQUNiLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBRUE7RUFDRSxjQUFjO0VBQ2Qsb0JBQW9CO0VBQ3BCLHFCQUFxQjtBQUN2QjtBQUVBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvY3JlYXRlam9iL2NyZWF0ZWpvYi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1zdGVwLWljb257XHJcblx0aGVpZ2h0OjMycHggIWltcG9ydGFudDtcclxuXHR3aWR0aDozMnB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuLm1hdC1pY29uLW5vLWNvbG9ye1xyXG5jb2xvcjogIzE2OTFiZTtcclxuZm9udC1zaXplOiAyMHB4O1xyXG52ZXJ0aWNhbC1hbGlnbjogdG9wICFpbXBvcnRhbnQ7XHJcblx0XHJcbn1cdFxyXG4uaW52YWxpZF9maWVsZHtcclxuXHR3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi10b3A6IC4yNXJlbTtcclxuICAgIGZvbnQtc2l6ZTogODAlO1xyXG4gICAgY29sb3I6ICNkYzM1NDU7XHJcbn1cclxuLm1hdC1pY29uLWJ1dHRvbi5jZGstZm9jdXNlZC5jZGstcHJvZ3JhbS1mb2N1c2Vke291dGxpbmU6bm9uZSFpbXBvcnRhbnR9XHJcbi5tYXQtaWNvbi1idXR0b246Zm9jdXN7XHJcblx0b3V0bGluZTpub25lIWltcG9ydGFudFxyXG59XHJcblxyXG4uam9iX2NoYW5nZV9zdGVwX3BhZ2UgZm9ybSAuY3VzdG9tLWNvbnRyb2wtbGFiZWx7XHJcblx0cGFkZGluZy1sZWZ0OjMwcHhcclxufVxyXG46Om5nLWRlZXAgLm1hdC1ob3Jpem9udGFsLXN0ZXBwZXItaGVhZGVyLWNvbnRhaW5lcntkaXNwbGF5Om5vbmUgIWltcG9ydGFudH1cclxuXHJcbjo6bmctZGVlcCAubWF0LWhvcml6b250YWwtc3RlcHBlci1oZWFkZXJ7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubWF0LWRhdGVwaWNrZXItdG9nZ2xlIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0dG9wOiAxMnB4O1xyXG5cdHJpZ2h0OiAxMnB4O1xyXG5cdGxpbmUtaGVpZ2h0OiA0NXB4O1xyXG59XHJcblxyXG4uc2VydmljZS1jb250IGRpdltjbGFzcyo9XCJjb2xcIl0gbGFiZWwuc2VydmljZWNsYXNzIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuXHRtYXJnaW46IDA7XHJcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XHJcbiAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcclxuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG4uc2VydmljZS1jb250IGRpdltjbGFzcyo9XCJjb2xcIl0gLnNlcnYtdHh0IHtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxufVxyXG4uc2VydmljZS1jb250IGRpdltjbGFzcyo9XCJjb2xcIl0gLnNlcnYtdHh0IGg0IHtcclxuICAgIHBhZGRpbmctdG9wOiA3MHB4O1xyXG59XHJcbi5zZXJ2aWNlLWNvbnQgZGl2W2NsYXNzKj1cImNvbFwiXSAuc2Vydi10eHQge1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogLTMwcHg7XHJcbn1cclxuLmNkYiAuc2VydmljZS1jb250IGRpdltjbGFzcyo9XCJjb2xcIl0gaW5wdXQge1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIG1hcmdpbjogMHB4IGF1dG87XHJcbiAgICB0b3A6IDE0cHg7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbn1cclxuLmhvbWVwYWdlIC5zZXJ2aWNlLWNvbnQgZGl2W2NsYXNzKj1cImNvbFwiXSBpbnB1dCB7XHJcbiAgICBtYXJnaW46IDBweCBhdXRvO1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuICAgIHRvcDogMTRweDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxufVxyXG5zcGFuLml0ZW1uYW1leyB3aWR0aDoyMHB4O2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MTRweCB9XHJcbnNwYW4uaXRlbWNvdW50e3dpZHRoOjI1cHg7IGZsb2F0OnJpZ2h0fVxyXG5cclxuLmJvcmRlci1jbGFzc3tcclxuXHRib3JkZXItYm90dG9tOiAxcHggZGFzaGVkICNjY2M7XHJcbiAgICB3aWR0aDogOTclO1xyXG4gICAgbWFyZ2luOiAxNXB4IGF1dG87XHJcbn1cclxuLnJpZ2h0LWJvcmRlcntcclxuXHRib3JkZXItcmlnaHQ6IDFweCBkYXNoZWQgI2NjYztcclxuICAgbWFyZ2luLXJpZ2h0Oi01cHhcclxufVxyXG4uZGVzYyAubG9jX2xhYmxleyAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0dGV4dC1hbGlnbjogcmlnaHQ7XHJcblx0Zm9udC13ZWlnaHQ6NjAwO1xyXG5cdGZvbnQtc2l6ZToxNHB4XHJcbn1cclxuLmRlc2MgLmxvY19sYWJsZTo6YWZ0ZXJ7Y29udGVudDpcIjpcIn1cclxuXHJcbi5qb2ItaW5mb3tcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbi5pdGVtcy1tb3ZlZCAuam9iLWluZm8ge1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxufSBcclxuXHJcbi5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uam9iLWluZm8gLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5pdGVtcy1tb3ZlZC5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcblx0Y29sb3I6IzMwMzAzMDtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7ICBcclxufVxyXG5cclxuLmV4YW1wbGUtaDIge1xyXG4gIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuLmV4YW1wbGUtc2VjdGlvbiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDYwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLW1hcmdpbiB7XHJcbiAgbWFyZ2luOiAwIDEwcHg7XHJcbiAgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiAgdmVydGljYWwtYWxpZ246Ym90dG9tO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLm1hdC1wcm9ncmVzcy1zcGlubmVyIGNpcmNsZSwgLm1hdC1zcGlubmVyIGNpcmNsZSB7ICAgXHJcbiAgICBzdHJva2U6ICMxNjkxYmU7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container job_change_step_page\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t<mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<mat-step >\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"angForm\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What services would you like an estimate for?</h3>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"defaultInline1\\\" (click)=\\\"clearForm()\\\" formControlName = \\\"jobtype\\\" value=\\\"new\\\" (click)=\\\"createNewJob()\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"custom-control-label\\\" for=\\\"defaultInline1\\\">Create a new Estimate</label>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<!-- Default inline 2-->\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"defaultInline2\\\" formControlName = \\\"jobtype\\\" (click)=\\\"geSavedJob()\\\"  value=\\\"saved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"custom-control-label\\\" for=\\\"defaultInline2\\\">Continue Saved Estimate</label>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">You can select more then one option</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"services\\\" *ngFor=\\\"let option of angForm.controls.services.controls; let i=index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(selectedServices && selectedServices.includes(jobservices[i]._id))?true : false\\\" [ngModel] = \\\"(selectedServices && selectedServices.includes(jobservices[i]._id))?true : false\\\" [formControlName]=\\\"i\\\"  (click)=\\\"checkName(jobservices[i].name)\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"moving_{{i}}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"moving_{{i}}\\\">{{jobservices[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_service\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"submitted_service\\\">Select at least one options</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\" (click)=\\\"isChangeheading(stepper);\\\" type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\" [color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t</mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showMoving\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"angOptionsForm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to move:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepicker.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepicker\\\" class=\\\"form-control\\\" id=\\\"job_start_date\\\" formControlName=\\\"job_start_date\\\"   [ngClass]=\\\"{ 'is-invalid': submitted_moving && f.job_start_date.errors}\\\" [ngModel]=\\\"movingData && movingData.jobStart? movingData.jobStart : ''\\\"\\r\\n(ngModelChange)=\\\"movingData && movingData.jobStart=$event\\\"   placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepicker\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepicker></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_moving && f.job_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.job_start_date.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_moving && f.job_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.job_start_date.errors.matDatepickerMin\\\">Job Date is passed. This is an old job</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help moving?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"options\\\" *ngFor=\\\"let option of angOptionsForm.controls.options.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(movingData && movingData.selected_options.includes(optionsData[i].id))?true : false\\\" [ngModel] = \\\"(movingData && movingData.selected_options.includes(optionsData[i].id))?true : false\\\" [formControlName]=\\\"i\\\" (click)=\\\"checkOptions('moving')\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"options_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"options_{{i}}\\\">{{optionsData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage1\\\">Select at least one options for moving</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\" (click)=\\\"setOptionsAvailable(stepper)\\\" type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showMoving\\\">\\r\\n\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"secondFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Moving from Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t <div formArrayName=\\\"itemRows\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of secondFormGroup.controls.itemRows.controls; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving from ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from\\\" (change)=\\\"toggleMovingFrom($event,i,itemrow)\\\" formControlName=\\\"moving_from\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving from ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"f2.controls[i].controls.moving_from.errors.required\\\">Moving From is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_floor\\\" formControlName=\\\"moving_from_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_floor.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_floor.errors.required\\\">Moving From floor is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_state\\\" formControlName=\\\"moving_from_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesFrom($event,secondFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_state.errors.required\\\">Moving From state is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_county\\\" formControlName=\\\"moving_from_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesFrom($event,i,secondFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties1\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_county.errors.required\\\">Moving From county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n \\r\\n \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_city\\\" formControlName=\\\"moving_from_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities1\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_city.errors.required\\\">Moving From city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\"  maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\"  id=\\\"moving_from_zipcode\\\" formControlName=\\\"moving_from_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_zipcode.errors.required\\\">Moving From zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_from_address\\\" formControlName=\\\"moving_from_address\\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_address.errors.required\\\">Moving From address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"secondFormGroup.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRow('click')\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFromLocation(stepper,secondFormGroup,'moving',thirdFormGroup);\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t  <mat-step *ngIf = \\\"showMoving\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirdFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Moving to Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t   <div formArrayName=\\\"itemRowsTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of thirdFormGroup.controls.itemRowsTo['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving to ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to\\\" (change)=\\\"toggleMovingTo($event,i,itemrow)\\\" formControlName=\\\"moving_to\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to.errors}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving to ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to.errors.required\\\">Moving To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_floor\\\"  formControlName=\\\"moving_to_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_floor.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_floor.errors.required\\\">Moving To floor is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_state\\\" formControlName=\\\"moving_to_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesTo($event,thirdFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_state.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_state.errors.required\\\">Moving To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_county\\\" formControlName=\\\"moving_to_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesTo($event,i,thirdFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties2\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_county.errors.required\\\">Moving To county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_city\\\" formControlName=\\\"moving_to_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_city.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities2\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_city.errors.required\\\">Moving To city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  maxlength=\\\"5\\\" class=\\\"form-control\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" id=\\\"moving_to_zipcode\\\" formControlName=\\\"moving_to_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_zipcode.errors.required\\\">Moving To zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_to_address\\\" formControlName=\\\"moving_to_address\\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_address.errors.required\\\">Moving To address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"thirdFormGroup.controls.itemRowsTo.controls.length > 1\\\" (click)=\\\"deleteRowTo(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRowTo()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveToLocation(stepper,thirdFormGroup,'moving');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form> \\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"FourthFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of FourthFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}} </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_moving[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"movingData && movingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"appliance_assembly\\\" [(ngModel)]=\\\"movingData && movingData.appliance_assembly\\\" formControlName=\\\"appliance_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"appliance_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,FourthFormGroup,'moving');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showMoving && showBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_moving[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"movingData && movingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"bedrooms_assembly\\\" [(ngModel)]=\\\"movingData && movingData.abedrooms_assembly\\\" formControlName=\\\"bedrooms_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"bedrooms_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthFormGroup,'moving');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showLivingRooms\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"movingData && movingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"livingRooms_assembly\\\" [(ngModel)]=\\\"movingData && movingData.livingRooms_assembly\\\" formControlName=\\\"livingRooms_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"livingRooms_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthFormGroup,'moving');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"movingData && movingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"familyRooms_assembly\\\" [(ngModel)]=\\\"movingData && movingData.familyRooms_assembly\\\" formControlName=\\\"familyRooms_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"familyRooms_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhFormGroup,'moving');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"movingData && movingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"diningRooms_assembly\\\" [(ngModel)]=\\\"movingData && movingData.diningRooms_assembly\\\" formControlName=\\\"diningRooms_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"diningRooms_assembly\\\">Need Help in Dining Rooms assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthFormGroup,'moving');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step   *ngIf = \\\"showMoving && showKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let kitchen of ninthFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"movingData && movingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"kitchen_assembly\\\" [(ngModel)]=\\\"movingData && movingData.kitchen_assembly\\\" formControlName=\\\"kitchen_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"kitchen_assembly\\\">Need Help in Kitchen assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthFormGroup,'moving');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"movingData && movingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"basement_assembly\\\" [(ngModel)]=\\\"movingData && movingData.basement_assembly\\\" formControlName=\\\"basement_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"basement_assembly\\\">Need Help in Basements assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthFormGroup,'moving');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"movingData && movingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"garage_assembly\\\" [(ngModel)]=\\\"movingData && movingData.garage_assembly\\\" formControlName=\\\"garage_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"garage_assembly\\\">Need Help in Garages assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhFormGroup,'moving');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showPatiyoYards\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tweleveFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of tweleveFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"movingData && movingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"patioyards_assembly\\\" [(ngModel)]=\\\"movingData && movingData.patioyards_assembly\\\" formControlName=\\\"patioyards_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"patioyards_assembly\\\">Need Help in patioyards assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,tweleveFormGroup,'moving');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"movingData && movingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"patioyards_assembly\\\" [(ngModel)]=\\\"movingData && movingData.patioyards_assembly\\\" formControlName=\\\"patioyards_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"patioyards_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOffices(stepper,thirteenFormGroup,'moving');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showOversized\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"movingData && movingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"patioyards_assembly\\\" [(ngModel)]=\\\"movingData && movingData.patioyards_assembly\\\" formControlName=\\\"patioyards_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"patioyards_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOverSized(stepper,fourteenFormGroup,'moving');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n<!---------------------------------------------------- Packing Overview ------------------------------------------------------------------>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking\\\">\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"angPackedOptionsForm\\\"  class=\\\"esitame-form\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to pack:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepickerPacking.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepickerPacking\\\" class=\\\"form-control\\\" id=\\\"job_start_date_packing\\\" formControlName=\\\"job_start_date_packing\\\"   [ngClass]=\\\"{ 'is-invalid': submitted_packing && _f1.job_start_date_packing.errors}\\\" [ngModel]=\\\"packingData && packingData.jobStart? packingData.jobStart : ''\\\"\\r\\n(ngModelChange)=\\\"packingData && packingData.jobStart=$event\\\"   placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepickerPacking\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepickerPacking></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_packing && _f1.job_start_date_packing.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f1.job_start_date_packing.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_packing && _f1.job_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f1.job_start_date.errors.matDatepickerMin\\\">Job Date is passed. This is an old job</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help Packing?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"packingoptions\\\" *ngFor=\\\"let packingoption of angPackedOptionsForm.controls.packingoptions.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(packingData && packingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [ngModel] = \\\"(packingData && packingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" (click)=\\\"checkOptions('packing')\\\"   [formControlName]=\\\"i\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"packingoptions_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"packingoptions_{{i}}\\\">{{optionsPackedData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage2\\\">Select at least one options for packing</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\"  (click)=\\\"setPackingOptionsAvailable(stepper,'forPacking');\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button><mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showPacking\\\">\\r\\n\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"secondpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Packing from Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t <div formArrayName=\\\"itemRows\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of secondpackedFormGroup.controls.itemRows['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving from ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from\\\" (change)=\\\"toggleMovingFrom($event,i,itemrow)\\\" formControlName=\\\"moving_from\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving from ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"_f2.controls[i].controls.moving_from.errors.required\\\">Moving From is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_floor\\\"  formControlName=\\\"moving_from_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_floor.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_floor.errors.required\\\">Moving From floor is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_state\\\" formControlName=\\\"moving_from_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesFrom($event,secondpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_state.errors.required\\\">Moving From state is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_county\\\" formControlName=\\\"moving_from_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesFrom($event,i,secondpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties1\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_county.errors.required\\\">Moving From county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n \\r\\n \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_city\\\" formControlName=\\\"moving_from_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities1\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_city.errors.required\\\">Moving From city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\"  maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\"  id=\\\"moving_from_zipcode\\\" formControlName=\\\"moving_from_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_zipcode.errors.required\\\">Moving From zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_from_address\\\" formControlName=\\\"moving_from_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_address.errors.required\\\">Moving From address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"secondpackedFormGroup.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRow()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFromLocation(stepper,secondpackedFormGroup,'packing',thirdpackedFormGroup);\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showPacking\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirdpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Packing to Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t   <div formArrayName=\\\"itemRowsTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of thirdpackedFormGroup.controls.itemRowsTo['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving to ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to\\\" (change)=\\\"toggleMovingTo($event,i,itemrow)\\\" formControlName=\\\"moving_to\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to.errors}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving to ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to.errors.required\\\">Packing To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_floor\\\"  formControlName=\\\"moving_to_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_floor.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_floor.errors.required\\\">Packing To floor is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_state\\\" formControlName=\\\"moving_to_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesTo($event,thirdpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_state.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_state.errors.required\\\">Packing To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_county\\\" formControlName=\\\"moving_to_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesTo($event,i,thirdpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties2\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_county.errors.required\\\">Moving To county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_city\\\" formControlName=\\\"moving_to_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_city.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities2\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_city.errors.required\\\">Packing To city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  maxlength=\\\"5\\\" class=\\\"form-control\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" id=\\\"moving_to_zipcode\\\" formControlName=\\\"moving_to_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_zipcode.errors.required\\\">Packing To zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_to_address\\\" formControlName=\\\"moving_to_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_address.errors.required\\\">Packing To address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"thirdpackedFormGroup.controls.itemRowsTo.controls.length > 1\\\" (click)=\\\"deleteRowTo(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRowTo()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveToLocation(stepper,thirdpackedFormGroup,'packing');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form> \\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t <mat-step *ngIf = \\\"showPacking && showPackingAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"fourthpackedFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of fourthpackedFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}} </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_packing[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"packingData && packingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,fourthpackedFormGroup,'packing');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showPacking && showPackingBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthpackedFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_packing[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"packingData && packingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthpackedFormGroup,'packing');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingLivingRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthpackedFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"packingData && packingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthpackedFormGroup,'packing');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhpackedFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"packingData && packingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhpackedFormGroup,'packing');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthpackedFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"packingData && packingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthpackedFormGroup,'packing');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showPacking && showPackingKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let kitchen of ninthpackedFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"packingData && packingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthpackedFormGroup,'packing');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthpackedFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"packingData && packingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthpackedFormGroup,'packing');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhpackedFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"packingData && packingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhpackedFormGroup,'packing');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingPatiyoYards\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"twelevepackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of twelevepackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"packingData && packingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,twelevepackedFormGroup,'packing');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"packingData && packingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,thirteenpackedFormGroup,'packing');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingOversized\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"packingData && packingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,fourteenpackedFormGroup,'packing');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n<!---------------------------------------------------- Packing Overview ------------------------------------------------------------------>\\r\\n<!---------------------------------------------------- Unpacking Overview ------------------------------------------------------------------>\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnPacking\\\">\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"angunPackedOptionsForm\\\"  class=\\\"esitame-form\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to Unpack:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepickerunPacking.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepickerunPacking\\\" class=\\\"form-control\\\" id=\\\"job_start_date_unpacking\\\" formControlName=\\\"job_start_date_unpacking\\\"   [ngClass]=\\\"{ 'is-invalid': submitted_unpacking && _Uf1.job_start_date_unpacking.errors}\\\" [ngModel]=\\\"unpackingData && unpackingData.jobStart? unpackingData.jobStart : ''\\\"\\r\\n(ngModelChange)=\\\"unpackingData && unpackingData.jobStart=$event\\\" placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepickerunPacking\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepickerunPacking></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_unpacking && _Uf1.job_start_date_unpacking.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_Uf1.job_start_date_unpacking.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help Unpacking?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"packingoptions\\\" *ngFor=\\\"let packingoption of angunPackedOptionsForm.controls.packingoptions.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(unpackingData && unpackingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [ngModel] = \\\"(unpackingData && unpackingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" (click)=\\\"checkOptions('unpacking')\\\"  [formControlName]=\\\"i\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"unpackingoptions_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"unpackingoptions_{{i}}\\\">{{optionsPackedData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage3\\\">Select at least one options for unpacking</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\" (click)=\\\"setPackingOptionsAvailable(stepper,'forUnpacking');\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\t\\t\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnPacking\\\">\\r\\n\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"secondunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Unpacking from Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t <div formArrayName=\\\"itemRows\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of secondunpackedFormGroup.controls.itemRows['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving from ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from\\\" (change)=\\\"toggleMovingFrom($event,i,itemrow)\\\" formControlName=\\\"moving_from\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving from ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"_UPf2.controls[i].controls.moving_from.errors.required\\\">Moving From is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_floor\\\"  formControlName=\\\"moving_from_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_floor.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_floor.errors.required\\\">Moving From floor is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_state\\\" formControlName=\\\"moving_from_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesFrom($event,secondunpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_state.errors.required\\\">Moving From state is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_county\\\" formControlName=\\\"moving_from_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesFrom($event,i,secondunpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties1\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_county.errors.required\\\">Moving From county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n \\r\\n \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_city\\\" formControlName=\\\"moving_from_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities1\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_city.errors.required\\\">Moving From city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\"  maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\"  id=\\\"moving_from_zipcode\\\" formControlName=\\\"moving_from_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_zipcode.errors.required\\\">Moving From zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_from_address\\\" formControlName=\\\"moving_from_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_address.errors.required\\\">Moving From address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"secondunpackedFormGroup.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRow()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFromLocation(stepper,secondunpackedFormGroup,'unpacking',thirdunpackedFormGroup);\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnPacking\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirdunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Unpacking to Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t   <div formArrayName=\\\"itemRowsTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of thirdunpackedFormGroup.controls.itemRowsTo['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving to ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to\\\" (change)=\\\"toggleMovingTo($event,i,itemrow)\\\" formControlName=\\\"moving_to\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to.errors}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving to ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to.errors.required\\\">Packing To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_floor\\\"   formControlName=\\\"moving_to_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_floor.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_floor.errors.required\\\">Packing To floor is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_state\\\" formControlName=\\\"moving_to_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesTo($event,thirdunpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_state.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_state.errors.required\\\">Packing To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_county\\\" formControlName=\\\"moving_to_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesTo($event,i,thirdunpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties2\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_county.errors.required\\\">Moving To county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_city\\\" formControlName=\\\"moving_to_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_city.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities2\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_city.errors.required\\\">Packing To city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  maxlength=\\\"5\\\" class=\\\"form-control\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" id=\\\"moving_to_zipcode\\\" formControlName=\\\"moving_to_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_zipcode.errors.required\\\">Packing To zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_to_address\\\" formControlName=\\\"moving_to_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_address.errors.required\\\">Packing To address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"thirdunpackedFormGroup.controls.itemRowsTo.controls.length > 1\\\" (click)=\\\"deleteRowTo(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRowTo()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveToLocation(stepper,thirdunpackedFormGroup,'unpacking');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form> \\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnPacking && showUnpackingAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"fourthunpackedFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of fourthunpackedFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}} </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_unpacking[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,fourthunpackedFormGroup,'unpacking');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showUnPacking && showUnpackingBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthunpackedFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_unpacking[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthunpackedFormGroup,'unpacking');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingLivingRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthunpackedFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthunpackedFormGroup,'unpacking');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhunpackedFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhunpackedFormGroup,'unpacking');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthunpackedFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthunpackedFormGroup,'unpacking');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showUnPacking && showUnpackingKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let kitchen of ninthunpackedFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthunpackedFormGroup,'unpacking');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthunpackedFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthunpackedFormGroup,'unpacking');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhunpackedFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhunpackedFormGroup,'unpacking');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingPatiyoYards\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tweleveunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of tweleveunpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,tweleveunpackedFormGroup,'unpacking');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenunpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,thirteenunpackedFormGroup,'unpacking');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingOversized\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenunpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,fourteenunpackedFormGroup,'unpacking');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\t\\r\\n<!---------------------------------------------------- Unpacking Overview ------------------------------------------------------------------>\\r\\n<!---------------------------------------------------- Loading Overview ------------------------------------------------------------------>\\r\\n\\t\\t\\t\\t <mat-step *ngIf = \\\"showLoading\\\">\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"angLoadingOptionsForm\\\"  class=\\\"esitame-form\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to Loading:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepickerLoading.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepickerLoading\\\" class=\\\"form-control\\\" id=\\\"job_start_date_loading\\\" formControlName=\\\"job_start_date_loading\\\" [ngClass]=\\\"{ 'is-invalid': submitted_loading && _fL1.job_start_date_loading.errors}\\\" [ngModel]=\\\"loadingData && loadingData.jobStart? loadingData.jobStart : ''\\\"\\r\\n(ngModelChange)=\\\"loadingData && loadingData.jobStart=$event\\\"   placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepickerLoading\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepickerLoading></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_loading && _fL1.job_start_date_loading.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_fL1.job_start_date_loading.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help Loading?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"packingoptions\\\" *ngFor=\\\"let packingoption of angLoadingOptionsForm.controls.packingoptions.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(loadingData && loadingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [ngModel] = \\\"(loadingData && loadingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [formControlName]=\\\"i\\\" (click)=\\\"checkOptions('loading')\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"loadinggoptions_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"loadinggoptions_{{i}}\\\">{{optionsPackedData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage4\\\">Select at least one options for loading</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\"  (click)=\\\"setLoadingOptionsAvailable(stepper);\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\t\\t\\t\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showLoading\\\">\\r\\n\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"secondloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Loading from Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t <div formArrayName=\\\"itemRows\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of secondloadingFormGroup.controls.itemRows['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you loading from ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from\\\" (change)=\\\"toggleMovingFrom($event,i,itemrow)\\\" formControlName=\\\"moving_from\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you loading from ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"fL2.controls[i].controls.moving_from.errors.required\\\">Moving From is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_floor\\\" formControlName=\\\"moving_from_floor\\\"  class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_floor.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_floor.errors.required\\\">Moving From floor is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_state\\\" formControlName=\\\"moving_from_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesFrom($event,secondloadingFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_state.errors.required\\\">Moving From state is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_county\\\" formControlName=\\\"moving_from_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesFrom($event,i,secondloadingFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties1\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_county.errors.required\\\">Moving From county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n \\r\\n \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_city\\\" formControlName=\\\"moving_from_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities1\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_city.errors.required\\\">Moving From city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\"  maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\"  id=\\\"moving_from_zipcode\\\" formControlName=\\\"moving_from_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_zipcode.errors.required\\\">Moving From zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_from_address\\\" formControlName=\\\"moving_from_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_address.errors.required\\\">Moving From address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"secondloadingFormGroup.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRow()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFromLoadingLocation(stepper,secondloadingFormGroup,'loading',thirdloadingFormGroup);\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoadingAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"FourthloadingFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of FourthloadingFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}} </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_loading[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,FourthloadingFormGroup,'loading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showLoading && showLoadingBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthloadingFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_loading[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthloadingFormGroup,'loading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingLivingRooms\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthloadingFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthloadingFormGroup,'loading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhloadingFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhloadingFormGroup,'loading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthloadingFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthloadingFormGroup,'loading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step   *ngIf = \\\"showLoading && showLoadingKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let appliance of ninthloadingFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthloadingFormGroup,'loading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthloadingFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthloadingFormGroup,'loading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhloadingFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhloadingFormGroup,'loading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingPatiyoYards\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tweleveloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of tweleveloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,tweleveloadingFormGroup,'loading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOffices(stepper,thirteenloadingFormGroup,'loading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingOversized\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOverSized(stepper,fourteenloadingFormGroup,'loading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnLoading\\\">\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"angUnloadingOptionsForm\\\"  class=\\\"esitame-form\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to Unloading:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepickerUnloading.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepickerUnloading\\\" class=\\\"form-control\\\" id=\\\"job_start_date_unloading\\\" formControlName=\\\"job_start_date_unloading\\\"   [ngClass]=\\\"{ 'is-invalid': submitted_unloading && _fUL1.job_start_date_unloading.errors}\\\"  [ngModel]=\\\"unloadingData && unloadingData.jobStart? unloadingData.jobStart : ''\\\"\\r\\n(ngModelChange)=\\\"unloadingData && unloadingData.jobStart=$event\\\"    placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepickerUnloading\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepickerUnloading></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_unloading && _fUL1.job_start_date_unloading.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_fUL1.job_start_date_unloading.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help Unloading?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"packingoptions\\\" *ngFor=\\\"let packingoption of angUnloadingOptionsForm.controls.packingoptions.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\" (unloadingData && unloadingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [ngModel] = \\\"(unloadingData && unloadingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\"[formControlName]=\\\"i\\\" (click)=\\\"checkOptions('unloading')\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"unloadingoptions_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"unloadingoptions_{{i}}\\\">{{optionsPackedData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage5\\\">Select at least one options for unloading</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\"  (click)=\\\"setUnloadingOptionsAvailable(stepper);\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\t\\t\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnLoading\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirdunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Unloading to Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t   <div formArrayName=\\\"itemRowsTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of thirdunloadingFormGroup.controls.itemRowsTo['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving to ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to\\\" (change)=\\\"toggleMovingTo($event,i,itemrow)\\\" formControlName=\\\"moving_to\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to.errors}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving to ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to.errors.required\\\">Moving To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_floor\\\"  formControlName=\\\"moving_to_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_floor.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_floor.errors.required\\\">Moving To floor is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_state\\\" formControlName=\\\"moving_to_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesTo($event,thirdunloadingFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_state.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_state.errors.required\\\">Moving To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_county\\\" formControlName=\\\"moving_to_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesTo($event,i,thirdunloadingFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties2\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_county.errors.required\\\">Moving To county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_city\\\" formControlName=\\\"moving_to_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_city.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities2\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_city.errors.required\\\">Moving To city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  maxlength=\\\"5\\\" class=\\\"form-control\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" id=\\\"moving_to_zipcode\\\" formControlName=\\\"moving_to_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_zipcode.errors.required\\\">Moving To zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_to_address\\\" formControlName=\\\"moving_to_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_address.errors.required\\\">Moving To address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"thirdunloadingFormGroup.controls.itemRowsTo.controls.length > 1\\\" (click)=\\\"deleteRowTo(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRowTo()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveToLocation(stepper,thirdunloadingFormGroup,'unloading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form> \\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnloadingAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"fourthunloadingFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of fourthunloadingFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}} </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_unloading[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,fourthunloadingFormGroup,'unloading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showUnLoading && showUnloadingBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthunloadingFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_unloading[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthunloadingFormGroup,'unloading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnLoading && showUnloadingLivingRooms\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthunloadingFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthunloadingFormGroup,'unloading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnLoading && showUnloadingFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhunloadingFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhunloadingFormGroup,'unloading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnLoading && showUnloadingDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthunloadingFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthunloadingFormGroup,'unloading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step   *ngIf = \\\"showUnLoading && showUnloadingKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let kitchen of ninthunloadingFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthunloadingFormGroup,'unloading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnLoading && showUnloadingBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthunloadingFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthunloadingFormGroup,'unloading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnLoading && showUnloadingGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhunloadingFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhunloadingFormGroup,'unloading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnLoading && showUnloadingPatiyoYards\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tweleveunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of tweleveunloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,tweleveunloadingFormGroup,'unloading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnLoading && showUnloadingOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenunloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOffices(stepper,thirteenunloadingFormGroup,'unloading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnLoading && showUnloadingOversized\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenunloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOverSized(stepper,fourteenunloadingFormGroup,'unloading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n<!---------------------------------------------------- Loading Overview ------------------------------------------------------------------>\\r\\n<!---------------------------------------------------- Unloading Overview ------------------------------------------------------------------>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t  <mat-step>\\r\\n\\t\\t\\t\\t\\t\\t<form>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Basic Information</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Firstname </span> {{ jobData.firstname }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ jobData.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{ jobData.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{jobData.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Lastname </span>  {{ jobData.lastname }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{ jobData.county }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Phone </span>  {{ jobData.phone }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{jobData.address}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t \\t<div class=\\\"step1\\\" *ngIf=\\\"showMoving && movingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Moving Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\"  *ngIf=\\\"movingData && movingData.moving_from.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of movingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"movingData && movingData.moving_to.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of movingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Moved\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.appliances  && movingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of movingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_misc\\\">{{ movingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.appliances && movingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.bedRooms  && movingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of movingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedrooms_misc\\\">{{ movingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.bedRooms && movingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.livingRooms && movingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of movingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_misc\\\">{{ movingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.livingRooms && movingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.familyRooms && movingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of movingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_misc\\\">{{ movingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.familyRooms && movingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.diningRooms  && movingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of movingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_misc\\\">{{ movingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.diningRooms && movingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.kitchen && movingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of movingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_misc\\\">{{ movingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.kitchen && movingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.basement && movingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of movingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_misc\\\">{{ movingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.basement && movingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.garage  && movingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of movingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_misc\\\">{{ movingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.garage && movingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.patioYard  && movingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of movingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_misc\\\">{{ movingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.patioYard && movingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" *ngIf=\\\"showPacking && packingData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Packing Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData && packingData.moving_from.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of packingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData && packingData.moving_to.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of packingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Packed\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.appliances  && packingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of packingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.appliances_misc\\\">{{ packingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.appliances && packingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.bedRooms  && packingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of packingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.bedrooms_misc\\\">{{ packingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.bedRooms && packingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.livingRooms && packingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of packingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.livingRooms_misc\\\">{{ packingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.livingRooms && packingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.familyRooms && packingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of packingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.familyRooms_misc\\\">{{ packingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.familyRooms && packingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.diningRooms  && packingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of packingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.diningRooms_misc\\\">{{ packingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.diningRooms && packingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.kitchen && packingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of packingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.kitchen_misc\\\">{{ packingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.kitchen && packingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.basement && packingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of packingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.basement_misc\\\">{{ packingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.basement && packingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.garage  && packingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of packingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.garage_misc\\\">{{ packingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.garage && packingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.patioYard  && packingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of packingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.patioYard_misc\\\">{{ packingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.patioYard && packingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" *ngIf=\\\"showUnPacking && unpackingData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Unpacking Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData && unpackingData.moving_from.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  *ngFor=\\\"let movingfrom of unpackingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData && unpackingData.moving_to.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  *ngFor=\\\"let movingto of unpackingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Unpacked\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.appliances  && unpackingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unpackingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.appliances_misc\\\">{{ unpackingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.appliances && unpackingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.bedRooms  && unpackingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unpackingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.bedrooms_misc\\\">{{ unpackingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.bedRooms && unpackingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.livingRooms && unpackingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unpackingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.livingRooms_misc\\\">{{ unpackingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.livingRooms && unpackingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.familyRooms && unpackingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unpackingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.familyRooms_misc\\\">{{ unpackingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.familyRooms && unpackingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.diningRooms  && unpackingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unpackingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.diningRooms_misc\\\">{{ unpackingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.diningRooms && unpackingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.kitchen && unpackingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unpackingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.kitchen_misc\\\">{{ unpackingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.kitchen && unpackingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.basement && unpackingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unpackingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.basement_misc\\\">{{ unpackingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.basement && unpackingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.garage  && unpackingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unpackingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.garage_misc\\\">{{ unpackingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.garage && unpackingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.patioYard  && unpackingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unpackingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.patioYard_misc\\\">{{ unpackingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.patioYard && unpackingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" *ngIf=\\\"showLoading && loadingData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Loading Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\"  *ngIf=\\\"loadingData && loadingData.moving_from.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of loadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Loaded\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.appliances  && loadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of loadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.appliances_misc\\\">{{ loadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.appliances && loadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.bedRooms  && loadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of loadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.bedrooms_misc\\\">{{ loadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.bedRooms && loadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.livingRooms && loadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of loadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.livingRooms_misc\\\">{{ loadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.livingRooms && loadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.familyRooms && loadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of loadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.familyRooms_misc\\\">{{ loadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.familyRooms && loadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.diningRooms  && loadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of loadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.diningRooms_misc\\\">{{ loadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.diningRooms && loadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.kitchen && loadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of loadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.kitchen_misc\\\">{{ loadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.kitchen && loadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.basement && loadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of loadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.basement_misc\\\">{{ loadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.basement && loadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.garage  && loadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of loadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.garage_misc\\\">{{ loadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.garage && loadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.patioYard  && loadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of loadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.patioYard_misc\\\">{{ loadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.patioYard && loadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" *ngIf=\\\"showUnLoading && unloadingData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Unloading Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\"  *ngIf=\\\"unloadingData && unloadingData.moving_to.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unloadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Unloaded\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.appliances  && unloadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unloadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.appliances_misc\\\">{{ unloadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.appliances && unloadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.bedRooms  && unloadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unloadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.bedrooms_misc\\\">{{ unloadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.bedRooms && unloadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.livingRooms && unloadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unloadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.livingRooms_misc\\\">{{ unloadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.livingRooms && unloadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.familyRooms && unloadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unloadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.familyRooms_misc\\\">{{ unloadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.familyRooms && unloadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.diningRooms  && unloadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unloadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.diningRooms_misc\\\">{{ unloadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.diningRooms && unloadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.kitchen && unloadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unloadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.kitchen_misc\\\">{{ unloadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.kitchen && unloadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.basement && unloadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unloadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.basement_misc\\\">{{ unloadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.basement && unloadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.garage  && unloadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unloadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.garage_misc\\\">{{ unloadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.garage && unloadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.patioYard  && unloadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unloadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.patioYard_misc\\\">{{ unloadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.patioYard && unloadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\" (click)=\\\"setupJob(stepper);\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-progress-spinner class=\\\"example-margin\\\" *ngIf=\\\"showLoader\\\"[color]=\\\"red\\\" diameter=\\\"50\\\"  mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t   <mat-step>\\r\\n\\t\\t\\t\\t  <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Submitted!</h1> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-check\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Thank You</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<br> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h2>Job has been created Successfully</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t \\r\\n\\t\\t\\t</mat-horizontal-stepper>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> \\r\\n\\r\\n\\t\\t\\t\\r\\n\\t\\t\"","import { Component, OnInit,ViewEncapsulation } from '@angular/core';\r\nimport { Router, NavigationEnd,Event } from '@angular/router';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { JobService } from '../../../../../services/job.service';\r\nimport {ThemePalette} from '@angular/material/core';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormArray,FormControl, ValidatorFn} from '@angular/forms';\r\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'\r\nimport {FormsModule} from '@angular/forms';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { ArrayValidators } from './array.validator'; \r\n\r\nimport { MatStepper } from '@angular/material/stepper';\r\n//import {toLocationModule} from './toLocationFile.js';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'createjob.component.html',\r\n   encapsulation: ViewEncapsulation.Emulated,\r\n   styleUrls : [ './createjob.component.css' ]\r\n})\r\nexport class CreateJobComponent implements OnInit{\r\n\tcolor: ThemePalette = 'primary';\r\n\tmode: ProgressSpinnerMode = 'determinate';\r\n\t\r\n\ttitle = 'SignUp';\r\n\tresult:any = '';\r\n\tresponse :any=\"\";\r\n\tstates:any = '';\r\n\tuser:any =\"\"; \r\n\tcounties:any = '';counties1:any = '';counties2:any = '';\r\n\troles:any = '';\r\n\tcities:any = '';cities1:any = '';cities2:any = '';\r\n\t//response_success :any =\"\";\r\n\tangForm: FormGroup;\r\n\tangOptionsForm: FormGroup;\r\n\tangPackedOptionsForm: FormGroup;\r\n\tangLoadingOptionsForm: FormGroup;\r\n\tangUnloadingOptionsForm: FormGroup;\r\n\tangunPackedOptionsForm: FormGroup;\r\n\tfirst_show = false;\r\n\tshow = false;\r\n\ttopHeading:any='';\r\n\tshowThis = false;\r\n\tstateName = '';\r\n\tstatename = '';countyName = '';\r\n\t//passwordFormGroup: FormGroup;\r\n\tsubmitted = false;showLoader = false;\r\n\tsubmitted_service = false;\r\n\tisLinear = false;\r\n\tshowtostep = false;\r\n\tshowfromstep = false;\r\n\t\r\n\t//All steps formgroup\r\n\t\r\n\tserviceFormArray:any = '';\r\n\tserviceNameArray:any = '';\r\n\t\r\n\t//Second form group from location\r\n\tsecondFormGroup: FormGroup;\r\n\talllocations:any='';\r\n\t\r\n\t\r\n\t//Third Form Group\r\n\tthirdFormGroup: FormGroup;\r\n\t\r\n\t\r\n\t//Fourth Form Group\r\n\tFourthFormGroup: FormGroup;\r\n\tallappliances:any='';\r\n\tappliance_misc:any='';\r\n\tapppli:any=\"\";\r\n\t\r\n\t//Fifth Form Group\r\n\tFifthFormGroup: FormGroup;\r\n\tbedrooms:any='';\r\n\tbedrooms_misc:any='';\r\n\tbeds:any=\"\";\r\n\t\r\n\tsixthFormGroup: FormGroup; \r\n\tseventhFormGroup: FormGroup; \r\n\teigthFormGroup: FormGroup;\r\n\tninthFormGroup: FormGroup;\r\n\ttenthFormGroup: FormGroup; \r\n\televenthFormGroup: FormGroup;\r\n\ttweleveFormGroup: FormGroup;\r\n\tthirteenFormGroup: FormGroup;\r\n\tfourteenFormGroup: FormGroup;\r\n\t\r\n\tsecondpackedFormGroup: FormGroup;thirdpackedFormGroup: FormGroup;fourthpackedFormGroup: FormGroup;FifthpackedFormGroup: FormGroup; sixthpackedFormGroup: FormGroup; seventhpackedFormGroup: FormGroup; eigthpackedFormGroup: FormGroup;ninthpackedFormGroup: FormGroup;tenthpackedFormGroup: FormGroup; eleventhpackedFormGroup: FormGroup; twelevepackedFormGroup: FormGroup; thirteenpackedFormGroup: FormGroup;fourteenpackedFormGroup: FormGroup;\r\n\r\n\tsecondunpackedFormGroup: FormGroup;thirdunpackedFormGroup: FormGroup;fourthunpackedFormGroup: FormGroup;FifthunpackedFormGroup: FormGroup; sixthunpackedFormGroup: FormGroup; seventhunpackedFormGroup: FormGroup; eigthunpackedFormGroup: FormGroup;ninthunpackedFormGroup: FormGroup;tenthunpackedFormGroup: FormGroup; eleventhunpackedFormGroup: FormGroup; tweleveunpackedFormGroup: FormGroup; thirteenunpackedFormGroup: FormGroup;fourteenunpackedFormGroup: FormGroup;\r\n\t\r\n\tsecondloadingFormGroup: FormGroup;thirdloadingFormGroup: FormGroup;FourthloadingFormGroup: FormGroup;FifthloadingFormGroup: FormGroup; sixthloadingFormGroup: FormGroup; seventhloadingFormGroup: FormGroup; eigthloadingFormGroup: FormGroup;ninthloadingFormGroup: FormGroup;tenthloadingFormGroup: FormGroup; eleventhloadingFormGroup: FormGroup; tweleveloadingFormGroup: FormGroup; thirteenloadingFormGroup: FormGroup;fourteenloadingFormGroup: FormGroup;\r\n\t\r\n\tsecondunloadingFormGroup: FormGroup;thirdunloadingFormGroup: FormGroup;fourthunloadingFormGroup: FormGroup;FifthunloadingFormGroup: FormGroup; sixthunloadingFormGroup: FormGroup; seventhunloadingFormGroup: FormGroup; eigthunloadingFormGroup: FormGroup;ninthunloadingFormGroup: FormGroup;tenthunloadingFormGroup: FormGroup; eleventhunloadingFormGroup: FormGroup; tweleveunloadingFormGroup: FormGroup; thirteenunloadingFormGroup: FormGroup;fourteenunloadingFormGroup: FormGroup;\r\n\t\r\n\t\r\n\tsubmitted_unloading:any='';\r\n\tsubmitted_loading:any='';\r\n\tsubmitted_unpacking:any='';\r\n\tsubmitted_packing:any='';\r\n\tsubmitted_moving:any='';\r\n\r\n\tselectedServices:any=\"\";\r\n\tbasements:any='';\r\n\twhichFromGroup:any='';nextFromGroup:any='';formtype:FormGroup;\r\n\tdiningrooms:any='';familyrooms:any='';garages:any='';kitchens:any='';livingrooms:any='';patioyards:any='';\r\n\tdining:any=\"\";family:any=\"\";base:any=\"\";garge:any=\"\";kitch:any=\"\";living:any=\"\";patio:any=\"\";\t\r\n\tbutton_text:any='';\r\n\tthisisdone:any=\"\";\r\n\t optionsData = [\r\n\t\t{ id: 1, name: 'Appliances (includes Washing machine, Dryer, refrigerator, Freezer, Stove, Dishwasher..etc)' },\r\n\t\t{ id: 2, name: 'Bedrooms' },\r\n\t\t{ id: 3, name: 'Living Room' },\r\n\t\t{ id: 4, name: 'Family Room Services' },\r\n\t\t{ id: 5, name: 'Dining Room' },\r\n\t\t{ id: 6, name: 'Kitchen' },\r\n\t\t{ id: 7, name: 'Basement' },\r\n\t\t{ id: 8, name: 'Garage' },\r\n\t\t{ id: 9, name: 'Patio/Yard items' },\r\n\t\t{ id: 10, name: 'Office' },\r\n\t\t{ id: 11, name: 'Oversized items/other (Piano, Safe Machinery, Exercise equipment..etc)' },\r\n\t\t\r\n\t  ];\r\n\t  \r\n\t  \r\n\t optionsPackedData = [\r\n\t\t{ id: 12, name: 'Appliances (includes Washing machine, Dryer, refrigerator, Freezer, Stove, Dishwasher..etc)' },\r\n\t\t{ id: 13, name: 'Bedrooms' },\r\n\t\t{ id: 14, name: 'Living Room' },\r\n\t\t{ id: 15, name: 'Family Room Services' },\r\n\t\t{ id: 16, name: 'Dining Room' },\r\n\t\t{ id: 17, name: 'Kitchen' },\r\n\t\t{ id: 18, name: 'Basement' },\r\n\t\t{ id: 19, name: 'Garage' },\r\n\t\t{ id: 20, name: 'Patio/Yard items' },\r\n\t\t{ id: 21, name: 'Office' },\r\n\t\t{ id: 22, name: 'Oversized items/other (Piano, Safe Machinery, Exercise equipment..etc)' },\r\n\t\t\r\n\t  ];\r\n\t// Miscllaneous\r\n\tmindateset:any='';minDate2:any='';setmindate:any='';minDate:any='';myGroup:any='';myGroup3:any='';\r\n\t\r\n\tshowAppliances=false;\r\n\t\r\n\tshowBedrooms=false;\r\n\tshowLivingRooms=false;\r\n\tshowFamilyRooms=false;\r\n\tshowDiningRooms=false;\r\n\tshowKitchen=false;\r\n\tshowBasement=false;\r\n\tshowGarage=false;\r\n\tshowPatiyoYards=false;\r\n\tshowOffices=false;\r\n\tshowOversized=false;\r\n\t\r\n\r\n\tshowMoving=false;\r\n\tshowPacking=false;\r\n\tshowUnPacking=false;\r\n\tshowLoading=false;\r\n\tshowUnLoading=false;\r\n\t\r\n\tshowPackingAppliances=false;\r\n\tshowPackingBedrooms=false;\r\n\tshowPackingLivingRooms=false;\r\n\tshowPackingFamilyRooms=false;\r\n\tshowPackingDiningRooms=false;\r\n\tshowPackingKitchen=false;\r\n\tshowPackingBasement=false;\r\n\tshowPackingGarage=false;\r\n\tshowPackingPatiyoYards=false;\r\n\tshowPackingOffices=false;\r\n\tshowPackingOversized=false;\r\n\t\r\n\tshowLoadingAppliances=false;\r\n\tshowLoadingBedrooms=false;\r\n\tshowLoadingLivingRooms=false;\r\n\tshowLoadingFamilyRooms=false;\r\n\tshowLoadingDiningRooms=false;\r\n\tshowLoadingKitchen=false;\r\n\tshowLoadingBasement=false;\r\n\tshowLoadingGarage=false;\r\n\tshowLoadingPatiyoYards=false;\r\n\tshowLoadingOffices=false;\r\n\tshowLoadingOversized=false;\r\n\t\r\n\tshowUnloadingAppliances=false;\r\n\tshowUnloadingBedrooms=false;\r\n\tshowUnloadingLivingRooms=false;\r\n\tshowUnloadingFamilyRooms=false;\r\n\tshowUnloadingDiningRooms=false;\r\n\tshowUnloadingKitchen=false;\r\n\tshowUnloadingBasement=false;\r\n\tshowUnloadingGarage=false;\r\n\tshowUnloadingPatiyoYards=false;\r\n\tshowUnloadingOffices=false;\r\n\tshowUnloadingOversized=false;\r\n\t\r\n\tshowUnpackingAppliances=false;\r\n\tshowUnpackingBedrooms=false;\r\n\tshowUnpackingLivingRooms=false;\r\n\tshowUnpackingFamilyRooms=false;\r\n\tshowUnpackingDiningRooms=false;\r\n\tshowUnpackingKitchen=false;\r\n\tshowUnpackingBasement=false;\r\n\tshowUnpackingGarage=false;\r\n\tshowUnpackingPatiyoYards=false;\r\n\tshowUnpackingOffices=false;\r\n\tshowUnpackingOversized=false;\r\n\t\r\n\tapppli_unloading:any=\"\";\r\n\tbeds_unloading:any=\"\";\r\n\tbase_unloading:any=\"\";\r\n\tdining_unloading:any=\"\";\r\n\tfamily_unloading:any=\"\";\r\n\tgarge_unloading:any=\"\";\r\n\tkitch_unloading:any=\"\";\r\n\tliving_unloading:any=\"\";\r\n\tpatio_unloading:any=\"\";\r\n\t\r\n\tapppli_loading:any=\"\";\r\n\tbeds_loading:any=\"\";\r\n\tbase_loading:any=\"\";\r\n\tdining_loading:any=\"\";\r\n\tfamily_loading:any=\"\";\r\n\tgarge_loading:any=\"\";\r\n\tkitch_loading:any=\"\";\r\n\tliving_loading:any=\"\";\r\n\tpatio_loading:any=\"\";\r\n\t\r\n\tapppli_unpacking:any=\"\";\r\n\tbeds_unpacking:any=\"\";\r\n\tbase_unpacking:any=\"\";\r\n\tdining_unpacking:any=\"\";\r\n\tfamily_unpacking:any=\"\";\r\n\tgarge_unpacking:any=\"\";\r\n\tkitch_unpacking:any=\"\";\r\n\tliving_unpacking:any=\"\";\r\n\tpatio_unpacking:any=\"\";\r\n\t\r\n\tapppli_packing:any=\"\";\r\n\tbeds_packing:any=\"\";\r\n\tbase_packing:any=\"\";\r\n\tdining_packing:any=\"\";\r\n\tfamily_packing:any=\"\";\r\n\tgarge_packing:any=\"\";\r\n\tkitch_packing:any=\"\";\r\n\tliving_packing:any=\"\";\r\n\tpatio_packing:any=\"\";\r\n\t\r\n\t\r\n\tapppli_moving:any=\"\";\r\n\tbeds_moving:any=\"\";\r\n\tbase_moving:any=\"\";\r\n\tdining_moving:any=\"\";\r\n\tfamily_moving:any=\"\";\r\n\tgarge_moving:any=\"\";\r\n\tkitch_moving:any=\"\";\r\n\tliving_moving:any=\"\";\r\n\tpatio_moving:any=\"\";\r\n\t\r\n\tjobData:any='';\tmovingData:any='';packingData:any='';unpackingData:any='';loadingData:any='';unloadingData:any='';\r\n\tcurrentIndex:any=\"\";totalIndex:any=\"\";\r\n\tjobservices:any='';firstService:any='';secondService:any='';thirdService:any='';\r\n\t\r\n\tsubmitted_1_2 = false;submitted_2 = false;submitted_4 = false;submitted_3 = false;submitted_5 = false;submitted_6 = false;submitted_7 = false;submitted_8 = false;submitted_9 = false;submitted_10 = false;submitted_11 = false;submitted_12 = false;submitted_13 = false;submitted_14 = false;\r\n\tfirst_submitted = false;\r\n\tsubmitted_newform = false;\r\n\t\r\n\tsubmittedP_2 = false;submittedP_3 = false;\r\n\tshowErrorMessage1 = false;showErrorMessage2 = false;showErrorMessage3 = false;showErrorMessage4 = false;showErrorMessage5 = false;\r\n\t\r\n\t\r\n\tMOVING_ID = '5c544a8515f5bb0c908b3014';\r\n\tPACKING_ID = '5c544a9315f5bb0c908b3015';\r\n\tUNPACKING_ID = '5c544aa115f5bb0c908b3016';\r\n\tLOADING_ID = '5e96e418ddfd4f5624b0a404';\r\n\tUNLOADING_ID = '5e96e428ddfd4f5624b0a405';\r\n\t\r\n\tpublic totalNumberofRow : number=1;\r\n\tpublic newnumberofrows : number=0;\r\n\tpublic saveNumber : number=0;\r\n\t\r\n\tconstructor(private router: Router,private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title) {\r\n\t\t\r\n\t\tthis.titleService.setTitle( 'Create Job | MoveLaunch' );\r\n\t\tthis.createForm();\r\n\t\r\n\t\tthis.moving_forms();\r\n\t\tthis.packing_forms();\r\n\t\tthis.unpacking_forms();\r\n\t\tthis.loading_forms();\r\n\t\tthis.unloading_forms();\r\n\t\tthis.addCheckboxes();\r\n\t\tthis.addServicesCheckboxes();\r\n\t\tthis.addPackedCheckboxes();\r\n\t\tthis.addUnPackedCheckboxes();\r\n\t\tthis.addLoadingCheckboxes();\r\n\t\tthis.addUnLoadingCheckboxes();\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate addCheckboxes() {\r\n\t\tthis.optionsData.forEach((o, i) => {\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angOptionsForm.controls.options as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate addServicesCheckboxes() {\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t\tthis.jobservices.forEach((o, i) => {\r\n\t\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t  (this.angForm.controls.services as FormArray).push(control);\r\n\t\t\t});\r\n\t\t}); \r\n\t\t\r\n\t}\r\n\t\r\n\tprivate addPackedCheckboxes() {\r\n\t\tthis.optionsPackedData.forEach((o, i) => {\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angPackedOptionsForm.controls.packingoptions as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n\tprivate addUnPackedCheckboxes() {\r\n\t\tthis.optionsPackedData.forEach((o, i) => {\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angunPackedOptionsForm.controls.packingoptions as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n\tprivate addLoadingCheckboxes() {\r\n\t\tthis.optionsPackedData.forEach((o, i) => {\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angLoadingOptionsForm.controls.packingoptions as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n\tprivate addUnLoadingCheckboxes() {\r\n\t\tthis.optionsPackedData.forEach((o, i) => {\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angUnloadingOptionsForm.controls.packingoptions as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n\t\r\n    /* Signup Form validation */\r\n\t\r\n\t\r\n\tcreateForm() {\r\n\t\tthis.getSate();\r\n\t\t\r\n\t\tthis.getRoles('user');\r\n\t\t\r\n\t\tthis.angForm = this.fb.group({\r\n\t\t\tservices:  this.fb.array([], ArrayValidators.minLength(1)),\r\n\t\t\tjobtype: ['new', Validators.required ]\r\n\t\t}); \r\n\t\tthis.angOptionsForm = this.fb.group({\r\n\t\t\toptions:  this.fb.array([], ArrayValidators.minLength(1)),\r\n\t\t\tjob_start_date: ['', Validators.required ]\r\n\t\t});\r\n\t\tthis.angPackedOptionsForm = this.fb.group({\r\n\t\t\tpackingoptions:  this.fb.array([]),\r\n\t\t\tjob_start_date_packing: ['', Validators.required ]\r\n\t\t}); \r\n\t\tthis.angunPackedOptionsForm = this.fb.group({\r\n\t\t\tpackingoptions:  this.fb.array([]),\r\n\t\t\tjob_start_date_unpacking: ['', Validators.required ]\r\n\t\t});\r\n\t\tthis.angLoadingOptionsForm = this.fb.group({\r\n\t\t\tpackingoptions:  this.fb.array([]),\r\n\t\t\tjob_start_date_loading: ['', Validators.required ]\r\n\t\t});\r\n\t\tthis.angUnloadingOptionsForm = this.fb.group({\r\n\t\t\tpackingoptions:  this.fb.array([]),\r\n\t\t\tjob_start_date_unloading: ['', Validators.required ]\r\n\t\t}); \r\n \r\n\t}\r\n\tmoving_forms(){\r\n\t\t\r\n\t\t \r\n\t\t\r\n\t\tthis.secondFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirdFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.FourthFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t\tappliance_assembly:['']\r\n\t\t});\r\n\t\tthis.FifthFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t\tbedrooms_assembly:['']\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t\tlivingRooms_assembly:['']\r\n\t\t});\r\n\t\tthis.seventhFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t\tfamilyRooms_assembly:['']\r\n\t\t});\r\n\t\tthis.eigthFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t\tdiningRooms_assembly:['']\r\n\t\t});\r\n\t\tthis.ninthFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t\tkitchen_assembly:['']\r\n\t\t});\r\n\t\tthis.tenthFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t\tbasement_assembly:['']\r\n\t\t});\r\n\t\tthis.eleventhFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t\tgarage_assembly:['']\r\n\t\t});\r\n\t\tthis.tweleveFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\tpatioyards_assembly:['']\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\tpatioyards_assembly:['']\r\n\t\t});\r\n\t\tthis.fourteenFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\tpatioyards_assembly:['']\r\n\t\t});\r\n\t\t\r\n\t}\r\n\tpacking_forms(){\r\n\t\t\r\n\t\tthis.secondpackedFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\tthis.thirdpackedFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.fourthpackedFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t});\r\n\t\tthis.FifthpackedFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthpackedFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.seventhpackedFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eigthpackedFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.ninthpackedFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tenthpackedFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eleventhpackedFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t});\r\n\t\tthis.twelevepackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.fourteenpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\tunpacking_forms(){\r\n\t\t \r\n\t\tthis.secondunpackedFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\tthis.thirdunpackedFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.fourthunpackedFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t});\r\n\t\tthis.FifthunpackedFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthunpackedFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.seventhunpackedFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eigthunpackedFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.ninthunpackedFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tenthunpackedFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eleventhunpackedFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tweleveunpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenunpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.fourteenunpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\tloading_forms(){\t\r\n\t\t\r\n\t\tthis.secondloadingFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\tthis.thirdloadingFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.FourthloadingFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t});\r\n\t\tthis.FifthloadingFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthloadingFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.seventhloadingFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eigthloadingFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.ninthloadingFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tenthloadingFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eleventhloadingFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tweleveloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.fourteenloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\tunloading_forms(){\r\n\t\t\r\n\t\tthis.secondunloadingFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\tthis.thirdunloadingFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.fourthunloadingFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t});\r\n\t\tthis.FifthunloadingFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthunloadingFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.seventhunloadingFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eigthunloadingFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.ninthunloadingFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tenthunloadingFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eleventhunloadingFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tweleveunloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenunloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.fourteenunloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\t\t\r\n\t\r\n\t/*--------------------------------------------- Second Group Elements ----------------------- */\r\n\tsetLocations(myFormGroup,savedDataToLocation) {\r\n\t\tthis.myGroup = myFormGroup;\r\n\t\tconsole.log('setLocations'+localStorage.getItem('jobType'));\r\n\t\t\r\n\t\tif(localStorage.getItem('jobType') == 'saved'){\r\n\t\t\t\r\n\t\t\t let control = <FormArray>this.myGroup.controls.itemRows;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(savedDataToLocation && savedDataToLocation.moving_from.length > 0){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.alllocations =  savedDataToLocation.moving_from;\r\n\t\t\t\r\n\t\t\t\t\t\tthis.alllocations.forEach(x => {\r\n\t\t\t\t\t\t\tthis.userservice.getCounties(x.state).subscribe(result => {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.counties1 = result;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.userservice.getCities(x.county,x.state).subscribe(result => {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.cities1 = result;\r\n\t\t\t\t\t\t\t}); \r\n\t\t\t\t\t\t  control.push(this.fb.group({ \r\n\t\t\t\t\t\t\tmoving_from: x.movingType, \r\n\t\t\t\t\t\t\tmoving_from_floor: x.floor, \r\n\t\t\t\t\t\t\tmoving_from_state: x.state, \r\n\t\t\t\t\t\t\tmoving_from_county: x.county, \r\n\t\t\t\t\t\t\tmoving_from_city: x.city, \r\n\t\t\t\t\t\t\tmoving_from_zipcode:  x.zipcode,  \r\n\t\t\t\t\t\t\tmoving_from_address: x.address1,  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcontrol.push(this.fb.group({ \r\n\t\t\t\t\t\t\tmoving_from: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_floor: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_state: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_county: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_city: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_zipcode: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_address: ['', Validators.required ] \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\t//this.myGroup.setControl('itemRows', this.fb.array([]));\r\n\t\t\tlet control = <FormArray>this.myGroup.controls.itemRows;\r\n\t\t\tcontrol.push(this.fb.group({ \r\n\t\t\t\tmoving_from: ['', Validators.required ],\r\n\t\t\t\tmoving_from_floor: ['', Validators.required ],\r\n\t\t\t\tmoving_from_state: ['', Validators.required ],\r\n\t\t\t\tmoving_from_county: ['', Validators.required ],\r\n\t\t\t\tmoving_from_city: ['', Validators.required ],\r\n\t\t\t\tmoving_from_zipcode: ['', Validators.required ],\r\n\t\t\t\tmoving_from_address: ['', Validators.required ] \r\n\t\t\t\t\r\n\t\t\t})) \r\n\t\t\t\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tinitItemRows() {\r\n\t\t\t\t  \r\n\t \treturn this.fb.group({\r\n\t\t\tmoving_from: ['', Validators.required ],\r\n\t\t\tmoving_from_floor: ['', Validators.required ],\r\n\t\t \tmoving_from_state: ['', Validators.required ],\r\n\t\t\tmoving_from_county: ['', Validators.required ],\r\n\t\t\tmoving_from_city: ['', Validators.required ],\r\n\t\t\tmoving_from_zipcode: ['', Validators.required ],\r\n\t\t\tmoving_from_address: ['', Validators.required ] \r\n\t\t}); \r\n\t}\r\n\tget formArr() {\r\n\t\treturn this.myGroup.get('itemRows') as FormArray;\r\n\t}\r\n\taddNewRow() {\r\n\t\tthis.totalNumberofRow = this.totalNumberofRow + 1;\r\n\t\tthis.formArr.push(this.initItemRows());\r\n\t\t\r\n\t}\r\n\t\r\n\tdeleteRow(index: number) {\r\n\t\tthis.formArr.removeAt(index);\r\n\t} \r\n\ttoggleMovingFrom(event,number,row) {\r\n\t\tif(event.target.value == 'house'){\r\n\t\t\trow.controls.moving_from_floor.disable(); \r\n\t\t}else{\r\n\t\t\trow.controls.moving_from_floor.enable(); \r\n\t\t\t\r\n\t\t}\t\r\n\t}\r\n\t\r\n\t\r\n   /*--------------------------------------------- Second Group Elements ----------------------- */\r\n   \r\n   /*--------------------------------------------- Third Group Elements ----------------------- */\r\n   \r\n\ttoggleMovingTo(event,number,row) {\r\n\t\tif(event.target.value == 'house'){\r\n\t\t\trow.controls.moving_to_floor.disable(); \r\n\t\t}else{\r\n\t\t\trow.controls.moving_to_floor.enable(); \r\n\t\t\t\r\n\t\t}\t\r\n\t}\r\n\t\r\n   setToLocations(myFormGroup3,savedDataToLocation) {\r\n\t\tthis.myGroup3 = myFormGroup3;\r\n\t\tconsole.log('setToLocations'+localStorage.getItem('jobType'));\r\n\t\tif(localStorage.getItem('jobType') == 'saved'){\r\n\t\t\t let control = <FormArray>this.myGroup3.controls.itemRowsTo;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tif(savedDataToLocation && savedDataToLocation.moving_to.length > 0){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.alllocations = savedDataToLocation.moving_to;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.alllocations.forEach(x => {\r\n\t\t\t\t\t\t\tthis.userservice.getCounties(x.state).subscribe(result => {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.counties2 = result;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.userservice.getCities(x.county,x.state).subscribe(result => {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.cities2 = result;\r\n\t\t\t\t\t\t\t}); \r\n\t\t\t\t\t\t  control.push(this.fb.group({ \r\n\t\t\t\t\t\t\tmoving_to: x.movingType, \r\n\t\t\t\t\t\t\tmoving_to_floor: x.floor, \r\n\t\t\t\t\t\t\tmoving_to_state: x.state, \r\n\t\t\t\t\t\t\tmoving_to_county: x.county, \r\n\t\t\t\t\t\t\tmoving_to_city: x.city, \r\n\t\t\t\t\t\t\tmoving_to_zipcode:  x.zipcode, \r\n\t\t\t\t\t\t\tmoving_to_address: x.address1,  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcontrol.push(this.fb.group({ \r\n\t\t\t\t\t\t\tmoving_to: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_floor: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_state: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_county: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_city: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_zipcode: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_address: ['', Validators.required ]\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tlet control = <FormArray>this.myGroup3.controls.itemRowsTo;\r\n\t\t\tcontrol.push(this.fb.group({ \r\n\t\t\t\tmoving_to: ['', Validators.required ],\r\n\t\t\t\tmoving_to_floor: ['', Validators.required ],\r\n\t\t\t\tmoving_to_state: ['', Validators.required ],\r\n\t\t\t\tmoving_to_county: ['', Validators.required ],\r\n\t\t\t\tmoving_to_city: ['', Validators.required ],\r\n\t\t\t\tmoving_to_zipcode: ['', Validators.required ],\r\n\t\t\t\tmoving_to_address: ['', Validators.required ]\r\n\t\t\t\t\r\n\t\t\t}))\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t}\r\n\r\n\tinitItemRowsTo() {\r\n\t\t\r\n\t\treturn this.fb.group({\r\n\t\t\tmoving_to: ['', Validators.required ],\r\n\t\t\tmoving_to_floor: ['', Validators.required ],\r\n\t\t\tmoving_to_state: ['', Validators.required ],\r\n\t\t\tmoving_to_county: ['', Validators.required ],\r\n\t\t\tmoving_to_city: ['', Validators.required ],\r\n\t\t\tmoving_to_zipcode: ['', Validators.required ],\r\n\t\t\tmoving_to_address: ['', Validators.required ]\r\n\t\t});\r\n\t}\r\n\t\r\n\tget formArrTo() {\r\n\t\treturn this.myGroup3.get('itemRowsTo') as FormArray;\r\n\t}\r\n\taddNewRowTo() {\r\n\t\tthis.formArrTo.push(this.initItemRowsTo());\r\n\t}\r\n\tdeleteRowTo(index: number) {\r\n\t\tthis.formArrTo.removeAt(index);\r\n\t} \r\n\t/*--------------------------------------------- Third Group Elements ----------------------- */\r\n   /*--------------------------------------------- Fourth Group Elements ----------------------- */\r\n   clearFormArray = (formArray: FormArray) => { \r\n\t\tformArray.controls = [];\r\n\t\tformArray.setValue([]); \r\n\t}\r\n   \r\naddDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\tvar setApp = [];\r\n\t\r\n\t   \tthis.jobservice.getAppliances(serviceId).subscribe(result => {\r\n\t\t\tthis.apppli_moving = '';\r\n\t\t\tthis.formtype = formtype;\r\n\t\t\tthis.formtype.reset({});\r\n\t\t\tthis.formtype.setControl('allappliances', this.fb.array([]));\r\n\t\t\tthis.allappliances = result;\r\n\t\t\tthis.allappliances.map((o, i) => {\r\n\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t(this.formtype.controls.allappliances as FormArray).push(control);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(saved_data && saved_data.appliances && saved_data.appliances.length > 0){\r\n\t\t\t\tfor(var i=0;i<this.allappliances.length;i++ ){\r\n\t\t\t\t\tsetApp.push('null');\r\n\t\t\t\t\tvar jobdata = saved_data.appliances;\r\n\t\t\t\t\tvar _id = this.allappliances[i]._id;\r\n\t\t\t\t\t$.each(jobdata,function(index,value){\r\n\t\t\t\t\t\tif(value.applianceItem._id == _id){\r\n\t\t\t\t\t\t\tvar item = value.items+'_'+value.applianceItem._id;\r\n\t\t\t\t\t\t\tsetApp[i] = item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});  \t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tfor(var i=0;i<this.allappliances.length;i++ ){\r\n\t\t\t\t\tsetApp.push('null');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\tthis.apppli_moving = setApp;\r\n\t\t\t}\r\n\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\tthis.apppli_packing = setApp;\r\n\t\t\t}\r\n\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\tthis.apppli_unpacking = setApp;\r\n\t\t\t}\r\n\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\tthis.apppli_loading = setApp;\r\n\t\t\t}\r\n\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\tthis.apppli_unloading = setApp;\r\n\t\t\t}\r\n\t\t\r\n\t\t\t\r\n\t\t}); \r\n\t\t\r\n\t}\r\n\t\r\n   /*--------------------------------------------- Fourth Group Elements ----------------------- */\r\n   \r\n\t/*--------------------------------------------- Fifth Group Elements ----------------------- */\r\n\t   addBedDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp1 = [];\r\n\t\t\r\n\t\t  this.jobservice.getBedrooms(serviceId).subscribe(result => {\r\n\t\t\t\tthis.bedrooms = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('bedrooms', this.fb.array([]));\r\n\t\t\t\tthis.bedrooms.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.bedrooms as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.bedRooms && saved_data.bedRooms.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.bedrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp1.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.bedRooms;\r\n\t\t\t\t\t\tvar _id = this.bedrooms[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.bedRoomsItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.bedRoomsItem._id;\r\n\t\t\t\t\t\t\t\tsetApp1[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.bedrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp1.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.beds_moving = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.beds_packing = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.beds_unpacking = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.beds_loading = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.beds_unloading = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\t\r\n\t\t\r\n\taddkitchenDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp6 = [];\r\n\t\t\r\n\t\t  this.jobservice.getKitchen(serviceId).subscribe(result => {\r\n\t\t\t\tthis.kitchens = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('kitchens', this.fb.array([]));\r\n\t\t\t\tthis.kitchens.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.kitchens as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.kitchen && saved_data.kitchen.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.kitchens.length;i++ ){\r\n\t\t\t\t\t\tsetApp6.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.kitchen;\r\n\t\t\t\t\t\tvar _id = this.kitchens[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.kitchenItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.kitchenItem._id;\r\n\t\t\t\t\t\t\t\tsetApp6[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.kitchens.length;i++ ){\r\n\t\t\t\t\t\tsetApp6.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.kitch_moving = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.kitch_packing = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.kitch_unpacking = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.kitch_loading = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.kitch_unloading = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\r\n\t/*--------------------------------------------- Fifth Group Elements ----------------------- */\r\n\t\r\n\taddDiningDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp3 = [];\r\n\t\t\r\n\t\t  this.jobservice.getDiningrooms(serviceId).subscribe(result => {\r\n\t\t\t\tthis.diningrooms = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('diningrooms', this.fb.array([]));\r\n\t\t\t\tthis.diningrooms.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.diningrooms as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.diningRooms && saved_data.diningRooms.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.diningrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp3.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.diningRooms;\r\n\t\t\t\t\t\tvar _id = this.diningrooms[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.diningRoomsItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.diningRoomsItem._id;\r\n\t\t\t\t\t\t\t\tsetApp3[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.diningrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp3.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.dining_moving = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.dining_packing = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.dining_unpacking = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.dining_loading = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.dining_unloading = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\r\n\t addLivingDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp7 = [];\r\n\t\t\r\n\t\t  this.jobservice.getLivingrooms(serviceId).subscribe(result => {\r\n\t\t\t\tthis.livingrooms = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('livingrooms', this.fb.array([]));\r\n\t\t\t\tthis.livingrooms.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.livingrooms as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.livingRooms && saved_data.livingRooms.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.livingrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp7.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.livingRooms;\r\n\t\t\t\t\t\tvar _id = this.livingrooms[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.livingRoomsItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.livingRoomsItem._id;\r\n\t\t\t\t\t\t\t\tsetApp7[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.livingrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp7.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.living_moving = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.living_packing = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.living_unpacking = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.living_loading = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.living_unloading = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   } \r\n\taddFamilyDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp4 = [];\r\n\t\t\r\n\t\t  this.jobservice.getFamilyrooms(serviceId).subscribe(result => {\r\n\t\t\t\tthis.familyrooms = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('familyrooms', this.fb.array([]));\r\n\t\t\t\tthis.familyrooms.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.familyrooms as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.familyRooms && saved_data.familyRooms.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.familyrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp4.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.familyRooms;\r\n\t\t\t\t\t\tvar _id = this.familyrooms[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.familyRoomsItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.familyRoomsItem._id;\r\n\t\t\t\t\t\t\t\tsetApp4[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.familyrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp4.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.family_moving = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.family_packing = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.family_unpacking = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.family_loading = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.family_unloading = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\r\n\t\r\n\t addBasementDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp2 = [];\r\n\t\t\r\n\t\t  this.jobservice.getBasement(serviceId).subscribe(result => {\r\n\t\t\t\tthis.basements = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('basements', this.fb.array([]));\r\n\t\t\t\tthis.basements.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.basements as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.basement && saved_data.basement.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.basements.length;i++ ){\r\n\t\t\t\t\t\tsetApp2.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.basement;\r\n\t\t\t\t\t\tvar _id = this.basements[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.basementItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.basementItem._id;\r\n\t\t\t\t\t\t\t\tsetApp2[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.basements.length;i++ ){\r\n\t\t\t\t\t\tsetApp2.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.base_moving = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.base_packing = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.base_unpacking = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.base_loading = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.base_unloading = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\r\n\t addGaragesDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp5 = [];\r\n\t\t\r\n\t\t  this.jobservice.getGarages(serviceId).subscribe(result => {\r\n\t\t\t\tthis.garages = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('garages', this.fb.array([]));\r\n\t\t\t\tthis.garages.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.garages as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.garage && saved_data.garage.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.garages.length;i++ ){\r\n\t\t\t\t\t\tsetApp5.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.garage;\r\n\t\t\t\t\t\tvar _id = this.garages[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.garageItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.garageItem._id;\r\n\t\t\t\t\t\t\t\tsetApp5[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.garages.length;i++ ){\r\n\t\t\t\t\t\tsetApp5.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.garge_moving = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.garge_packing = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.garge_unpacking = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.garge_loading = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.garge_unloading = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   } \r\n\taddPatioyardDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp8 = [];\r\n\t\t\r\n\t\t  this.jobservice.getPatioyard(serviceId).subscribe(result => {\r\n\t\t\t\tthis.patioyards = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('patioyards', this.fb.array([]));\r\n\t\t\t\tthis.patioyards.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.patioyards as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.patioYard && saved_data.patioYard.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.patioyards.length;i++ ){\r\n\t\t\t\t\t\tsetApp8.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.patioYard;\r\n\t\t\t\t\t\tvar _id = this.patioyards[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.patioYardItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.patioYardItem._id;\r\n\t\t\t\t\t\t\t\tsetApp8[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.patioyards.length;i++ ){\r\n\t\t\t\t\t\tsetApp8.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.patio_moving = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.patio_packing = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.patio_unpacking = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.patio_loading = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.patio_unloading = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   } \r\n\t\r\n   \r\n\tonSubmit() {\r\n        // stop here if form is invalid\r\n        \t\r\n\t}\r\n\tcreateNewJob(){\r\n\t\tlocalStorage.setItem('jobType','new');\r\n\t\tlocalStorage.removeItem('currentStop');\r\n\t\tlocalStorage.removeItem('jobID');\r\n\t}\r\n\t\r\n\t/* *** Add User ** */\r\n\tupdateCalcs(event){\r\n\t\tvar d = new Date(event);\r\n\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\tvar day = '' + d.getDate();\r\n\t\tvar year = d.getFullYear();\r\n\t\tif (month.length < 2) month = '0' + month;\r\n\t\tif (day.length < 2) day = '0' + day;\r\n\t\tthis.mindateset = [year, month, day].join(',');\r\n\t\tthis.minDate2 = new Date(this.mindateset);\r\n\t}\r\n\t\r\n\t\r\n\tngOnInit() {\r\n\t\t/* this.setToLocations();\r\n\t\tthis.setLocations(); */\r\n\t\tvar jobType = this.angForm.value.jobtype;\r\n\t\tlocalStorage.setItem('jobType',jobType);\r\n\t\tthis.thisisdone = false;\r\n\t\tthis.isLinear = true;\r\n\t\tthis.totalIndex = 14\r\n\t\t\r\n\t\tvar minD = new Date();\r\n\t\tthis.button_text = 'View More';\r\n\t\tvar month1 = '' + (minD.getMonth() + 1);\r\n\t\tvar day1 = '' + minD.getDate();\r\n\t\tvar year1 = minD.getFullYear();\r\n\t\tif (month1.length < 2) month1 = month1;\r\n\t\tif (day1.length < 2) day1 = day1;\r\n\t\tthis.setmindate = [year1, month1, day1].join(',');\r\n\t\tthis.minDate = new Date(this.setmindate);\r\n\t\t\r\n\t\t\r\n\t\tthis.getServices();\r\n\t\tthis.getLoggedInUserInfo();\r\n\t}\r\n\t\r\n\tloadfirststep(nextstep:number){\r\n\t\tthis.topHeading = 'Contact Information';\r\n\t\tthis.showThis = true; \r\n\t}\t\r\n\t \r\n\t \r\n\t/*---------------------------------- Get saved job --------------------------------*/\r\n\t\r\n\tpublic geSavedJob(whichstep){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\tlocalStorage.setItem('jobType','saved');\r\n\t\t\r\n\t\tthis.showLoader = true;\r\n\t\tthis.jobservice.getSavedJob().subscribe(result => {\r\n\t\t\tif(result.success && result.message.length > 0){\r\n\t\t\t\tthis.showLoader = false;\r\n\t\t\t\t//http://localhost:4200/edit-job/5ea8fd1593c4153e8010841c\r\n\t\t\t\tthis.selectedServices = result.message[0].serviceId;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.jobData = result.message[0];\r\n\t\t\t\tthis.movingData = result.message[0].moving[0];\r\n\t\t\t\tthis.packingData = result.message[0].packing[0];\r\n\t\t\t\tthis.unpackingData = result.message[0].unpacking[0];\r\n\t\t\t\tthis.loadingData = result.message[0].loading[0];\r\n\t\t\t\tthis.unloadingData = result.message[0].unloading[0]; \r\n\t\t\t\t\r\n\t\t\t\tif(this.movingData && whichstep == 'moving'){\r\n\t\t\t\t\tconsole.log('movingData'+this.movingData);\r\n\t\t\t\t\tthis.showMoving = true;\r\n\t\t\t\t\tthis.setLocations(this.secondFormGroup,this.movingData);\t\r\n\t\t\t\t\tthis.setToLocations(this.thirdFormGroup,this.movingData);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(this.packingData && whichstep == 'packing'){\r\n\t\t\t\t\tconsole.log(this.packingData);\r\n\t\t\t\t\tthis.showPacking = true;\r\n\t\t\t\t\tthis.setLocations(this.secondpackedFormGroup,this.packingData);\t\r\n\t\t\t\t\tthis.setToLocations(this.thirdpackedFormGroup,this.packingData);\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tif(this.unpackingData && whichstep == 'unpacking'){\r\n\t\t\t\t\tthis.showUnPacking = true;\r\n\t\t\t\t\tthis.setLocations(this.secondunpackedFormGroup,this.unpackingData);\t\r\n\t\t\t\t\tthis.setToLocations(this.thirdunpackedFormGroup,this.unpackingData);\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tif(this.loadingData && whichstep == 'loading'){\r\n\t\t\t\t\tthis.showLoading = true;\r\n\t\t\t\t\tthis.setLocations(this.secondloadingFormGroup,this.loadingData);\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tif(this.unloadingData &&  whichstep == 'unloading'){\t\r\n\t\t\t\t\r\n\t\t\t\t\tthis.showUnLoading = true;\r\n\t\t\t\t\tthis.setToLocations(this.thirdunloadingFormGroup,this.unloadingData);\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t});\r\n\t\t\t\tvar currentState = this.jobData.state;\r\n\t\t\t\tvar currentCounty = this.jobData.county;\r\n\t\t\t\r\n\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t}); \r\n\t\t\t\t\t\r\n\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(\"No Saved Job Found.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t  }  \r\n\t\t});\r\n\t}\r\n\t\r\n\t/*---------------------------------------- get all data from database ------------------------------*/\r\n\t\r\n\tgetSate(){\r\n  \r\n\t    this.userservice.getStates().subscribe(result => {\r\n\t\t  this.states = result;\r\n\t\t});\r\n\t   \r\n\t}\r\n\r\n\tgetRoles(usertype){\r\n  \r\n\t    this.userservice.getUserRoles(usertype).subscribe(result => {\r\n\t\t\tthis.roles = result;\r\n\t\t});\r\n\t   \r\n\t}\r\n   \r\n\tgetCounties(event){\r\n\t\tthis.stateName = event.target.value;\r\n\t\tthis.userservice.getCounties(this.stateName).subscribe(result => {\r\n\t\t\tthis.counties = result;\r\n\t\t});\r\n\t}  \r\n\tgetCountiesFrom(event){\r\n\t\tthis.stateName = event.target.value;\r\n\t\tthis.userservice.getCounties(this.stateName).subscribe(result => {\r\n\t\t\tthis.counties1 = result;\r\n\t\t});\r\n\t}  \r\n\tgetCountiesTo(event){\r\n\t\tthis.stateName = event.target.value;\r\n\t\tthis.userservice.getCounties(this.stateName).subscribe(result => {\r\n\t\t\tthis.counties2 = result;\r\n\t\t});\r\n\t}  \r\n\t\r\n\tgetCities(event){\r\n\t\tthis.countyName = event.target.value;\r\n\t\t//this.statename = this.firstFormGroup.value.state;\r\n\t\tthis.userservice.getCities(this.countyName,this.statename).subscribe(result => {\r\n\t\t\t console.log(result);\r\n\t\t\tthis.cities = result;\r\n\t\t}); \r\n\t}  \r\n\tgetCitiesFrom(event,number,whichFromGroup){\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tthis.countyName = event.target.value;\r\n\t\tthis.statename = this.whichFromGroup.value.itemRows[number].moving_from_state;\r\n\t\tthis.userservice.getCities(this.countyName,this.statename).subscribe(result => {\r\n\t\t\tthis.cities1 = result;\r\n\t\t});  \r\n\t}  \r\n\tgetCitiesTo(event,number,whichFromGroup){\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tthis.countyName = event.target.value;\r\n\t\tthis.statename = this.whichFromGroup.value.itemRowsTo[number].moving_to_state;\r\n\t\tthis.userservice.getCities(this.countyName,this.statename).subscribe(result => {\r\n\t\t\tthis.cities2 = result;\r\n\t\t}); \r\n\t}  \r\n\tgetServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t\t\r\n\t\t\tthis.firstService = result.data[0]._id;this.secondService = result.data[1]._id;this.thirdService = result.data[2]._id; \r\n\t\t}); \r\n\t}\r\n\t\r\n\tgetLoggedInUserInfo(){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\tthis.userservice.getUsers().subscribe(result => {\r\n\t\t\tthis.user = result[0]; \r\n\t\t});\t\r\n\t}\r\n\t\r\n\tget f0() { return this.angForm.controls; }\r\n\tget f() { return this.angOptionsForm.controls; }\r\n\t//get f() { return this.firstFormGroup.controls; }\r\n\t/* get f12() { return this.firstPartTwoFormGroup.controls; } */\r\n\tget f2() { return this.secondFormGroup.controls.itemRows; }\r\n\t\r\n\tget f3() { return this.thirdFormGroup.controls.itemRowsTo; }\r\n\tget f4() { return this.FourthFormGroup.controls; }\r\n\tget f5() { return this.FifthFormGroup.controls; }\r\n\tget f6() { return this.sixthFormGroup.controls; }\r\n\tget f7() { return this.seventhFormGroup.controls; }\r\n\tget f8() { return this.eigthFormGroup.controls; }\r\n\tget f9() { return this.ninthFormGroup.controls; }\r\n\tget f10() { return this.tenthFormGroup.controls; }\r\n\tget f11() { return this.eleventhFormGroup.controls; }\r\n\tget f13() { return this.tweleveFormGroup.controls; }\r\n\tget f14() { return this.thirteenFormGroup.controls; }\r\n\tget f15() { return this.fourteenFormGroup.controls; }\r\n\tget _f1() { return this.angPackedOptionsForm.controls; }\r\n\tget _Uf1() { return this.angunPackedOptionsForm.controls; }\r\n\tget _fL1() { return this.angLoadingOptionsForm.controls; }\r\n\tget _fUL1() { return this.angUnloadingOptionsForm.controls; }\r\n\tget _f2() { return this.secondpackedFormGroup.controls.itemRows; }\r\n\tget _f3() { return this.thirdpackedFormGroup.controls.itemRowsTo; }\r\n\tget fL2() { return this.secondloadingFormGroup.controls.itemRows; }\r\n\tget fUL2() { return this.thirdunloadingFormGroup.controls.itemRowsTo; }\r\n\t\r\n\tget _UPf2() { return this.secondunpackedFormGroup.controls.itemRows; }\r\n\tget _UPf3() { return this.thirdunpackedFormGroup.controls.itemRowsTo; }\r\n\t\r\n\t\r\n\tget f16() { return this.fourthpackedFormGroup.controls; }\r\n\t/*---------------------------------------- get all data from database ------------------------------*/\r\n\t\r\n\t/*----------------------------------- Submit functions of stepper ----------------------------*/\r\n\tisChangeheading(stepper: MatStepper){\r\n\t\t\r\n\t\tlet myArray = [];\r\n\t\tconst selectedOrderIds = this.angForm.value.services\r\n\t\t\t\t\t\t\t\t.map((v, i) => (v ? this.jobservices[i]._id : null))\r\n\t\t\t\t\t\t\t\t.filter(v => v !== null);\r\n\t\t\t\t\t\t\t\t\r\n\t\t const selectedOrderName = this.angForm.value.services\r\n\t\t\t\t\t\t\t\t.map((v, i) => (v ? this.jobservices[i].slug : null))\r\n\t\t\t\t\t\t\t\t.filter(v => v !== null);\t\r\n\t\t\t \r\n\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\r\n\t\tif(this.angForm.invalid){\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tif(selectedOrderIds.length == 0){\r\n\t\t\t\tthis.submitted_service = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar jobType = this.angForm.value.jobtype;\r\n\t\t\tlocalStorage.setItem('jobType',jobType);\r\n\t\t\t\r\n\t\t\tconsole.log(selectedOrderName);\r\n\t\t\tif(selectedOrderName.includes('moving')){\r\n\t\t\t\tthis.showMoving = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOrderName.includes('packing')){\r\n\t\t\t\tthis.showPacking = true;\r\n\t\t\t}\r\n\t\t\tif(selectedOrderName.includes('unpacking')){\r\n\t\t\t\tthis.showUnPacking = true;\r\n\t\t\t}\r\n\t\t\tif(selectedOrderName.includes('loading')){\r\n\t\t\t\tthis.showLoading = true;\r\n\t\t\t}\r\n\t\t\tif(selectedOrderName.includes('unloading')){\r\n\t\t\t\tthis.showUnLoading = true;\r\n\t\t\t}\r\n\t\t\tvar flashMessagesService = this._flashMessagesService;\r\n\t\t\t\r\n\t\t\t var job_basic_info = this.user;\r\n\t\t\tif(localStorage.getItem('jobType') == 'new'){\r\n\t\t\t\tthis.showLoader = true;\r\n\t\t\t\tthis.jobservice.addJob(job_basic_info,selectedOrderIds).subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.submitted = false;\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t\tthis.showLoader = false;\r\n\t\t\t\t\t\t//this.allEventHandle(nextstep,totalIndex);\r\n\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t\t }, 0); \r\n\t\t\t\t\t  }else{\r\n\t\t\t\t\t\t  flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t\t  } \r\n\t\t\t\t   \r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\tconst jobID = localStorage.getItem('jobID');\r\n\t\t\t\tconsole.log('dgdfg');\r\n\t\t\t\tconsole.log(jobID);\r\n\t\t\t\tif(jobID != undefined){\r\n\t\t\t\t\tvar job_basic_info = this.user;\r\n\t\t\t\t\tvar job_basic_info_final = {job_basic_info:job_basic_info,serviceId:selectedOrderIds};\r\n\t\t\t\t\tconsole.log(job_basic_info_final);\r\n\t\t\t\t\tconst serviceType = 'moving';\r\n\t\t\t\t\tthis.showLoader = true;\r\n\t\t\t\t\tthis.jobservice.updateJob(job_basic_info_final,'step1',jobID,serviceType).subscribe(result =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.submitted = false;\r\n\t\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t\t\tthis.showLoader = false;\r\n\t\t\t\t\t\t\t//this.allEventHandle(nextstep,totalIndex);\r\n\t\t\t\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t\t\t }, 0); \r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t  }else{\r\n\t\t\t\t\t\t\t  flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t\t\t  } \r\n\t\t\t\t\t   \r\n\t\t\t\t\t}); \r\n\t\t\t\t}else{\r\n\t\t\t\t\tflashMessagesService.show(\"No Saved job. Start Creating a new one.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t} \t\r\n\t\t } \r\n\t}\r\n\t\r\n\tsetOptionsAvailable(stepper: MatStepper){\r\n\t\t\r\n\t\t//this.moving_forms();\r\n\t\tif(this.angOptionsForm.invalid){\r\n\t\t\tthis.submitted_moving = true;\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tconst selectedOptionsIds = this.angOptionsForm.value.options\r\n\t\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsData[i].id : null)\r\n\t\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\t\tconsole.log(selectedOptionsIds);\r\n\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\tthis.showErrorMessage1 = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\tconst moving_id = this.MOVING_ID;\r\n\t\t\tconst serv_type = 'moving';\r\n\t\t\t\r\n\t\t\tconsole.log(localStorage.getItem('jobType'));\r\n\t\t\tif(!this.selectedServices.includes(this.MOVING_ID)){\r\n\t\t\t\tthis.setLocations(this.secondFormGroup,'');\r\n\t\t\t}else{\r\n\t\t\t\tthis.setLocations(this.secondFormGroup,this.movingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(1)){\r\n\t\t\t\tthis.showAppliances = true;\r\n\t\t\t\tthis.addDropDowns(moving_id,this.FourthFormGroup,serv_type,this.movingData);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(2)){\r\n\t\t\t\tthis.showBedrooms = true;\r\n\t\t\t\tthis.addBedDropDowns(moving_id,this.FifthFormGroup,serv_type,this.movingData);\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(3)){\r\n\t\t\t\tthis.showLivingRooms = true;\r\n\t\t\t\tthis.addLivingDropDowns(moving_id,this.sixthFormGroup,serv_type,this.movingData);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(4)){\r\n\t\t\t\tthis.showFamilyRooms = true;\r\n\t\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhFormGroup,serv_type,this.movingData);\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(5)){\r\n\t\t\t\tthis.showDiningRooms = true;\r\n\t\t\t\tthis.addDiningDropDowns(moving_id,this.eigthFormGroup,serv_type,this.movingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(6)){\r\n\t\t\t\tthis.showKitchen = true;\r\n\t\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthFormGroup,serv_type,this.movingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(7)){\r\n\t\t\t\tthis.showBasement = true;\r\n\t\t\t\tthis.addBasementDropDowns(moving_id,this.tenthFormGroup,serv_type,this.movingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(8)){\r\n\t\t\t\tthis.showGarage = true;\r\n\t\t\t\t\r\n\t\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhFormGroup,serv_type,this.movingData);\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(9)){\r\n\t\t\t\tthis.showPatiyoYards = true;\r\n\t\t\t\t\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.tweleveFormGroup,serv_type,this.movingData); \r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(10)){\r\n\t\t\t\tthis.showOffices = true;\r\n\t\t\t\t\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenFormGroup,serv_type,this.movingData); \r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(11)){\r\n\t\t\t\tthis.showOversized = true;\r\n\t\t\t\t\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenFormGroup,serv_type,this.movingData); \r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst jobID = localStorage.getItem('jobID');\r\n\t\t\tconst start_date  = this.angOptionsForm.value.job_start_date;\r\n\t\t\tvar basic_info  = {moving:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\t\tthis.showLoader = true;\r\n\t\t\tthis.jobservice.updateServicesInJobTemp(jobID,basic_info,'moving').subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\tthis.submitted_moving = false;\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\tthis.showLoader = false;\r\n\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t }, 0); \r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t});\r\n\t\t\t\t \r\n\t\t}\r\n\t \r\n\t}\r\n\t\r\n\t\r\n\t\t\r\n\tsetPackingOptionsAvailable(stepper: MatStepper,type){\r\n\t\tconsole.log('here');\r\n\t\t\t\r\n\t\tif(type == 'forPacking'){\r\n\t\t\t//this.packing_forms();\r\n\t\t\tconst selectedOptionsIds = this.angPackedOptionsForm.value.packingoptions\r\n\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsPackedData[i].id : null)\r\n\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\t\tconsole.log(selectedOptionsIds);\r\n\t\t\tif(this.angPackedOptionsForm.invalid){\r\n\t\t\t\tthis.submitted_packing = true;\t\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\t\tthis.showErrorMessage2 = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(localStorage.getItem('jobType') == 'saved'){\r\n\t\t\t\t\tthis.geSavedJob('packing');\r\n\t\t\t\t}\r\n\t\t\t\tif(!this.selectedServices.includes(this.PACKING_ID)){\r\n\t\t\t\t\tthis.setLocations(this.secondpackedFormGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setLocations(this.secondpackedFormGroup,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tconst moving_id = this.PACKING_ID;\r\n\t\t\t\tconst serv_type = 'packing';\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(selectedOptionsIds.includes(12)){\r\n\t\t\t\t\tthis.showPackingAppliances = true;\r\n\t\t\t\t\tthis.addDropDowns(moving_id,this.fourthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(13)){\r\n\t\t\t\t\tthis.showPackingBedrooms = true;\r\n\t\t\t\t\tthis.addBedDropDowns(moving_id,this.FifthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(14)){\r\n\t\t\t\t\tthis.showPackingLivingRooms = true;\r\n\t\t\t\t\tthis.addLivingDropDowns(moving_id,this.sixthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(15)){\r\n\t\t\t\t\tthis.showPackingFamilyRooms = true;\r\n\t\t\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(16)){\r\n\t\t\t\t\tthis.showPackingDiningRooms = true;\r\n\t\t\t\t\tthis.addDiningDropDowns(moving_id,this.eigthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(17)){\r\n\t\t\t\t\tthis.showPackingKitchen = true;\r\n\t\t\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(18)){\r\n\t\t\t\t\tthis.showPackingBasement = true;\r\n\t\t\t\t\tthis.addBasementDropDowns(moving_id,this.tenthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(19)){\r\n\t\t\t\t\tthis.showPackingGarage = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(20)){\r\n\t\t\t\t\tthis.showPackingPatiyoYards = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.twelevepackedFormGroup,serv_type,this.packingData); \r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(21)){\r\n\t\t\t\t\tthis.showPackingOffices = true;\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenpackedFormGroup,serv_type,this.packingData); \r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(22)){\r\n\t\t\t\t\tthis.showPackingOversized = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenpackedFormGroup,serv_type,this.packingData); \r\n\t\t\t\t}\r\n\t\t\t\tconst jobID = localStorage.getItem('jobID');\r\n\t\t\t\tconst start_date  = this.angPackedOptionsForm.value.job_start_date_packing;\r\n\t\t\t\tvar basic_info  = {packing:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\t\t\tthis.showLoader = true;\r\n\t\t\t\tthis.jobservice.updateServicesInJobTemp(jobID,basic_info,'packing').subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.submitted_packing = false;\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\tthis.showLoader = false;\r\n\t\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t\t }, 0); \r\n\t\t\t\t\t  }else{\r\n\t\t\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t\t  } \r\n\t\t\t\t   \r\n\t\t\t\t});\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tif(type == 'forUnpacking'){\r\n\t\t\t//this.unpacking_forms();\r\n\t\t\tconst selectedOptionsIds = this.angunPackedOptionsForm.value.packingoptions\r\n\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsPackedData[i].id : null)\r\n\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\r\n\t\t\t\tconsole.log(selectedOptionsIds);\r\n\t\t\tif(this.angunPackedOptionsForm.invalid){\r\n\t\t\t\tthis.submitted_unpacking = true;\r\n\t\t\t\treturn;\r\n\t\t\t}else{\r\n\t\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\t\tthis.showErrorMessage3 = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst moving_id = this.UNPACKING_ID;\r\n\t\t\t\tconst serv_type = 'unpacking';\r\n\t\t\t\t//this.setLocations(this.secondunpackedFormGroup,'');\t\r\n\t\t\t\tif(!this.selectedServices.includes(this.UNPACKING_ID)){\r\n\t\t\t\t\tthis.setLocations(this.secondunpackedFormGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setLocations(this.secondunpackedFormGroup,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(selectedOptionsIds.includes(12)){\r\n\t\t\t\t\tthis.addDropDowns(moving_id,this.fourthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t\tthis.showUnpackingAppliances = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(13)){\r\n\t\t\t\t\tthis.showUnpackingBedrooms = true;\r\n\t\t\t\t\tthis.addBedDropDowns(moving_id,this.FifthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(14)){\r\n\t\t\t\t\tthis.showUnpackingLivingRooms = true;\r\n\t\t\t\t\tthis.addLivingDropDowns(moving_id,this.sixthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(15)){\r\n\t\t\t\t\tthis.showUnpackingFamilyRooms = true;\r\n\t\t\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(16)){\r\n\t\t\t\t\tthis.showUnpackingDiningRooms = true;\r\n\t\t\t\t\tthis.addDiningDropDowns(moving_id,this.eigthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(17)){\r\n\t\t\t\t\tthis.showUnpackingKitchen = true;\r\n\t\t\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(18)){\r\n\t\t\t\t\tthis.showUnpackingBasement = true;\r\n\t\t\t\t\tthis.addBasementDropDowns(moving_id,this.tenthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(19)){\r\n\t\t\t\t\tthis.showUnpackingGarage = true;\r\n\t\t\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(20)){\r\n\t\t\t\t\tthis.showUnpackingPatiyoYards = true;\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.tweleveunpackedFormGroup,serv_type,this.unpackingData); \r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(21)){\r\n\t\t\t\t\tthis.showUnpackingOffices = true;\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenunpackedFormGroup,serv_type,this.unpackingData); \r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(22)){\r\n\t\t\t\t\tthis.showUnpackingOversized = true;\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenunpackedFormGroup,serv_type,this.unpackingData); \r\n\t\t\t\t}\r\n\t\t\t\tconst jobID = localStorage.getItem('jobID');\r\n\t\t\t\tconst start_date  = this.angunPackedOptionsForm.value.job_start_date_unpacking;\r\n\t\t\t\tvar basic_info1  = {unpacking:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\t\t\tthis.showLoader = true;\r\n\t\t\t\tthis.jobservice.updateServicesInJobTemp(jobID,basic_info1,'unpacking').subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.submitted_unpacking = false;\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\tthis.showLoader = false;\r\n\t\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t\t }, 0); \r\n\t\t\t\t\t  }else{\r\n\t\t\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t\t  } \r\n\t\t\t\t   \r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t \r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tsetLoadingOptionsAvailable(stepper: MatStepper){\r\n\t\t//this.loading_forms();\r\n\t\tconst selectedOptionsIds = this.angLoadingOptionsForm.value.packingoptions\r\n\t\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsPackedData[i].id : null)\r\n\t\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\tif(this.angLoadingOptionsForm.invalid){\r\n\t\t\tthis.submitted_loading = true;\r\n\t\t\treturn;\r\n\t\t}else{\t\t\t\t\t\t  \r\n\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\tthis.showErrorMessage4 = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\t\t\t\t\t\t  \r\n\t\t\tif(localStorage.getItem('jobType') == 'saved'){\r\n\t\t\t\t\tthis.geSavedJob('loading');\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tconsole.log(selectedOptionsIds);\r\n\t\t\tconst moving_id = this.LOADING_ID;\r\n\t\t\tconst serv_type = 'loading';\r\n\t\t\tif(this.selectedServices && !this.selectedServices.includes(this.LOADING_ID)){\r\n\t\t\t\tthis.setLocations(this.secondloadingFormGroup,'');\r\n\t\t\t}else{\r\n\t\t\t\tthis.setLocations(this.secondloadingFormGroup,this.loadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(12)){\r\n\t\t\t\tthis.addDropDowns(moving_id,this.FourthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t\t\tthis.showLoadingAppliances = true;\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(13)){\r\n\t\t\t\tthis.showLoadingBedrooms = true;\r\n\t\t\t\tthis.addBedDropDowns(moving_id,this.FifthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(14)){\r\n\t\t\t\tthis.showLoadingLivingRooms = true;\r\n\t\t\t\tthis.addLivingDropDowns(moving_id,this.sixthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(15)){\r\n\t\t\t\tthis.showLoadingFamilyRooms = true;\r\n\t\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhloadingFormGroup,serv_type,this.loadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(16)){\r\n\t\t\t\tthis.showLoadingDiningRooms = true;\r\n\t\t\t\tthis.addDiningDropDowns(moving_id,this.eigthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(17)){\r\n\t\t\t\tthis.showLoadingKitchen = true;\r\n\t\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(18)){\r\n\t\t\t\tthis.showLoadingBasement = true;\r\n\t\t\t\tthis.addBasementDropDowns(moving_id,this.tenthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(19)){\r\n\t\t\t\tthis.showLoadingGarage = true;\r\n\t\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhloadingFormGroup,serv_type,this.loadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(20)){\r\n\t\t\t\tthis.showLoadingPatiyoYards = true;\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.tweleveloadingFormGroup,serv_type,this.loadingData); \r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(21)){\r\n\t\t\t\tthis.showLoadingOffices = true;\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenloadingFormGroup,serv_type,this.loadingData); \r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(22)){\r\n\t\t\t\tthis.showLoadingOversized = true;\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenloadingFormGroup,serv_type,this.loadingData); \r\n\t\t\t}\r\n\t\t\tconst jobID = localStorage.getItem('jobID');\r\n\t\t\tconst start_date  = this.angLoadingOptionsForm.value.job_start_date_loading;\r\n\t\t\tvar basic_info3  = {loading:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\t\tthis.showLoader = true;\r\n\t\t\tthis.jobservice.updateServicesInJobTemp(jobID,basic_info3,'loading').subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\tthis.submitted_loading = false;\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\tthis.showLoader = false;\r\n\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t }, 0); \r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetUnloadingOptionsAvailable(stepper: MatStepper){\r\n\t\t//this.unloading_forms();\t\r\n\t\tconst selectedOptionsIds = this.angUnloadingOptionsForm.value.packingoptions\r\n\t\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsPackedData[i].id : null)\r\n\t\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\t\t\t\t\t\t\t  \r\n\t\tif(this.angUnloadingOptionsForm.invalid){\r\n\t\t\tthis.submitted_unloading = true;\r\n\t\t\treturn;\r\n\t\t}else{\t\t\t\t\t\t  \r\n\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\tthis.showErrorMessage5 = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(localStorage.getItem('jobType') == 'saved'){\r\n\t\t\t\tthis.geSavedJob('unloading');\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tconsole.log(selectedOptionsIds);\r\n\t\t\tconst moving_id = this.UNLOADING_ID;\r\n\t\t\tconst serv_type = 'unloading';\r\n\t\t\t\r\n\t\t\tif(this.selectedServices &&  !this.selectedServices.includes(this.UNLOADING_ID)){\r\n\t\t\t\tthis.setToLocations(this.thirdunloadingFormGroup,'');\r\n\t\t\t}else{\r\n\t\t\t\tthis.setToLocations(this.thirdunloadingFormGroup,this.unloadingData);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(selectedOptionsIds.includes(12)){\r\n\t\t\t\tthis.addDropDowns(moving_id,this.fourthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t\t\tthis.showUnloadingAppliances = true;\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(13)){\r\n\t\t\t\tthis.showUnloadingBedrooms = true;\r\n\t\t\t\tthis.addBedDropDowns(moving_id,this.FifthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(14)){\r\n\t\t\t\tthis.showUnloadingLivingRooms = true;\r\n\t\t\t\tthis.addLivingDropDowns(moving_id,this.sixthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(15)){\r\n\t\t\t\tthis.showUnloadingFamilyRooms = true;\r\n\t\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(16)){\r\n\t\t\t\tthis.showUnloadingDiningRooms = true;\r\n\t\t\t\tthis.addDiningDropDowns(moving_id,this.eigthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(17)){\r\n\t\t\t\tthis.showUnloadingKitchen = true;\r\n\t\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(18)){\r\n\t\t\t\tthis.showUnloadingBasement = true;\r\n\t\t\t\tthis.addBasementDropDowns(moving_id,this.tenthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(19)){\r\n\t\t\t\tthis.showUnloadingGarage = true;\r\n\t\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(20)){\r\n\t\t\t\tthis.showUnloadingPatiyoYards = true;\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.tweleveunloadingFormGroup,serv_type,this.unloadingData); \r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(21)){\r\n\t\t\t\tthis.showUnloadingOffices = true;\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenunloadingFormGroup,serv_type,this.unloadingData); \r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(22)){\r\n\t\t\t\tthis.showUnloadingOversized = true;\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenunloadingFormGroup,serv_type,this.unloadingData); \r\n\t\t\t}\r\n\t\t\tconst jobID = localStorage.getItem('jobID');\r\n\t\t\tconst start_date  = this.angUnloadingOptionsForm.value.job_start_date_unloading;\r\n\t\t\tvar basic_info2  = {unloading:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\t\tthis.showLoader = true;\r\n\t\t\tthis.jobservice.updateServicesInJobTemp(jobID,basic_info2,'unloading').subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\tthis.submitted_unloading = false;\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\tthis.showLoader = false;\r\n\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t }, 0); \r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tsaveFromLocation(stepper: MatStepper,whichFromGroup,serviceType,nextFromGroup){\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tthis.nextFromGroup = nextFromGroup;\r\n\t\t\r\n\t\tif(this.whichFromGroup.controls.itemRows.invalid){\r\n\t\t\tthis.submitted_2 = true;\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tif(serviceType == 'moving'){\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(!this.selectedServices.includes(this.MOVING_ID)){\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,this.movingData);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(!this.selectedServices.includes(this.PACKING_ID)){\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,this.packingData);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\tif(!this.selectedServices.includes(this.UNPACKING_ID)){\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,this.unpackingData);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar job_moving_from_info = this.whichFromGroup.value;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\t\t\r\n\t\t\tthis.submit_final_job(stepper,job_moving_from_info,'step3',jobID,serviceType); \r\n\t\t\t\r\n\t\t\t\r\n\t\t} \r\n\t}\r\n\tsaveFromLoadingLocation(stepper: MatStepper,whichFromGroup,serviceType,nextFromGroup){\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tthis.nextFromGroup = nextFromGroup;\r\n\t\t\r\n\t\tif(this.whichFromGroup.controls.itemRows.invalid){\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tvar job_moving_from_info = this.whichFromGroup.value;\r\n\t\t\tconsole.log(job_moving_from_info);\r\n\t\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\t\tthis.submit_final_job(stepper,job_moving_from_info,'step3',jobID,serviceType); \r\n\t\t\t\r\n\t\t\t\r\n\t\t} \r\n\t}\r\n\t\r\n\tsaveToLocation(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tconsole.log('this is called');\r\n\t\r\n\t\tif(this.whichFromGroup.controls.itemRowsTo.invalid){\r\n\t\t\tthis.submitted_3 = true;\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tconsole.log(this.showAppliances);\r\n\t\t\tconsole.log(this.showMoving);\r\n\t\t\tconsole.log(this.showPacking);\r\n\t\t\tvar job_moving_to_info = this.whichFromGroup.value;\r\n\t\t\tconsole.log(job_moving_to_info);\r\n\t\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\t\t\r\n\t\t\tthis.submit_final_job(stepper,job_moving_to_info,'step4',jobID,serviceType);\r\n\t\t\t\r\n\t\t\t\r\n\t\t }  \r\n\t}\r\n\tsaveAppliances(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_4 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\t\r\n\t\tvar appliance_info = this.whichFromGroup.value.allappliances;\r\n\t\tvar misc_info = this.whichFromGroup.value.appliance_misc;\r\n\t\t\r\n\t\t\r\n\t\t //var new_arr = [];\r\n\t\t  var new_arr = [];\r\n\t\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['applianceItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test); \r\n\t\t\t}\r\n\t\t\t\r\n\t\t}); \r\n\t\t\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar misc_info = this.whichFromGroup.value.appliance_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.appliance_assembly;\r\n\t\tconsole.log(assembly_info);\r\n\t\tvar final_submit = {appliances:new_arr,appliances_misc:misc_info,appliances_assembly:assembly_info}\r\n\t\tconsole.log(final_submit);\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit,'step5',jobID,serviceType);\r\n\t}\r\n\tsaveBedrooms(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_5 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.bedrooms;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['bedRoomsItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\t\t\r\n\t\tvar misc_info = this.whichFromGroup.value.bedrooms_misc;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar assembly_info = this.whichFromGroup.value.bedrooms_assembly;\r\n\t\tvar final_submit1 = {bedRooms:new_arr,bedrooms_misc:misc_info,bedrooms_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit1,'step6',jobID,serviceType);\r\n\t}\r\n\tsaveLivingRooms(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_6 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.livingrooms;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['livingRoomsItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.livingRooms_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.livingRooms_assembly;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar final_submit2 = {livingRooms:new_arr,livingRooms_misc:misc_info,livingRooms_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit2,'step7',jobID,serviceType);\r\n\t}\r\n\tsaveFamilyRooms(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_7 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.familyrooms;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['familyRoomsItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.familyRooms_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.familyRooms_assembly;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar final_submit3 = {familyRooms:new_arr,familyRooms_misc:misc_info,familyRooms_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit3,'step8',jobID,serviceType);  \r\n\t}\r\n\tsaveDiningRooms(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_7 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.diningrooms;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['diningRoomsItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tvar misc_info = this.whichFromGroup.value.dininRooms_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.dininRooms_assembly;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar final_submit4 = {diningRooms:new_arr,dininRooms_misc:misc_info,dininRooms_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit4,'step9',jobID,serviceType);\r\n\t}\r\n\tsaveKitchens(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_8 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.kitchens;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['kitchenItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.kitchen_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.kitchen_assembly;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar final_submit5 = {kitchen:new_arr,kitchen_misc:misc_info,kitchen_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit5,'step10',jobID,serviceType);\r\n\t}\r\n\tsaveBasements(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_8 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.basements;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['basementItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.basement_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.basement_assembly;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar final_submit6 = {basement:new_arr,basement_misc:misc_info,basement_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit6,'step11',jobID,serviceType);\r\n\t}\r\n\tsaveGarages(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_9 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.garages;\r\n\t\tconsole.log(appliance_info);\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(value != \"null\"){\r\n\t\t\t\t\tvar test = {};\r\n\t\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\t\ttest['garageItem'] = newstring[1];\r\n\t\t\t\t\tnew_arr.push(test);\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.garage_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.garage_assembly;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar final_submit7 = {garage:new_arr,garage_misc:misc_info,garage_assembly:assembly_info}\r\n\t\tthis.submit_final_job(stepper,final_submit7,'step12',jobID,serviceType);\r\n\t\t\r\n\t\t\r\n\t}\r\n\tsavePatiyoyards(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_10 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.patioyards;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['patioYardItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.patioYard_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.patioYard_assembly;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar final_submit8 = {patioYard:new_arr,patioYard_misc:misc_info,patioYard_assembly:assembly_info}\r\n\t\tthis.submit_final_job(stepper,final_submit8,'step13',jobID,serviceType);\r\n\t\t\r\n\t}\r\n\tsaveOffices(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_10 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.patioyards;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['patioYardItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tvar misc_info = this.whichFromGroup.value.patioYard_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.patioYard_assembly;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar final_submit8 = {patioYard:new_arr,patioYard_misc:misc_info,patioYard_assembly:assembly_info}\r\n\t\tthis.submit_final_job(stepper,final_submit8,'step14',jobID,serviceType);\r\n\t\t\r\n\t}\r\n\tsaveOverSized(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_10 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.patioyards;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['patioYardItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tvar misc_info = this.whichFromGroup.value.patioYard_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.patioYard_assembly;\r\n\t\tvar jobID = localStorage.getItem('jobID');\r\n\t\tvar final_submit8 = {patioYard:new_arr,patioYard_misc:misc_info,patioYard_assembly:assembly_info}\r\n\t\tthis.submit_final_job(stepper,final_submit8,'step15',jobID,serviceType);\r\n\t\t\r\n\t}\r\n\t\r\n\tsubmit_final_job(stepper,final_submit,step,jobID,serviceType){\r\n\t\tconsole.log('sdfsdf'+serviceType);\r\n\t\tthis.showLoader = true;\r\n\t\tthis.jobservice.updateJob(final_submit,step,jobID,serviceType).subscribe(result =>\r\n\t\t{\r\n\t\t\tvar flashMessagesService = this._flashMessagesService;\r\n\t\t\t this.submitted_10 = false;\r\n\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\t\tif(step != 'step3' && step != 'step4' ){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.jobservice.getSavedJob().subscribe(result => {\r\n\t\t\t\t\t\t\tthis.jobData = result.message[0];\r\n\t\t\t\t\t\t\tif(result.message[0].moving.length > 0){\r\n\t\t\t\t\t\t\t\tthis.movingData = result.message[0].moving[0];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(result.message[0].packing.length > 0){\r\n\t\t\t\t\t\t\t\tthis.packingData = result.message[0].packing[0];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(result.message[0].unpacking.length > 0){\r\n\t\t\t\t\t\t\t\tthis.unpackingData = result.message[0].unpacking[0];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(result.message[0].loading.length > 0){\r\n\t\t\t\t\t\t\t\tthis.loadingData = result.message[0].loading[0];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(result.message[0].unloading.length > 0){\r\n\t\t\t\t\t\t\t\tthis.unloadingData = result.message[0].unloading[0];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tthis.showLoader = false;\r\n\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t  stepper.next();\r\n\t\t\t\t }, 1);\r\n\t\t\t}else{\r\n\t\t\t\t  flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}  \r\n\t\t   \r\n\t\t});  \r\n\t\t\r\n\t}\r\n\tsetupJob(stepper: MatStepper){\r\n\t\tthis.showLoader = true;\r\n\t\tthis.jobservice.submitJob().subscribe(result =>\r\n\t\t\t{\t\r\n\t\t\t\tvar flashMessagesService = this._flashMessagesService;\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t\t }, 1);\r\n\t\t\t\t\t this.showLoader = false;\r\n\t\t\t\t\t flashMessagesService.show(\"Job Created Successfully\", { cssClass: 'alert-success',timeout:2000});\r\n\t\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\tthis.router.navigate(['/jobs']);\r\n\t\t\t\t\t }, 2500);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tflashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t} \r\n\t\t\t   \r\n\t\t\t});  \r\n\t}\r\n\t/*------------------Extra --------------------------------*/\r\n\tclearForm(){\r\n\t\t\r\n\t\tthis.angOptionsForm.reset();\r\n\t\tthis.secondFormGroup.reset();\r\n\t\tthis.thirdFormGroup.reset();\r\n\t\tthis.FourthFormGroup.reset();\r\n\t\tthis.FifthFormGroup.reset();\r\n\t\tthis.sixthFormGroup.reset();\r\n\t\tthis.seventhFormGroup.reset();\r\n\t\tthis.eigthFormGroup.reset();\r\n\t\tthis.ninthFormGroup.reset();\r\n\t\tthis.tenthFormGroup.reset();\r\n\t\tthis.eleventhFormGroup.reset();\r\n\t\tthis.tweleveFormGroup.reset();\r\n\t\tthis.thirteenFormGroup.reset();\r\n\t\tthis.fourteenFormGroup.reset();\r\n\t\tthis.angPackedOptionsForm.reset();\r\n\t\tthis.secondpackedFormGroup.reset();\r\n\t\tthis.thirdpackedFormGroup.reset();\r\n\t\tthis.fourthpackedFormGroup.reset();\r\n\t\tthis.FifthpackedFormGroup.reset();\r\n\t\tthis.sixthpackedFormGroup.reset();\r\n\t\tthis.seventhpackedFormGroup.reset();\r\n\t\tthis.eigthpackedFormGroup.reset();\r\n\t\tthis.ninthpackedFormGroup.reset();\r\n\t\tthis.tenthpackedFormGroup.reset();\r\n\t\tthis.eleventhpackedFormGroup.reset();\r\n\t\tthis.twelevepackedFormGroup.reset();\r\n\t\tthis.thirteenpackedFormGroup.reset();\r\n\t\tthis.fourteenpackedFormGroup.reset();\r\n\t\tthis.angunPackedOptionsForm.reset();\r\n\t\tthis.secondunpackedFormGroup.reset();\r\n\t\tthis.thirdunpackedFormGroup.reset();\r\n\t\tthis.fourthunpackedFormGroup.reset();\r\n\t\tthis.FifthunpackedFormGroup.reset();\r\n\t\tthis.sixthunpackedFormGroup.reset();\r\n\t\tthis.seventhunpackedFormGroup.reset();\r\n\t\tthis.eigthunpackedFormGroup.reset();\r\n\t\tthis.ninthunpackedFormGroup.reset();\r\n\t\tthis.tenthunpackedFormGroup.reset();\r\n\t\tthis.eleventhunpackedFormGroup.reset();\r\n\t\tthis.tweleveunpackedFormGroup.reset();\r\n\t\tthis.thirteenunpackedFormGroup.reset();\r\n\t\tthis.fourteenunpackedFormGroup.reset();\r\n\t\tthis.angUnloadingOptionsForm.reset();\r\n\t\tthis.secondunloadingFormGroup.reset();\r\n\t\tthis.thirdunloadingFormGroup.reset();\r\n\t\tthis.fourthunloadingFormGroup.reset();\r\n\t\tthis.FifthunloadingFormGroup.reset();\r\n\t\tthis.sixthunloadingFormGroup.reset();\r\n\t\tthis.seventhunloadingFormGroup.reset();\r\n\t\tthis.eigthunloadingFormGroup.reset();\r\n\t\tthis.ninthunloadingFormGroup.reset();\r\n\t\tthis.tenthunloadingFormGroup.reset();\r\n\t\tthis.eleventhunloadingFormGroup.reset();\r\n\t\tthis.tweleveunloadingFormGroup.reset();\r\n\t\tthis.thirteenunloadingFormGroup.reset();\r\n\t\tthis.fourteenunloadingFormGroup.reset();\r\n\t\tthis.angLoadingOptionsForm.reset();\r\n\t\tthis.secondloadingFormGroup.reset();\r\n\t\tthis.thirdloadingFormGroup.reset();\r\n\t\tthis.FourthloadingFormGroup.reset();\r\n\t\tthis.FifthloadingFormGroup.reset();\r\n\t\tthis.sixthloadingFormGroup.reset();\r\n\t\tthis.seventhloadingFormGroup.reset();\r\n\t\tthis.eigthloadingFormGroup.reset();\r\n\t\tthis.ninthloadingFormGroup.reset();\r\n\t\tthis.tenthloadingFormGroup.reset();\r\n\t\tthis.eleventhloadingFormGroup.reset();\r\n\t\tthis.tweleveloadingFormGroup.reset();\r\n\t\tthis.thirteenloadingFormGroup.reset();\r\n\t\tthis.fourteenloadingFormGroup.reset();\r\n\t\t\r\n\r\n\t\t \r\n\t}\r\n\tpublic onStepperSelectionChange(event: any) {\r\n\t\tthis.scrollToSectionHook(); \r\n\t}\r\n\tprivate scrollToSectionHook() {\r\n\t\tconst element = document.querySelector('.stepperTop'); \r\n\t\tif (element) { \r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\telement.scrollIntoView({behavior: 'smooth', block: 'start', inline: 'nearest'});\r\n\t\t\t}, 0 );\r\n\t\t}\r\n\t} \r\n\t\r\n\tcheckName(servicename){\r\n\t\tthis.submitted_service = false;\r\n\t}\r\n\tcheckOptions(servicename){\r\n\t\tif(servicename == 'moving'){\r\n\t\t\t\r\n\t\t\t\tthis.showErrorMessage1 = false;\r\n\t\t}\r\n\t\tif(servicename == 'packing'){\r\n\t\t\t\tthis.showErrorMessage2 = false;\r\n\t\t\t\r\n\t\t}\r\n\t\tif(servicename == 'unpacking'){\r\n\t\t\t\tthis.showErrorMessage3 = false;\r\n\t\t\t\r\n\t\t}\r\n\t\tif(servicename == 'loading'){\r\n\t\t\t\tthis.showErrorMessage4 = false;\r\n\t\t\t\r\n\t\t}\r\n\t\tif(servicename == 'unloading'){\r\n\t\t\tthis.showErrorMessage5 = false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n","module.exports = \".hire-panel .info .rate span{font-size:14px;font-weight:500}\\r\\n.hire-panel .info .completedjob {\\r\\n\\tcolor: #1691be;\\r\\n\\tfont-weight: 700;\\r\\n\\tfont-size: 14px;\\r\\n\\tdisplay: inline-flex;\\r\\n}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.ratingclass label{line-height:45px}\\r\\n.rating {\\r\\n    float:left;\\r\\n\\tdisplay:block;\\r\\n}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:28px;\\r\\n    line-height:32px;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: green;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: green;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9lZGl0ZmVlZGJhY2svZWRpdGZlZWRiYWNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkJBQTZCLGNBQWMsQ0FBQyxlQUFlO0FBQzNEO0NBQ0MsY0FBYztDQUNkLGdCQUFnQjtDQUNoQixlQUFlO0NBQ2Ysb0JBQW9CO0FBQ3JCO0FBR0E7SUFDSSxVQUFVO0FBQ2Q7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmO0FBRUYsbUJBQW1CLGdCQUFnQjtBQUNuQztJQUNJLFVBQVU7Q0FDYixhQUFhO0FBQ2Q7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksWUFBWTtBQUNoQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvZWRpdGZlZWRiYWNrL2VkaXRmZWVkYmFjay5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpcmUtcGFuZWwgLmluZm8gLnJhdGUgc3Bhbntmb250LXNpemU6MTRweDtmb250LXdlaWdodDo1MDB9XHJcbi5oaXJlLXBhbmVsIC5pbmZvIC5jb21wbGV0ZWRqb2Ige1xyXG5cdGNvbG9yOiAjMTY5MWJlO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0Zm9udC1zaXplOiAxNHB4O1xyXG5cdGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG59XHJcblxyXG5cclxuLnJhdGluZyB7XHJcbiAgICBmbG9hdDpsZWZ0O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBpbnB1dCB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDotOTk5OXB4O1xyXG4gICAgY2xpcDpyZWN0KDAsMCwwLDApO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICAgIHdpZHRoOjFlbTtcclxuICAgIHBhZGRpbmc6MC4xZW07XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZToxMDAlO1xyXG4gICAgbGluZS1oZWlnaHQ6MS4yO1xyXG4gICAgY29sb3I6I2RkZDtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6ICfimIUgJztcclxufVxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICMxNjkxYmU7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyIH4gbGFiZWwsXHJcbi5yYXRpbmcgPiBsYWJlbDpob3ZlciB+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlIHtcclxuICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgZm9udC1zaXplOiAwO1xyXG4gIGhlaWdodDogMjFweDtcclxuICBsaW5lLWhlaWdodDogMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtaW5kZW50OiAtOTk5ZW07XHJcbiAgd2lkdGg6IDExMHB4O1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUtcmF0aW5ne1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBoZWlnaHQ6IDIxcHg7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gIH1cclxuICBcclxuLnJhdGluZ2NsYXNzIGxhYmVse2xpbmUtaGVpZ2h0OjQ1cHh9XHJcbi5yYXRpbmcge1xyXG4gICAgZmxvYXQ6bGVmdDtcclxuXHRkaXNwbGF5OmJsb2NrO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBpbnB1dCB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDotOTk5OXB4O1xyXG4gICAgY2xpcDpyZWN0KDAsMCwwLDApO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICAgIHdpZHRoOjFlbTtcclxuICAgIHBhZGRpbmc6MC4xZW07XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZToyOHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6MzJweDtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"wrapper w-950\\\">\\r\\n\\r\\n\\t<div class=\\\"container-fluid titlebar\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<h1>Ratings and Feedback</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t\\r\\n\\r\\n\\r\\n\\t<div class=\\\"container joblisting-panel-wrap\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info signup-form\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"angForm\\\"  class=\\\"form-main\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 ratingclass\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Rating</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<fieldset class=\\\"rating\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"5\\\" [checked]=\\\"rating===5\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Rocks!\\\" (click)='onClick(5)'>5 stars</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"4\\\" [checked]=\\\"rating===4\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Pretty good\\\" (click)='onClick(4)'>4 stars</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"3\\\" [checked]=\\\"rating===3\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Meh\\\" (click)='onClick(3)'>3 stars</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"2\\\" [checked]=\\\"rating===2\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Kinda bad\\\" (click)='onClick(2)'>2 stars</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input type=\\\"radio\\\" [name]=\\\"inputName\\\" value=\\\"1\\\" [checked]=\\\"rating===1\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label title=\\\"Sucks big time\\\" (click)='onClick(1)'>1 star</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" type=\\\"text\\\" style=\\\"display: none;\\\" readonly=\\\"readonly\\\" id=\\\"ratingSelected\\\" formControlName=\\\"ratingSelected\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.ratingSelected.errors }\\\" [ngModel]=\\\"ratingClicked\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.ratingSelected.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.ratingSelected.errors.required\\\">Rating is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"clearfix\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Feedback</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" id=\\\"jobFeedback\\\" placeholder=\\\"Job Feedback\\\"  formControlName=\\\"jobFeedback\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.jobFeedback.errors }\\\" [(ngModel)]=\\\"jobfeedback\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.jobFeedback.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.jobFeedback.errors.required\\\">Feedback is Required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\"  (ngSubmit)=\\\"onSubmit()\\\">Submit</button> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t</form>\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t \\r\\n</div> \\r\\n \"","import { Component, OnInit ,Input, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\nimport { JobService } from '../../../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'editfeedback.component.html',\r\n  styleUrls : [ './editfeedback.component.css' ]\r\n})\r\nexport class EditFeedbackComponent implements OnInit{\r\n\tangForm: FormGroup;\r\n\t\r\n\t@Input() rating: number;\r\n\t@Input() itemId: number;\r\n\t@Output() ratingClick: EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tselectedFile: ImageSnippet;\r\n\treviewid = '';\t\r\n\tjobfeedback = '';\t\r\n\t\r\n\tuserslist:any='';\tjobData:any='';thisisdone:any=\"\";alllocations:any=\"\";\r\n\tstates:any = '';counties:any = '';cities:any = '';allappliances:any='';\r\n\tshow_dialog : boolean = false;\r\n\tbutton_text:any='';\r\n\tsubmitted:any='';inputName: string;ratingClicked:any='';\r\n\t \r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private router: Router,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\tthis.makeBidForm();\r\n\t\tthis.getFeedback();\r\n\t\tthis.titleService.setTitle( 'Edit Feedback | MoveLaunch' );\r\n\t}\r\n\tmakeBidForm() {\r\n\t\tthis.angForm = this.fb.group({\r\n\t\t\t// name: ['',  Validators.required ],\r\n\t\t\tratingSelected: ['', Validators.required ],\r\n\t\t\tjobFeedback: ['', Validators.required ],\r\n\t\t}); \r\n\t}\r\n\t\r\n\tgetFeedback(){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\r\n\t\tthis.reviewid = this.route.snapshot.paramMap.get('reviewid');\r\n\t\tconsole.log(this.reviewid);\r\n\t\tthis.jobservice.getUserFeedback(this.reviewid).subscribe(result => {\r\n\t\t/* this.createFromLocationForm(); */\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.rating = result.review.rating;\r\n\t\t\t\tthis.ratingClicked = result.review.rating;\r\n\t\t\t\tthis.jobfeedback = result.review.feedback;\r\n\t\t\t}else{\r\n\t\t\t\t this._flashMessagesService.show(\"No Review Found.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t} \r\n\t\t});\r\n\t\t/* this.jobservice.getJobBids(this.jobid).subscribe(result=>{\r\n\t\t\r\n\t\t\t\r\n\t\t\t$.each(result.users, function(index, value) { \t\t\r\n\t\t\t\tresult.users[index].width = value.userRating*10;\r\n\t\t\t});\t\r\n\t\t\tthis.userslist = result.users;\r\n\t\t\tconsole.log(this.userslist);\r\n\t\t}); */\r\n\t}\r\n\tonClick(rating: number): void {\r\n\t\tthis.rating = rating;\r\n\t\tthis.ratingClick.emit({\r\n\t\t  itemId: this.itemId,\r\n\t\t  rating: rating\r\n\t\t});\r\n\t\tthis.ratingClicked  = this.rating;\r\n\t}\r\n\tget f() { return this.angForm.controls; }\r\n\tonSubmit() {\r\n        this.submitted = true;\r\n\t\t\r\n\t\tif(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\t\r\n\t\t\tvar rating_info = this.angForm.value;\r\n\t\t\tthis.reviewid = this.route.snapshot.paramMap.get('reviewid');\r\n\t\t\tthis.jobservice.updateReviews(rating_info,this.reviewid).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t if(result.success){\r\n\t\t\t\t\tthis._flashMessagesService.show('Your review has been submit successfully.', { cssClass: 'alert-success',timeout:5000}); \r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t}); \r\n\t\t \t \r\n\t\t}\t\r\n\t}\r\n\tdeleteJob(jobID){\r\n\t\tthis.jobservice.deleteJob(jobID).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis._flashMessagesService.show(\"job has been deleted successfully\", { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}else{\r\n\t\t\t\tthis._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t} \r\n\t\t   \r\n\t\t}); \r\n\t}\r\n\ttoggle() {\r\n\t\tthis.show_dialog = !this.show_dialog;\r\n\t\tthis.button_text = this.show_dialog ? 'View Less' : 'View More';\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.inputName = this.itemId + '_rating';\r\n\t\tthis.first_show = true;\r\n\t\t\r\n\t\tthis.button_text = 'View More';\r\n\t\tthis.ratingClicked= '';\r\n\t}\r\n\r\n}\r\n","module.exports = \".mat-step-icon{\\r\\n\\theight:32px !important;\\r\\n\\twidth:32px !important;\\r\\n}\\r\\n.mat-icon-no-color{\\r\\ncolor: #1691be;\\r\\nfont-size: 20px;\\r\\nvertical-align: top !important;\\r\\n\\t\\r\\n}\\r\\n.mat-icon-button.cdk-focused.cdk-program-focused{outline:none!important}\\r\\n.mat-icon-button:focus{\\r\\n\\toutline:none!important\\r\\n}\\r\\n.invalid_field{\\r\\n\\twidth: 100%;\\r\\n    margin-top: .25rem;\\r\\n    font-size: 80%;\\r\\n    color: #dc3545;\\r\\n}\\r\\n.job_change_step_page form .custom-control-label{\\r\\n\\tpadding-left:30px\\r\\n}\\r\\n::ng-deep .mat-horizontal-stepper-header-container{display:none !important}\\r\\n::ng-deep .mat-horizontal-stepper-header{\\r\\n    pointer-events: none !important;\\r\\n}\\r\\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\\r\\nspan.itemcount{width:25px; float:right}\\r\\n.mat-datepicker-toggle {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 12px;\\r\\n\\tright: 12px;\\r\\n\\tline-height: 45px;\\r\\n}\\r\\n.desc .loc_lable{    width: 100px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight:600;\\r\\n\\tfont-size:14px\\r\\n}\\r\\n.desc .loc_lable::after{content:\\\":\\\"}\\r\\n.job-info{\\r\\n    padding: 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.items-moved .job-info {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n.joblisting-panel .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.job-info .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.items-moved.joblisting-panel .title {\\r\\n\\tcolor:#303030;\\r\\n    font-weight: 900;  \\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9lZGl0am9iL2VkaXRqb2IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLHNCQUFzQjtDQUN0QixxQkFBcUI7QUFDdEI7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlO0FBQ2YsOEJBQThCOztBQUU5QjtBQUVBLGlEQUFpRCxzQkFBc0I7QUFDdkU7Q0FDQztBQUNEO0FBRUE7Q0FDQyxXQUFXO0lBQ1Isa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0FBQ2xCO0FBRUE7Q0FDQztBQUNEO0FBQ0EsbURBQW1ELHVCQUF1QjtBQUUxRTtJQUNJLCtCQUErQjtBQUNuQztBQUNBLGVBQWUsVUFBVSxDQUFDLGVBQWUsQ0FBQyxlQUFlO0FBQ3pELGVBQWUsVUFBVSxFQUFFLFdBQVc7QUFDdEM7Q0FDQyxrQkFBa0I7Q0FDbEIsU0FBUztDQUNULFdBQVc7Q0FDWCxpQkFBaUI7QUFDbEI7QUFDQSxxQkFBcUIsWUFBWTtJQUM3QixrQkFBa0I7SUFDbEIscUJBQXFCO0NBQ3hCLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2Y7QUFDRDtBQUNBLHdCQUF3QixXQUFXO0FBRW5DO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2QjtBQUNBO0lBR0ksYUFBYTtJQUVULGVBQWU7QUFDdkI7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0NBQ0MsYUFBYTtJQUNWLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvZWRpdGpvYi9lZGl0am9iLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXN0ZXAtaWNvbntcclxuXHRoZWlnaHQ6MzJweCAhaW1wb3J0YW50O1xyXG5cdHdpZHRoOjMycHggIWltcG9ydGFudDtcclxufVxyXG4ubWF0LWljb24tbm8tY29sb3J7XHJcbmNvbG9yOiAjMTY5MWJlO1xyXG5mb250LXNpemU6IDIwcHg7XHJcbnZlcnRpY2FsLWFsaWduOiB0b3AgIWltcG9ydGFudDtcclxuXHRcclxufVx0XHJcblxyXG4ubWF0LWljb24tYnV0dG9uLmNkay1mb2N1c2VkLmNkay1wcm9ncmFtLWZvY3VzZWR7b3V0bGluZTpub25lIWltcG9ydGFudH1cclxuLm1hdC1pY29uLWJ1dHRvbjpmb2N1c3tcclxuXHRvdXRsaW5lOm5vbmUhaW1wb3J0YW50XHJcbn1cclxuXHJcbi5pbnZhbGlkX2ZpZWxke1xyXG5cdHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLXRvcDogLjI1cmVtO1xyXG4gICAgZm9udC1zaXplOiA4MCU7XHJcbiAgICBjb2xvcjogI2RjMzU0NTtcclxufVxyXG5cclxuLmpvYl9jaGFuZ2Vfc3RlcF9wYWdlIGZvcm0gLmN1c3RvbS1jb250cm9sLWxhYmVse1xyXG5cdHBhZGRpbmctbGVmdDozMHB4XHJcbn1cclxuOjpuZy1kZWVwIC5tYXQtaG9yaXpvbnRhbC1zdGVwcGVyLWhlYWRlci1jb250YWluZXJ7ZGlzcGxheTpub25lICFpbXBvcnRhbnR9XHJcblxyXG46Om5nLWRlZXAgLm1hdC1ob3Jpem9udGFsLXN0ZXBwZXItaGVhZGVye1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5zcGFuLml0ZW1uYW1leyB3aWR0aDoyMHB4O2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MTRweCB9XHJcbnNwYW4uaXRlbWNvdW50e3dpZHRoOjI1cHg7IGZsb2F0OnJpZ2h0fVxyXG4ubWF0LWRhdGVwaWNrZXItdG9nZ2xlIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0dG9wOiAxMnB4O1xyXG5cdHJpZ2h0OiAxMnB4O1xyXG5cdGxpbmUtaGVpZ2h0OiA0NXB4O1xyXG59XHJcbi5kZXNjIC5sb2NfbGFibGV7ICAgIHdpZHRoOiAxMDBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRmb250LXdlaWdodDo2MDA7XHJcblx0Zm9udC1zaXplOjE0cHhcclxufVxyXG4uZGVzYyAubG9jX2xhYmxlOjphZnRlcntjb250ZW50OlwiOlwifVxyXG5cclxuLmpvYi1pbmZve1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuLml0ZW1zLW1vdmVkIC5qb2ItaW5mbyB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG59IFxyXG5cclxuLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5qb2ItaW5mbyAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLml0ZW1zLW1vdmVkLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuXHRjb2xvcjojMzAzMDMwO1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDsgIFxyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"container job_change_step_page\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t<mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<mat-step >\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"angForm\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">You can select more then one option</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"services\\\" *ngFor=\\\"let option of angForm.controls.services.controls; let i=index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(selectedServices && selectedServices.includes(jobservices[i]._id))?true : false\\\" [formControlName]=\\\"i\\\"  (click)=\\\"checkName(option.name)\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"moving_{{i}}\\\" value=\\\"{{jobservices[i]._id}}\\\" [ngModel] = \\\"(selectedServices && selectedServices.includes(jobservices[i]._id))?true : false\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"moving_{{i}}\\\">{{jobservices[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\" (click)=\\\"isChangeheading(stepper);\\\" type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t</mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showMoving\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"angOptionsForm\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to move:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepicker.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepicker\\\" class=\\\"form-control\\\" id=\\\"job_start_date\\\" formControlName=\\\"job_start_date\\\"   [ngClass]=\\\"{ 'is-invalid': submitted_moving && f.job_start_date.errors}\\\" [(ngModel)] = \\\"movingData && movingData.jobStart\\\"  placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepicker\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepicker></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_moving && f.job_start_date.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.job_start_date.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.job_start_date.errors.matDatepickerMin\\\">Job Date is passed. This is an old job</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help moving?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"options\\\" *ngFor=\\\"let option of angOptionsForm.controls.options.controls; let i = index;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(movingData && movingData.selected_options.includes(optionsData[i].id))?true : false\\\" [ngModel] = \\\"(movingData && movingData.selected_options.includes(optionsData[i].id))?true : false\\\" [formControlName]=\\\"i\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"options_{{i}}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"options_{{i}}\\\">{{optionsData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage1\\\">Select at least one options for moving</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\"  (click)=\\\"setOptionsAvailable(stepper);\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showMoving\\\">\\r\\n\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"secondFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Moving from Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t <div formArrayName=\\\"itemRows\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of secondFormGroup.controls.itemRows['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving from ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from\\\" (change)=\\\"toggleMovingFrom($event,i,itemrow)\\\" formControlName=\\\"moving_from\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving from ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"f2.controls[i].controls.moving_from.errors.required\\\">Moving From is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_floor\\\"  formControlName=\\\"moving_from_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_floor.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_floor.errors.required\\\">Moving From floor is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_state\\\" formControlName=\\\"moving_from_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesFrom($event,secondFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_state.errors.required\\\">Moving From state is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_county\\\" formControlName=\\\"moving_from_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesFrom($event,i,secondFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties1\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_county.errors.required\\\">Moving From county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n \\r\\n \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_city\\\" formControlName=\\\"moving_from_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities1\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_city.errors.required\\\">Moving From city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\"  maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\"  id=\\\"moving_from_zipcode\\\" formControlName=\\\"moving_from_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_zipcode.errors.required\\\">Moving From zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_from_address\\\" formControlName=\\\"moving_from_address\\\" [ngClass]=\\\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_2 && f2.controls[i].controls.moving_from_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f2.controls[i].controls.moving_from_address.errors.required\\\">Moving From address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"secondFormGroup.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRow()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFromLocation(stepper,secondFormGroup,'moving',thirdFormGroup);\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t  <mat-step *ngIf = \\\"showMoving\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirdFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Moving to Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t   <div formArrayName=\\\"itemRowsTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of thirdFormGroup.controls.itemRowsTo['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving to ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to\\\" (change)=\\\"toggleMovingTo($event,i,itemrow)\\\" formControlName=\\\"moving_to\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to.errors}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving to ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to.errors.required\\\">Moving To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_floor\\\" formControlName=\\\"moving_to_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_floor.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_floor.errors.required\\\">Moving To floor is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_state\\\" formControlName=\\\"moving_to_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesTo($event,thirdFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_state.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_state.errors.required\\\">Moving To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_county\\\" formControlName=\\\"moving_to_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesTo($event,i,thirdFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties2\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_county.errors.required\\\">Moving To county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_city\\\" formControlName=\\\"moving_to_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_city.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities2\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_city.errors.required\\\">Moving To city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  maxlength=\\\"5\\\" class=\\\"form-control\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" id=\\\"moving_to_zipcode\\\" formControlName=\\\"moving_to_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_zipcode.errors.required\\\">Moving To zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_to_address\\\" formControlName=\\\"moving_to_address\\\" [ngClass]=\\\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_3 && f3.controls[i].controls.moving_to_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f3.controls[i].controls.moving_to_address.errors.required\\\">Moving To address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"thirdFormGroup.controls.itemRowsTo.controls.length > 1\\\" (click)=\\\"deleteRowTo(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRowTo()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveToLocation(stepper,thirdFormGroup,'moving');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form> \\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"FourthFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of FourthFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}} </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_moving[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"movingData && movingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"appliance_assembly\\\" [(ngModel)]=\\\"movingData && movingData.appliance_assembly\\\" formControlName=\\\"appliance_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"appliance_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,FourthFormGroup,'moving');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showMoving && showBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_moving[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"movingData && movingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"bedrooms_assembly\\\" [(ngModel)]=\\\"movingData && movingData.abedrooms_assembly\\\" formControlName=\\\"bedrooms_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"bedrooms_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthFormGroup,'moving');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showLivingRooms\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"movingData && movingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"livingRooms_assembly\\\" [(ngModel)]=\\\"movingData && movingData.livingRooms_assembly\\\" formControlName=\\\"livingRooms_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"livingRooms_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthFormGroup,'moving');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"movingData && movingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"familyRooms_assembly\\\" [(ngModel)]=\\\"movingData && movingData.familyRooms_assembly\\\" formControlName=\\\"familyRooms_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"familyRooms_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhFormGroup,'moving');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"movingData && movingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"diningRooms_assembly\\\" [(ngModel)]=\\\"movingData && movingData.diningRooms_assembly\\\" formControlName=\\\"diningRooms_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"diningRooms_assembly\\\">Need Help in Dining Rooms assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthFormGroup,'moving');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step   *ngIf = \\\"showMoving && showKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let appliance of ninthFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"movingData && movingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"kitchen_assembly\\\" [(ngModel)]=\\\"movingData && movingData.kitchen_assembly\\\" formControlName=\\\"kitchen_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"kitchen_assembly\\\">Need Help in Kitchen assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthFormGroup,'moving');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"movingData && movingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"basement_assembly\\\" [(ngModel)]=\\\"movingData && movingData.basement_assembly\\\" formControlName=\\\"basement_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"basement_assembly\\\">Need Help in Basements assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthFormGroup,'moving');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"movingData && movingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"garage_assembly\\\" [(ngModel)]=\\\"movingData && movingData.garage_assembly\\\" formControlName=\\\"garage_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"garage_assembly\\\">Need Help in Garages assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhFormGroup,'moving');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showPatiyoYards\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tweleveFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of tweleveFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"movingData && movingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"patioyards_assembly\\\" [(ngModel)]=\\\"movingData && movingData.patioyards_assembly\\\" formControlName=\\\"patioyards_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"patioyards_assembly\\\">Need Help in patioyards assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,tweleveFormGroup,'moving');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"movingData && movingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"patioyards_assembly\\\" [(ngModel)]=\\\"movingData && movingData.patioyards_assembly\\\" formControlName=\\\"patioyards_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"patioyards_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOffices(stepper,thirteenFormGroup,'moving');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showMoving && showOversized\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be Moved</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_moving[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"movingData && movingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"patioyards_assembly\\\" [(ngModel)]=\\\"movingData && movingData.patioyards_assembly\\\" formControlName=\\\"patioyards_assembly\\\"> <label class=\\\"custom-control-label\\\" for=\\\"patioyards_assembly\\\">Need Help in Appliances assembly/disassembly ?</label> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOverSized(stepper,fourteenFormGroup,'moving');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n<!---------------------------------------------------- Packing Overview ------------------------------------------------------------------>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking\\\">\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"angPackedOptionsForm\\\"  class=\\\"esitame-form\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to pack:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepickerPacking.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepickerPacking\\\" class=\\\"form-control\\\" id=\\\"job_start_date_packing\\\" formControlName=\\\"job_start_date_packing\\\"   [ngClass]=\\\"{ 'is-invalid': submitted_packing && _f1.job_start_date_packing.errors}\\\" [(ngModel)] = \\\"packingData && packingData.jobStart\\\"  placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepickerPacking\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepickerPacking></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_packing && _f1.job_start_date_packing.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f1.job_start_date_packing.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f1.job_start_date_packing.errors.matDatepickerMin\\\">Job Date is passed. This is an old job</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help Packing?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"packingoptions\\\" *ngFor=\\\"let packingoption of angPackedOptionsForm.controls.packingoptions.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(packingData && packingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [ngModel] = \\\"(packingData && packingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [formControlName]=\\\"i\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"packingoptions_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"packingoptions_{{i}}\\\">{{optionsPackedData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage2\\\">Select at least one options for moving</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\"  (click)=\\\"setPackingOptionsAvailable(stepper,'forPacking');\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showPacking\\\">\\r\\n\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"secondpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Packing from Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t <div formArrayName=\\\"itemRows\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of secondpackedFormGroup.controls.itemRows['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving from ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from\\\" (change)=\\\"toggleMovingFrom($event,i,itemrow)\\\" formControlName=\\\"moving_from\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving from ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"_f2.controls[i].controls.moving_from.errors.required\\\">Moving From is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_floor\\\" formControlName=\\\"moving_from_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_floor.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_floor.errors.required\\\">Moving From floor is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_state\\\" formControlName=\\\"moving_from_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesFrom($event,secondpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_state.errors.required\\\">Moving From state is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_county\\\" formControlName=\\\"moving_from_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesFrom($event,i,secondpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties1\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_county.errors.required\\\">Moving From county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n \\r\\n \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_city\\\" formControlName=\\\"moving_from_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities1\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_city.errors.required\\\">Moving From city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\"  maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\"  id=\\\"moving_from_zipcode\\\" formControlName=\\\"moving_from_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_zipcode.errors.required\\\">Moving From zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_from_address\\\" formControlName=\\\"moving_from_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_2 && _f2.controls[i].controls.moving_from_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f2.controls[i].controls.moving_from_address.errors.required\\\">Moving From address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"secondpackedFormGroup.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRow()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFromLocation(stepper,secondpackedFormGroup,'packing',thirdpackedFormGroup);\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showPacking\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirdpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Packing to Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t   <div formArrayName=\\\"itemRowsTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of thirdpackedFormGroup.controls.itemRowsTo['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving to ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to\\\" (change)=\\\"toggleMovingTo($event,i,itemrow)\\\" formControlName=\\\"moving_to\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to.errors}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving to ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to.errors.required\\\">Packing To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_floor\\\"  formControlName=\\\"moving_to_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_floor.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_floor.errors.required\\\">Packing To floor is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_state\\\" formControlName=\\\"moving_to_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesTo($event,thirdpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_state.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_state.errors.required\\\">Packing To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_county\\\" formControlName=\\\"moving_to_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesTo($event,i,thirdpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties2\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_county.errors.required\\\">Moving To county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_city\\\" formControlName=\\\"moving_to_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_city.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities2\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_city.errors.required\\\">Packing To city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  maxlength=\\\"5\\\" class=\\\"form-control\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" id=\\\"moving_to_zipcode\\\" formControlName=\\\"moving_to_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_zipcode.errors.required\\\">Packing To zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_to_address\\\" formControlName=\\\"moving_to_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedP_3 && _f3.controls[i].controls.moving_to_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_f3.controls[i].controls.moving_to_address.errors.required\\\">Packing To address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"thirdpackedFormGroup.controls.itemRowsTo.controls.length > 1\\\" (click)=\\\"deleteRowTo(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRowTo()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveToLocation(stepper,thirdpackedFormGroup,'packing');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form> \\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t <mat-step *ngIf = \\\"showPacking && showPackingAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"fourthpackedFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of fourthpackedFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_packing[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"packingData && packingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,fourthpackedFormGroup,'packing');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showPacking && showPackingBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthpackedFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_packing[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"packingData && packingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthpackedFormGroup,'packing');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingLivingRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthpackedFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"packingData && packingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthpackedFormGroup,'packing');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhpackedFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"packingData && packingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhpackedFormGroup,'packing');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthpackedFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"packingData && packingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthpackedFormGroup,'packing');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showPacking && showPackingKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let appliance of ninthpackedFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"packingData && packingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthpackedFormGroup,'packing');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthpackedFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"packingData && packingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthpackedFormGroup,'packing');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhpackedFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"packingData && packingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhpackedFormGroup,'packing');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingPatiyoYards\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"twelevepackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of twelevepackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"packingData && packingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,twelevepackedFormGroup,'packing');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"packingData && packingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,thirteenpackedFormGroup,'packing');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showPacking && showPackingOversized\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be Packed</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_packing[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"packingData && packingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,fourteenpackedFormGroup,'packing');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n<!---------------------------------------------------- Packing Overview ------------------------------------------------------------------>\\r\\n<!---------------------------------------------------- Unpacking Overview ------------------------------------------------------------------>\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnPacking\\\">\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"angunPackedOptionsForm\\\"  class=\\\"esitame-form\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to Unpack:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepickerunPacking.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepickerunPacking\\\" class=\\\"form-control\\\" id=\\\"job_start_date_unpacking\\\" formControlName=\\\"job_start_date_unpacking\\\"   [ngClass]=\\\"{ 'is-invalid': submitted_unpacking && _Uf1.job_start_date_unpacking.errors}\\\" [(ngModel)] = \\\"unpackingData && unpackingData.jobStart\\\"  placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepickerunPacking\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepickerunPacking></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_unpacking && _Uf1.job_start_date_unpacking.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_Uf1.job_start_date_unpacking.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_Uf1.job_start_date_unpacking.errors.matDatepickerMin\\\">Job Date is passed. This is an old job</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help Unpacking?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"packingoptions\\\" *ngFor=\\\"let packingoption of angunPackedOptionsForm.controls.packingoptions.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(unpackingData && unpackingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [ngModel] = \\\"(unpackingData && unpackingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [formControlName]=\\\"i\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"unpackingoptions_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"unpackingoptions_{{i}}\\\">{{optionsPackedData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage3\\\">Select at least one options for moving</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\" (click)=\\\"setPackingOptionsAvailable(stepper,'forUnpacking');\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\t\\t\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnPacking\\\">\\r\\n\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"secondunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Unpacking from Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t <div formArrayName=\\\"itemRows\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of secondunpackedFormGroup.controls.itemRows['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving from ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from\\\" (change)=\\\"toggleMovingFrom($event,i,itemrow)\\\" formControlName=\\\"moving_from\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving from ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"_UPf2.controls[i].controls.moving_from.errors.required\\\">Moving From is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_floor\\\" formControlName=\\\"moving_from_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_floor.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_floor.errors.required\\\">Moving From floor is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_state\\\" formControlName=\\\"moving_from_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesFrom($event,secondunpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_state.errors.required\\\">Moving From state is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_county\\\" formControlName=\\\"moving_from_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesFrom($event,i,secondunpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties1\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_county.errors.required\\\">Moving From county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n \\r\\n \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_city\\\" formControlName=\\\"moving_from_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities1\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_city.errors.required\\\">Moving From city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\"  maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\"  id=\\\"moving_from_zipcode\\\" formControlName=\\\"moving_from_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_zipcode.errors.required\\\">Moving From zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_from_address\\\" formControlName=\\\"moving_from_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf2.controls[i].controls.moving_from_address.errors.required\\\">Moving From address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"secondunpackedFormGroup.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRow()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFromLocation(stepper,secondunpackedFormGroup,'unpacking',thirdunpackedFormGroup);\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnPacking\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirdunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Unpacking to Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t   <div formArrayName=\\\"itemRowsTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of thirdunpackedFormGroup.controls.itemRowsTo['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving to ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to\\\" (change)=\\\"toggleMovingTo($event,i,itemrow)\\\" formControlName=\\\"moving_to\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to.errors}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving to ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to.errors.required\\\">Packing To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_floor\\\"  formControlName=\\\"moving_to_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_floor.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_floor.errors.required\\\">Packing To floor is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_state\\\" formControlName=\\\"moving_to_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesTo($event,thirdunpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_state.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_state.errors.required\\\">Packing To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_county\\\" formControlName=\\\"moving_to_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesTo($event,i,thirdunpackedFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties2\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_county.errors.required\\\">Moving To county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_city\\\" formControlName=\\\"moving_to_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_city.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities2\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_city.errors.required\\\">Packing To city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  maxlength=\\\"5\\\" class=\\\"form-control\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" id=\\\"moving_to_zipcode\\\" formControlName=\\\"moving_to_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_zipcode.errors.required\\\">Packing To zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_to_address\\\" formControlName=\\\"moving_to_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_UPf3.controls[i].controls.moving_to_address.errors.required\\\">Packing To address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"thirdunpackedFormGroup.controls.itemRowsTo.controls.length > 1\\\" (click)=\\\"deleteRowTo(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRowTo()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveToLocation(stepper,thirdunpackedFormGroup,'unpacking');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form> \\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnPacking && showUnpackingAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"fourthunpackedFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of fourthunpackedFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}} </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_unpacking[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,fourthunpackedFormGroup,'unpacking');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showUnPacking && showUnpackingBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthunpackedFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_unpacking[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData && unpackingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthunpackedFormGroup,'unpacking');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingLivingRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthunpackedFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthunpackedFormGroup,'unpacking');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhunpackedFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhunpackedFormGroup,'unpacking');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthunpackedFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthunpackedFormGroup,'unpacking');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showUnPacking && showUnpackingKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let appliance of ninthunpackedFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthunpackedFormGroup,'unpacking');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthunpackedFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthunpackedFormGroup,'unpacking');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhunpackedFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhunpackedFormGroup,'unpacking');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingPatiyoYards\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tweleveunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of tweleveunpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,tweleveunpackedFormGroup,'unpacking');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenunpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,thirteenunpackedFormGroup,'unpacking');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnPacking && showUnpackingOversized\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenunpackedFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be Unpacked</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenunpackedFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unpacking[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unpackingData && unpackingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,fourteenunpackedFormGroup,'unpacking');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\t\\r\\n<!---------------------------------------------------- Unpacking Overview ------------------------------------------------------------------>\\r\\n<!---------------------------------------------------- Loading Overview ------------------------------------------------------------------>\\r\\n\\t\\t\\t\\t <mat-step *ngIf = \\\"showLoading\\\">\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"angLoadingOptionsForm\\\"  class=\\\"esitame-form\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to Loading:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepickerLoading.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepickerLoading\\\" class=\\\"form-control\\\" id=\\\"job_start_date_loading\\\" formControlName=\\\"job_start_date_loading\\\"   [ngClass]=\\\"{ 'is-invalid': submitted_loading && _fL1.job_start_date_laoding.errors}\\\" [(ngModel)] = \\\"loadingData && loadingData.jobStart\\\"  placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepickerLoading\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepickerLoading></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_loading && _fL1.job_start_date_loading.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_fL1.job_start_date_loading.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_fL1.job_start_date_loading.errors.matDatepickerMin\\\">Job Date is passed. This is an old job</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help Loading?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"packingoptions\\\" *ngFor=\\\"let packingoption of angLoadingOptionsForm.controls.packingoptions.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(loadingData && loadingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [ngModel] = \\\"(loadingData && loadingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [formControlName]=\\\"i\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"loadinggoptions_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"loadinggoptions_{{i}}\\\">{{optionsPackedData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage4\\\">Select at least one options for moving</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\"  (click)=\\\"setLoadingOptionsAvailable(stepper);\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\t\\t\\t\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showLoading\\\">\\r\\n\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"secondloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Loading from Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t <div formArrayName=\\\"itemRows\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of secondloadingFormGroup.controls.itemRows['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you loading from ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from\\\" (change)=\\\"toggleMovingFrom($event,i,itemrow)\\\" formControlName=\\\"moving_from\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you loading from ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"fL2.controls[i].controls.moving_from.errors.required\\\">Moving From is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_floor\\\" formControlName=\\\"moving_from_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t <div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_floor.errors\\\" class=\\\"invalid-feedback\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_floor.errors.required\\\">Moving From floor is required</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_state\\\" formControlName=\\\"moving_from_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesFrom($event,secondloadingFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_state.errors.required\\\">Moving From state is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_county\\\" formControlName=\\\"moving_from_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesFrom($event,i,secondloadingFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties1\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_county.errors.required\\\">Moving From county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n \\r\\n \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_from_city\\\" formControlName=\\\"moving_from_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities1\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_city.errors.required\\\">Moving From city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\"  maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\"  id=\\\"moving_from_zipcode\\\" formControlName=\\\"moving_from_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_zipcode.errors.required\\\">Moving From zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_from_address\\\" formControlName=\\\"moving_from_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedL_2 && fL2.controls[i].controls.moving_from_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fL2.controls[i].controls.moving_from_address.errors.required\\\">Moving From address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"secondloadingFormGroup.controls.itemRows.controls.length > 1\\\" (click)=\\\"deleteRow(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRow()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFromLoadingLocation(stepper,secondloadingFormGroup,'loading',thirdloadingFormGroup);\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoadingAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"FourthloadingFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of FourthloadingFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}} </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_loading[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,FourthloadingFormGroup,'loading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showLoading && showLoadingBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthloadingFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_loading[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthloadingFormGroup,'loading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingLivingRooms\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthloadingFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthloadingFormGroup,'loading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhloadingFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhloadingFormGroup,'loading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthloadingFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthloadingFormGroup,'loading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step   *ngIf = \\\"showLoading && showLoadingKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let appliance of ninthloadingFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthloadingFormGroup,'loading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthloadingFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthloadingFormGroup,'loading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhloadingFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhloadingFormGroup,'loading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingPatiyoYards\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tweleveloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of tweleveloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,tweleveloadingFormGroup,'loading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOffices(stepper,thirteenloadingFormGroup,'loading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showLoadingOversized\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be Loaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_loading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"loadingData && loadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOverSized(stepper,fourteenloadingFormGroup,'loading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnLoading\\\">\\r\\n\\t\\t\\t\\t\\t<form [formGroup] = \\\"angUnloadingOptionsForm\\\"  class=\\\"esitame-form\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"title\\\">What day would you like to Unloading:</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput readonly=\\\"readonly\\\" (click) = \\\"startDatepickerUnloading.open()\\\" [min]=\\\"minDate\\\" (ngModelChange)=\\\"updateCalcs($event)\\\" [matDatepicker]=\\\"startDatepickerUnloading\\\" class=\\\"form-control\\\" id=\\\"job_start_date_unloading\\\" formControlName=\\\"job_start_date_unloading\\\"   [ngClass]=\\\"{ 'is-invalid': submitted_unloading && _fUL1.job_start_date_unloading.errors}\\\" [(ngModel)] = \\\"unloadingData && unloadingData.jobStart\\\"  placeholder=\\\"Job Date\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker-toggle matSuffix [for]=\\\"startDatepickerUnloading\\\"><mat-icon matDatepickerToggleIcon><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></mat-icon></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t\\t\\t <mat-datepicker touchUi #startDatepickerUnloading></mat-datepicker>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted_unloading && _fUL1.job_start_date_unloading.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_fUL1.job_start_date_unloading.errors.required\\\">Job Date is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"_fUL1.job_start_date_unloading.errors.matDatepickerMin\\\">Job Date is passed. This is an old job</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div role=\\\"separator\\\" class=\\\"divider\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t<h3 class=\\\"mb-4\\\">Which room(s) do you need to help Unloading?</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div formArrayName=\\\"packingoptions\\\" *ngFor=\\\"let packingoption of angUnloadingOptionsForm.controls.packingoptions.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <input [attr.checked]=\\\"(unloadingData && unloadingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [ngModel] = \\\"(unloadingData && unloadingData.selected_options.includes(optionsPackedData[i].id))?true : false\\\" [formControlName]=\\\"i\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"unloadingoptions_{{i}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"custom-control-label\\\" for=\\\"unloadingoptions_{{i}}\\\">{{optionsPackedData[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"showErrorMessage1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"invalid_field\\\" *ngIf=\\\"showErrorMessage1\\\">Select at least one options for moving</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious  type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\"  (click)=\\\"setUnloadingOptionsAvailable(stepper);\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\r\\n\\t\\t\\t\\t</mat-step>\\t\\t\\r\\n\\t\\t\\t\\t<mat-step *ngIf = \\\"showUnLoading\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirdunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1 jobGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Unloading to Location</h1> \\r\\n\\t\\t\\t\\t\\t\\t   <div formArrayName=\\\"itemRowsTo\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t <div *ngFor=\\\"let itemrow of thirdunloadingFormGroup.controls.itemRowsTo['controls']; let i=index\\\"  [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t  <h4>Location #{{ i + 1 }}</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Where are you moving to ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to\\\" (change)=\\\"toggleMovingTo($event,i,itemrow)\\\" formControlName=\\\"moving_to\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to.errors}\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Where are you moving to ?</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"house\\\">House</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"apartment\\\">Apartments</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to.errors.required\\\">Moving To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Floor</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_floor\\\"  formControlName=\\\"moving_to_floor\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_floor.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Floor</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">1</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">2</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">3</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">4</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">5</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">6</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">7</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">8</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">9</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_floor.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_floor.errors.required\\\">Moving To floor is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_state\\\" formControlName=\\\"moving_to_state\\\" class=\\\"form-control \\\" (change)= \\\"getCountiesTo($event,thirdunloadingFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_state.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_state.errors.required\\\">Moving To is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_county\\\" formControlName=\\\"moving_to_county\\\" class=\\\"form-control \\\" (change)= \\\"getCitiesTo($event,i,thirdunloadingFormGroup)\\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties2\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_county.errors.required\\\">Moving To county is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"moving_to_city\\\" formControlName=\\\"moving_to_city\\\" class=\\\"form-control \\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_city.errors}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities2\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_city.errors.required\\\">Moving To city is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  maxlength=\\\"5\\\" class=\\\"form-control\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" id=\\\"moving_to_zipcode\\\" formControlName=\\\"moving_to_zipcode\\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_zipcode.errors}\\\" placeholder=\\\"Zipcode*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_zipcode.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_zipcode.errors.required\\\">Moving To zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_zipcode.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\"  id=\\\"moving_to_address\\\" formControlName=\\\"moving_to_address\\\" [ngClass]=\\\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_address.errors}\\\"  placeholder=\\\"Address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedU_3 && fUL2.controls[i].controls.moving_to_address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fUL2.controls[i].controls.moving_to_address.errors.required\\\">Moving To address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"thirdunloadingFormGroup.controls.itemRowsTo.controls.length > 1\\\" (click)=\\\"deleteRowTo(i)\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Remove Location <i class=\\\"fas fa-minus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"addNewRowTo()\\\" class=\\\"btn btn-lg btn-primary mt-2\\\">Add Location <i class=\\\"fas fa-plus-circle\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveToLocation(stepper,thirdunloadingFormGroup,'unloading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form> \\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showUnloadingAppliances\\\" >\\r\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"fourthunloadingFormGroup\\\" class=\\\"esitame-form\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Appliances To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"allappliances\\\" *ngFor=\\\"let appliance of fourthunloadingFormGroup.controls.allappliances['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{allappliances[i].name}} </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"appliance\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"apppli_unloading[i]\\\" name=\\\"appliances\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{allappliances[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"appliance_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.appliances_misc\\\" formControlName=\\\"appliance_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveAppliances(stepper,fourthunloadingFormGroup,'unloading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step  *ngIf = \\\"showLoading && showUnloadingBedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"FifthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Bedrooms To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li formArrayName=\\\"bedrooms\\\" *ngFor=\\\"let bedroom of FifthunloadingFormGroup.controls.bedrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{bedrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"bedrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" [(ngModel)]=\\\"beds_unloading[i]\\\"  name=\\\"bedrooms\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{bedrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bedrooms_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.bedrooms_misc\\\" formControlName=\\\"bedrooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveBedrooms(stepper,FifthunloadingFormGroup,'unloading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showUnloadingLivingRooms\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"sixthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Living Rooms To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"livingrooms\\\" *ngFor=\\\"let livingroom of sixthunloadingFormGroup.controls.livingrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{livingrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"livingrooms\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"livingrooms\\\" [(ngModel)]=\\\"living_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{livingrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"livingRooms_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.livingRooms_misc\\\"  formControlName=\\\"livingRooms_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveLivingRooms(stepper,sixthunloadingFormGroup,'unloading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showUnloadingFamilyRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"seventhunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Family Rooms To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"familyrooms\\\" *ngFor=\\\"let appliance of seventhunloadingFormGroup.controls.familyrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{familyrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"familyroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"familyrooms\\\" [(ngModel)]=\\\"family_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{familyrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"familyRooms_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.familyRooms_misc\\\" formControlName=\\\"familyRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveFamilyRooms(stepper,seventhunloadingFormGroup,'unloading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showUnloadingDiningRooms\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eigthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Dining Rooms To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"diningrooms\\\" *ngFor=\\\"let diningroom of eigthunloadingFormGroup.controls.diningrooms['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{diningrooms[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"diningroom\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"diningrooms\\\" [(ngModel)]=\\\"dining_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{diningrooms[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dininRooms_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.diningRooms_misc\\\" formControlName=\\\"dininRooms_misc\\\"  placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveDiningRooms(stepper,eigthunloadingFormGroup,'unloading');\\\"   >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step   *ngIf = \\\"showLoading && showUnloadingKitchen\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"ninthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Kitchens To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"kitchens\\\" *ngFor=\\\"let appliance of ninthunloadingFormGroup.controls.kitchens['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{kitchens[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"kitchen\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"kitchens\\\" [(ngModel)]=\\\"kitch_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{kitchens[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kitchen_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.kitchen_misc\\\"  formControlName=\\\"kitchen_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveKitchens(stepper,ninthunloadingFormGroup,'unloading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showUnloadingBasement\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tenthunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Basements To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"basements\\\" *ngFor=\\\"let basement of tenthunloadingFormGroup.controls.basements['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{basements[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"basement\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"basements\\\" [(ngModel)]=\\\"base_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{basements[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basement_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.basement_misc\\\" formControlName=\\\"basement_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  (click)=\\\"saveBasements(stepper,tenthunloadingFormGroup,'unloading');\\\"  >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showUnloadingGarage\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"eleventhunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Garages To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"garages\\\" *ngFor=\\\"let garage of eleventhunloadingFormGroup.controls.garages['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{garages[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"garage\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"garages\\\" [(ngModel)]=\\\"garge_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{garages[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"garage_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.garage_misc\\\" formControlName=\\\"garage_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveGarages(stepper,eleventhunloadingFormGroup,'unloading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showUnloadingPatiyoYards\\\">\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"tweleveunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Patioyards To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of tweleveunloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"savePatiyoyards(stepper,tweleveunloadingFormGroup,'unloading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showUnloadingOffices\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"thirteenunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Office To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of thirteenunloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOffices(stepper,thirteenunloadingFormGroup,'unloading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  <mat-step *ngIf = \\\"showLoading && showUnloadingOversized\\\" >\\r\\n\\t\\t\\t\\t\\t<form class=\\\"esitame-form\\\" [formGroup]=\\\"fourteenunloadingFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Oversized Items To be Unloaded</h1> \\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"form-row\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li  formArrayName=\\\"patioyards\\\" *ngFor=\\\"let patioyard of fourteenunloadingFormGroup.controls.patioyards['controls']; let i = index\\\" class=\\\"form-row col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>{{patioyards[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"appliance_id\\\" [formControlName]=\\\"i\\\" value=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"patioyard\\\" class=\\\"form-control\\\" [formControlName]=\\\"i\\\" name=\\\"patioyards\\\" [(ngModel)]=\\\"patio_unloading[i]\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value = \\\"null\\\" title=\\\"select\\\">Select</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let x of [1,2,3,4,5,6,7,8,9,10]\\\" value=\\\"{{x}}_{{patioyards[i]._id}}\\\">{{x}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"patioYard_misc\\\" [(ngModel)]=\\\"unloadingData && unloadingData.patioYard_misc\\\" formControlName=\\\"patioYard_misc\\\" placeholder=\\\"Do you want to provide any Instruction?\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\"  matStepperPrevious><i class=\\\"fas fa-arrow-left\\\"></i> Back</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-2\\\" (click)=\\\"saveOverSized(stepper,fourteenunloadingFormGroup,'unloading');\\\" >Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t  </div> \\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n<!---------------------------------------------------- Loading Overview ------------------------------------------------------------------>\\r\\n<!---------------------------------------------------- Unloading Overview ------------------------------------------------------------------>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t  <mat-step>\\r\\n\\t\\t\\t\\t\\t\\t<form>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Basic Information</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Firstname </span> {{ jobData.firstname }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ jobData.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{ jobData.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{jobData.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Lastname </span>  {{ jobData.lastname }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{ jobData.county }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Phone </span>  {{ jobData.phone }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{jobData.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t \\t<div class=\\\"step1\\\" *ngIf=\\\"showMoving && movingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Moving Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\"  *ngIf=\\\"movingData && movingData.moving_from.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of movingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"movingData && movingData.moving_to.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of movingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Moved\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.appliances  && movingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of movingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_misc\\\">{{ movingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.appliances && movingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.bedRooms  && movingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of movingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedrooms_misc\\\">{{ movingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.bedRooms && movingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.livingRooms && movingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of movingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_misc\\\">{{ movingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.livingRooms && movingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.familyRooms && movingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of movingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_misc\\\">{{ movingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.familyRooms && movingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.diningRooms  && movingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of movingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_misc\\\">{{ movingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.diningRooms && movingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.kitchen && movingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of movingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_misc\\\">{{ movingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.kitchen && movingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.basement && movingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of movingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_misc\\\">{{ movingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.basement && movingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.garage  && movingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of movingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_misc\\\">{{ movingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.garage && movingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.patioYard  && movingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of movingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_misc\\\">{{ movingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.patioYard && movingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" *ngIf=\\\"showPacking && packingData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Packing Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData && packingData.moving_from.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of packingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData && packingData.moving_from.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of packingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Packed\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.appliances  && packingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of packingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.appliances_misc\\\">{{ packingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.appliances && packingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.bedRooms  && packingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of packingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.bedrooms_misc\\\">{{ packingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.bedRooms && packingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.livingRooms && packingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of packingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.livingRooms_misc\\\">{{ packingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.livingRooms && packingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.familyRooms && packingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of packingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.familyRooms_misc\\\">{{ packingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.familyRooms && packingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.diningRooms  && packingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of packingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.diningRooms_misc\\\">{{ packingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.diningRooms && packingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.kitchen && packingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of packingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.kitchen_misc\\\">{{ packingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.kitchen && packingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.basement && packingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of packingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.basement_misc\\\">{{ packingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.basement && packingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.garage  && packingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of packingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.garage_misc\\\">{{ packingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.garage && packingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.patioYard  && packingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of packingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.patioYard_misc\\\">{{ packingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.patioYard && packingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" *ngIf=\\\"showUnPacking && unpackingData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Unpacking Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData && unpackingData.moving_from.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  *ngFor=\\\"let movingfrom of unpackingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData && unpackingData.moving_to.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  *ngFor=\\\"let movingto of unpackingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Unpacked\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.appliances  && unpackingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unpackingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.appliances_misc\\\">{{ unpackingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.appliances && unpackingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.bedRooms  && unpackingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unpackingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.bedrooms_misc\\\">{{ unpackingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.bedRooms && unpackingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.livingRooms && unpackingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unpackingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.livingRooms_misc\\\">{{ unpackingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.livingRooms && unpackingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.familyRooms && unpackingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unpackingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.familyRooms_misc\\\">{{ unpackingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.familyRooms && unpackingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.diningRooms  && unpackingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unpackingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.diningRooms_misc\\\">{{ unpackingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.diningRooms && unpackingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.kitchen && unpackingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unpackingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.kitchen_misc\\\">{{ unpackingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.kitchen && unpackingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.basement && unpackingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unpackingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.basement_misc\\\">{{ unpackingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.basement && unpackingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.garage  && unpackingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unpackingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.garage_misc\\\">{{ unpackingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.garage && unpackingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.patioYard  && unpackingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unpackingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.patioYard_misc\\\">{{ unpackingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.patioYard && unpackingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" *ngIf=\\\"showLoading && loadingData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Loading Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\"  *ngIf=\\\"loadingData && loadingData.moving_from.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of loadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Loaded\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.appliances  && loadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of loadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.appliances_misc\\\">{{ loadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.appliances && loadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.bedRooms  && loadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of loadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.bedrooms_misc\\\">{{ loadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.bedRooms && loadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.livingRooms && loadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of loadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.livingRooms_misc\\\">{{ loadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.livingRooms && loadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.familyRooms && loadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of loadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.familyRooms_misc\\\">{{ loadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.familyRooms && loadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.diningRooms  && loadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of loadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.diningRooms_misc\\\">{{ loadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.diningRooms && loadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.kitchen && loadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of loadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.kitchen_misc\\\">{{ loadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.kitchen && loadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.basement && loadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of loadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.basement_misc\\\">{{ loadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.basement && loadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.garage  && loadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of loadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.garage_misc\\\">{{ loadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.garage && loadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.patioYard  && loadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of loadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.patioYard_misc\\\">{{ loadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.patioYard && loadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\" *ngIf=\\\"showUnLoading && unloadingData\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"step-title\\\">Selected Unloading Data</h3> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\"  *ngIf=\\\"unloadingData && unloadingData.moving_to.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unloadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Address </span>  {{movingto.address1}}<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"container title-icon-bar items-moved\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tItems to be Unloaded\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.appliances  && unloadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unloadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.appliances_misc\\\">{{ unloadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.appliances && unloadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.bedRooms  && unloadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unloadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.bedrooms_misc\\\">{{ unloadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.bedRooms && unloadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.livingRooms && unloadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unloadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.livingRooms_misc\\\">{{ unloadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.livingRooms && unloadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.familyRooms && unloadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unloadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.familyRooms_misc\\\">{{ unloadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.familyRooms && unloadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.diningRooms  && unloadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unloadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.diningRooms_misc\\\">{{ unloadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.diningRooms && unloadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.kitchen && unloadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unloadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.kitchen_misc\\\">{{ unloadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.kitchen && unloadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.basement && unloadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unloadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.basement_misc\\\">{{ unloadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.basement && unloadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.garage  && unloadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unloadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.garage_misc\\\">{{ unloadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.garage && unloadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.patioYard  && unloadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unloadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.patioYard_misc\\\">{{ unloadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.patioYard && unloadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4 mr-3\\\" matStepperPrevious type=\\\"submit\\\">Back <i class=\\\"fas fa-arrow-left\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary mt-4\\\" (click)=\\\"setupJob(stepper);\\\"  type=\\\"submit\\\">Next <i class=\\\"fas fa-arrow-right\\\"></i></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t\\t   <mat-step>\\r\\n\\t\\t\\t\\t  <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"step1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h1 class=\\\"step-title\\\">Updated!</h1> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-header text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-check\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Thank You</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<br> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h2>Job has been Updated Successfully</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t  </mat-step>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</mat-horizontal-stepper>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> \"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JobService } from '../../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormArray,FormControl} from '@angular/forms';\r\nimport {FormsModule} from '@angular/forms';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'editjob.component.html',\r\n   styleUrls : [ './editjob.component.css' ]\r\n \r\n})\r\nexport class EditJobComponent implements OnInit{\r\n\t\r\n\r\n\ttitle = 'SignUp';\r\n\tresult:any = '';\r\n\tresponse :any=\"\";\r\n\tstates:any = '';\r\n\tuser:any =\"\"; \r\n\tcounties:any = '';counties1:any = '';counties2:any = '';\r\n\troles:any = '';\r\n\tcities:any = '';cities1:any = '';cities2:any = '';\r\n\tangForm: FormGroup;\r\n\tangOptionsForm: FormGroup;\r\n\tangPackedOptionsForm: FormGroup;\r\n\tangLoadingOptionsForm: FormGroup;\r\n\tangUnloadingOptionsForm: FormGroup;\r\n\tangunPackedOptionsForm: FormGroup;\r\n\t\r\n\t\r\n\tfirst_show = false;\r\n\tshow = false;\r\n\tstateName = '';\r\n\tstatename = '';countyName = '';\r\n\t\r\n\tsubmitted = false;jobid = '';\r\n\t\r\n\tsubmitted_1_2 = false;submitted_2 = false;submitted_4 = false;submitted_3 = false;submitted_5 = false;submitted_6 = false;submitted_7 = false;submitted_8 = false;submitted_9 = false;submitted_10 = false;submitted_11 = false;submitted_12 = false;submitted_13 = false;submitted_14 = false;\r\n\tfirst_submitted = false;\r\n\r\n\tisLinear = false;\r\n\tshow_dialog : boolean = false;\r\n\tbutton_text:any='';\r\n\t\r\n\tfirstFormGroup: FormGroup;secondFormGroup: FormGroup;thirdFormGroup: FormGroup;FourthFormGroup: FormGroup;\r\n\tFifthFormGroup: FormGroup;sixthFormGroup: FormGroup;seventhFormGroup: FormGroup;eigthFormGroup: FormGroup;ninthFormGroup: FormGroup;\r\n\ttenthFormGroup: FormGroup;eleventhFormGroup: FormGroup;tweleveFormGroup: FormGroup;\r\n\tthirteenFormGroup: FormGroup;\r\n\tfourteenFormGroup: FormGroup;\r\n\t\r\n\tsecondpackedFormGroup: FormGroup;thirdpackedFormGroup: FormGroup;fourthpackedFormGroup: FormGroup;FifthpackedFormGroup: FormGroup; sixthpackedFormGroup: FormGroup; seventhpackedFormGroup: FormGroup; eigthpackedFormGroup: FormGroup;ninthpackedFormGroup: FormGroup;tenthpackedFormGroup: FormGroup; eleventhpackedFormGroup: FormGroup; twelevepackedFormGroup: FormGroup; thirteenpackedFormGroup: FormGroup;fourteenpackedFormGroup: FormGroup;\r\n\r\n\tsecondunpackedFormGroup: FormGroup;thirdunpackedFormGroup: FormGroup;fourthunpackedFormGroup: FormGroup;FifthunpackedFormGroup: FormGroup; sixthunpackedFormGroup: FormGroup; seventhunpackedFormGroup: FormGroup; eigthunpackedFormGroup: FormGroup;ninthunpackedFormGroup: FormGroup;tenthunpackedFormGroup: FormGroup; eleventhunpackedFormGroup: FormGroup; tweleveunpackedFormGroup: FormGroup; thirteenunpackedFormGroup: FormGroup;fourteenunpackedFormGroup: FormGroup;\r\n\t\r\n\tsecondloadingFormGroup: FormGroup;thirdloadingFormGroup: FormGroup;FourthloadingFormGroup: FormGroup;FifthloadingFormGroup: FormGroup; sixthloadingFormGroup: FormGroup; seventhloadingFormGroup: FormGroup; eigthloadingFormGroup: FormGroup;ninthloadingFormGroup: FormGroup;tenthloadingFormGroup: FormGroup; eleventhloadingFormGroup: FormGroup; tweleveloadingFormGroup: FormGroup; thirteenloadingFormGroup: FormGroup;fourteenloadingFormGroup: FormGroup;\r\n\t\r\n\tsecondunloadingFormGroup: FormGroup;thirdunloadingFormGroup: FormGroup;fourthunloadingFormGroup: FormGroup;FifthunloadingFormGroup: FormGroup; sixthunloadingFormGroup: FormGroup; seventhunloadingFormGroup: FormGroup; eigthunloadingFormGroup: FormGroup;ninthunloadingFormGroup: FormGroup;tenthunloadingFormGroup: FormGroup; eleventhunloadingFormGroup: FormGroup; tweleveunloadingFormGroup: FormGroup; thirteenunloadingFormGroup: FormGroup;fourteenunloadingFormGroup: FormGroup;\r\n\t\r\n\t\r\n\tshowMoving=false;\r\n\tshowPacking=false;\r\n\tshowUnPacking=false;\r\n\tshowLoading=false;\r\n\tshowUnLoading=false;\r\n\t\r\n\tshowBedrooms=false;\r\n\tshowLivingRooms=false;\r\n\tshowFamilyRooms=false;\r\n\tshowDiningRooms=false;\r\n\tshowKitchen=false;\r\n\tshowBasement=false;\r\n\tshowGarage=false;\r\n\tshowPatiyoYards=false;\r\n\tshowOffices=false;\r\n\tshowOversized=false;\r\n\tshowAppliances=false;\r\n\t\r\n\tshowPackingAppliances=false;\r\n\tshowPackingBedrooms=false;\r\n\tshowPackingLivingRooms=false;\r\n\tshowPackingFamilyRooms=false;\r\n\tshowPackingDiningRooms=false;\r\n\tshowPackingKitchen=false;\r\n\tshowPackingBasement=false;\r\n\tshowPackingGarage=false;\r\n\tshowPackingPatiyoYards=false;\r\n\tshowPackingOffices=false;\r\n\tshowPackingOversized=false;\r\n\t\r\n\tshowLoadingAppliances=false;\r\n\tshowLoadingBedrooms=false;\r\n\tshowLoadingLivingRooms=false;\r\n\tshowLoadingFamilyRooms=false;\r\n\tshowLoadingDiningRooms=false;\r\n\tshowLoadingKitchen=false;\r\n\tshowLoadingBasement=false;\r\n\tshowLoadingGarage=false;\r\n\tshowLoadingPatiyoYards=false;\r\n\tshowLoadingOffices=false;\r\n\tshowLoadingOversized=false;\r\n\t\r\n\tshowUnloadingAppliances=false;\r\n\tshowUnloadingBedrooms=false;\r\n\tshowUnloadingLivingRooms=false;\r\n\tshowUnloadingFamilyRooms=false;\r\n\tshowUnloadingDiningRooms=false;\r\n\tshowUnloadingKitchen=false;\r\n\tshowUnloadingBasement=false;\r\n\tshowUnloadingGarage=false;\r\n\tshowUnloadingPatiyoYards=false;\r\n\tshowUnloadingOffices=false;\r\n\tshowUnloadingOversized=false;\r\n\t\r\n\tshowUnpackingAppliances=false;\r\n\tshowUnpackingBedrooms=false;\r\n\tshowUnpackingLivingRooms=false;\r\n\tshowUnpackingFamilyRooms=false;\r\n\tshowUnpackingDiningRooms=false;\r\n\tshowUnpackingKitchen=false;\r\n\tshowUnpackingBasement=false;\r\n\tshowUnpackingGarage=false;\r\n\tshowUnpackingPatiyoYards=false;\r\n\tshowUnpackingOffices=false;\r\n\tshowUnpackingOversized=false;\r\n\t\r\n\tmovingData:any='';packingData:any='';unpackingData:any='';loadingData:any='';unloadingData:any='';\r\n\twhichFromGroup:any='';nextFromGroup:any='';formtype:FormGroup;\r\n\t\r\n\t\r\n\ttopHeading ='';\tshowThis:any ='';mindateset:any='';minDate2:any='';setmindate:any='';minDate:any='';appliances:any='';basements:any='';\r\n\tdiningrooms:any='';bedrooms:any='';familyrooms:any='';garages:any='';kitchens:any='';livingrooms:any='';patioyards:any='';\r\n\titemRows:any='';allappliances:any='';final_submit:any='';job_basic_info_final:any='';jobservices:any='';firstService:any='';secondService:any='';thirdService:any='';jobData:any='';\r\n\tapppli:any=\"\";beds:any=\"\";dining:any=\"\";family:any=\"\";base:any=\"\";garge:any=\"\";kitch:any=\"\";living:any=\"\";patio:any=\"\";\r\n\tthisisdone:any=\"\";alllocations:any=\"\";\r\n\tcurrentIndex:any=\"\";totalIndex:any=\"\";\r\n\t\r\n\tbedroomsPack:any=\"\";kitchensPack:any=\"\";diningRoomsPack:any=\"\";basementPack:any=\"\";garagePack:any=\"\";shedPack:any=\"\";officePack:any=\"\";\r\n\tbedroomsPack_misc:any=\"\";kitchensPack_misc:any=\"\";diningRoomsPack_misc:any=\"\";basementPack_misc:any=\"\";garagePack_misc:any=\"\";shedPack_misc:any=\"\";officePack_misc:any=\"\";\r\n\t\r\n\tserviceFormArray:any = '';\r\n\tserviceNameArray:any = '';\r\n\tmyGroup:any='';myGroup3:any='';\r\n\tselectedServices:any='';\r\n\t\r\n\tsubmitted_unloading:any='';\r\n\tsubmitted_loading:any='';\r\n\tsubmitted_unpacking:any='';\r\n\tsubmitted_packing:any='';\r\n\tsubmitted_moving:any='';\r\n\tshowErrorMessage1 = false;showErrorMessage2 = false;showErrorMessage3 = false;showErrorMessage4 = false;showErrorMessage5 = false;\r\n\t\r\n\tapppli_unloading:any=\"\";\r\n\tbeds_unloading:any=\"\";\r\n\tbase_unloading:any=\"\";\r\n\tdining_unloading:any=\"\";\r\n\tfamily_unloading:any=\"\";\r\n\tgarge_unloading:any=\"\";\r\n\tkitch_unloading:any=\"\";\r\n\tliving_unloading:any=\"\";\r\n\tpatio_unloading:any=\"\";\r\n\t\r\n\t\r\n\tapppli_loading:any=\"\";\r\n\tbeds_loading:any=\"\";\r\n\tbase_loading:any=\"\";\r\n\tdining_loading:any=\"\";\r\n\tfamily_loading:any=\"\";\r\n\tgarge_loading:any=\"\";\r\n\tkitch_loading:any=\"\";\r\n\tliving_loading:any=\"\";\r\n\tpatio_loading:any=\"\";\r\n\t\r\n\t\r\n\tapppli_unpacking:any=\"\";\r\n\tbeds_unpacking:any=\"\";\r\n\tbase_unpacking:any=\"\";\r\n\tdining_unpacking:any=\"\";\r\n\tfamily_unpacking:any=\"\";\r\n\tgarge_unpacking:any=\"\";\r\n\tkitch_unpacking:any=\"\";\r\n\tliving_unpacking:any=\"\";\r\n\tpatio_unpacking:any=\"\";\r\n\t\r\n\tapppli_packing:any=\"\";\r\n\tbeds_packing:any=\"\";\r\n\tbase_packing:any=\"\";\r\n\tdining_packing:any=\"\";\r\n\tfamily_packing:any=\"\";\r\n\tgarge_packing:any=\"\";\r\n\tkitch_packing:any=\"\";\r\n\tliving_packing:any=\"\";\r\n\tpatio_packing:any=\"\";\r\n\t\r\n\t\r\n\tapppli_moving:any=\"\";\r\n\tbeds_moving:any=\"\";\r\n\tbase_moving:any=\"\";\r\n\tdining_moving:any=\"\";\r\n\tfamily_moving:any=\"\";\r\n\tgarge_moving:any=\"\";\r\n\tkitch_moving:any=\"\";\r\n\tliving_moving:any=\"\";\r\n\tpatio_moving:any=\"\";\r\n\t\r\n\toptionsData = [\r\n\t\t{ id: 1, name: 'Appliances (includes Washing machine, Dryer, refrigerator, Freezer, Stove, Dishwasher..etc)' },\r\n\t\t{ id: 2, name: 'Bedrooms' },\r\n\t\t{ id: 3, name: 'Living Room' },\r\n\t\t{ id: 4, name: 'Family Room Services' },\r\n\t\t{ id: 5, name: 'Dining Room' },\r\n\t\t{ id: 6, name: 'Kitchen' },\r\n\t\t{ id: 7, name: 'Basement' },\r\n\t\t{ id: 8, name: 'Garage' },\r\n\t\t{ id: 9, name: 'Patio/Yard items' },\r\n\t\t{ id: 10, name: 'Office' },\r\n\t\t{ id: 11, name: 'Oversized items/other (Piano, Safe Machinery, Exercise equipment..etc)' },\r\n\t\t\r\n\t  ];\r\n\t  \r\n\t optionsPackedData = [\r\n\t\t{ id: 12, name: 'Appliances (includes Washing machine, Dryer, refrigerator, Freezer, Stove, Dishwasher..etc)' },\r\n\t\t{ id: 13, name: 'Bedrooms' },\r\n\t\t{ id: 14, name: 'Living Room' },\r\n\t\t{ id: 15, name: 'Family Room Services' },\r\n\t\t{ id: 16, name: 'Dining Room' },\r\n\t\t{ id: 17, name: 'Kitchen' },\r\n\t\t{ id: 18, name: 'Basement' },\r\n\t\t{ id: 19, name: 'Garage' },\r\n\t\t{ id: 20, name: 'Patio/Yard items' },\r\n\t\t{ id: 21, name: 'Office' },\r\n\t\t{ id: 22, name: 'Oversized items/other (Piano, Safe Machinery, Exercise equipment..etc)' },\r\n\t\t\r\n\t  ];\r\n\tMOVING_ID = '5c544a8515f5bb0c908b3014';\r\n\tPACKING_ID = '5c544a9315f5bb0c908b3015';\r\n\tUNPACKING_ID = '5c544aa115f5bb0c908b3016';\r\n\tLOADING_ID = '5e96e418ddfd4f5624b0a404';\r\n\tUNLOADING_ID = '5e96e428ddfd4f5624b0a405';\r\n\t  \r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private router: Router,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title) {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tthis.createForm();\r\n\t\tthis.getServices();\r\n\t\tthis.addCheckboxes();\r\n\t\tthis.addServicesCheckboxes();\r\n\t\tthis.addPackedCheckboxes();\r\n\t\t\r\n\t\tthis.addUnPackedCheckboxes();\r\n\t\tthis.addLoadingCheckboxes();\r\n\t\tthis.addUnLoadingCheckboxes();\r\n\t\t\r\n\t\tthis.titleService.setTitle( 'Edit jobs | MoveLaunch' );\r\n\t\r\n\t}\r\n\t\r\n\tprivate addServicesCheckboxes() {\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t\tthis.jobservices.forEach((o, i) => {\r\n\t\t\t\tconst control = new FormControl(); // if first item set to true, else false\r\n\t\t\t  (this.angForm.controls.services as FormArray).push(control);\r\n\t\t\t});\r\n\t\t}); \r\n\t\t\r\n\t}\r\n\t\r\n\tprivate addCheckboxes() {\r\n\t\tthis.optionsData.forEach((o, i) => {\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angOptionsForm.controls.options as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n\tprivate addPackedCheckboxes() {\r\n\t\tthis.optionsPackedData.forEach((o, i) => {\r\n\t\t\t\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angPackedOptionsForm.controls.packingoptions as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n\tprivate addUnPackedCheckboxes() {\r\n\t\tthis.optionsPackedData.forEach((o, i) => {\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angunPackedOptionsForm.controls.packingoptions as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n\tprivate addLoadingCheckboxes() {\r\n\t\tthis.optionsPackedData.forEach((o, i) => {\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angLoadingOptionsForm.controls.packingoptions as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n\tprivate addUnLoadingCheckboxes() {\r\n\t\tthis.optionsPackedData.forEach((o, i) => {\r\n\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t  (this.angUnloadingOptionsForm.controls.packingoptions as FormArray).push(control);\r\n\t\t});\r\n\t}\r\n    /* Signup Form validation */ \r\n\tcreateForm() {\r\n\t   \r\n\t\tthis.getSate();\r\n\t\t\r\n\t\tthis.firstFormGroup = this.fb.group({\r\n\t\t\tfirstname: ['', Validators.required ],\r\n\t\t\tlastname: ['', Validators.required ],\r\n\t\t\tstate: ['', Validators.required ],\r\n\t\t\tcounty: ['', Validators.required ],\r\n\t\t\tcity: ['', Validators.required ],\r\n\t\t\tzipcode: ['', Validators.required ],\r\n\t\t\tphone: ['', Validators.compose([Validators.required,Validators.pattern('^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')])],\r\n\t\t\taddress: ['', Validators.required ],\r\n\t\t\tjob_start_date: ['', Validators.required ]\r\n\t\t}); \r\n\t\t\r\n\t\tthis.angForm = this.fb.group({\r\n\t\t\tservices:  this.fb.array([]),\r\n\t\t\tjobtype: new FormControl('new')\r\n\t\t}); \r\n\t\t\r\n\t\tthis.angOptionsForm = this.fb.group({\r\n\t\t\toptions:  this.fb.array([]),\r\n\t\t\tjob_start_date: ['', Validators.required ]\r\n\t\t}); \r\n\t\t\r\n\t\tthis.secondFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirdFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.FourthFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t\tappliance_assembly:['']\r\n\t\t});\r\n\t\tthis.FifthFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t\tbedrooms_assembly:['']\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t\tlivingRooms_assembly:['']\r\n\t\t});\r\n\t\tthis.seventhFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t\tfamilyRooms_assembly:['']\r\n\t\t});\r\n\t\tthis.eigthFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t\tdiningRooms_assembly:['']\r\n\t\t});\r\n\t\tthis.ninthFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t\tkitchen_assembly:['']\r\n\t\t});\r\n\t\tthis.tenthFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t\tbasement_assembly:['']\r\n\t\t});\r\n\t\tthis.eleventhFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t\tgarage_assembly:['']\r\n\t\t});\r\n\t\tthis.tweleveFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\tpatioyards_assembly:['']\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\tpatioyards_assembly:['']\r\n\t\t});\r\n\t\tthis.fourteenFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\tpatioyards_assembly:['']\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\tthis.angPackedOptionsForm = this.fb.group({\r\n\t\t\tpackingoptions:  this.fb.array([]),\r\n\t\t\tjob_start_date_packing: ['', Validators.required ]\r\n\t\t}); \r\n\t\tthis.secondpackedFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\tthis.thirdpackedFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.fourthpackedFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t});\r\n\t\tthis.FifthpackedFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthpackedFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.seventhpackedFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eigthpackedFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.ninthpackedFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tenthpackedFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eleventhpackedFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t});\r\n\t\tthis.twelevepackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.fourteenpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tthis.angunPackedOptionsForm = this.fb.group({\r\n\t\t\tpackingoptions:  this.fb.array([]),\r\n\t\t\tjob_start_date_unpacking: ['', Validators.required ]\r\n\t\t}); \r\n\t\tthis.secondunpackedFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\tthis.thirdunpackedFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.fourthunpackedFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t});\r\n\t\tthis.FifthunpackedFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthunpackedFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.seventhunpackedFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eigthunpackedFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.ninthunpackedFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tenthunpackedFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eleventhunpackedFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tweleveunpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenunpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.fourteenunpackedFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.angUnloadingOptionsForm = this.fb.group({\r\n\t\t\tpackingoptions:  this.fb.array([]),\r\n\t\t\tjob_start_date_unloading: ['', Validators.required ]\r\n\t\t}); \r\n\t\tthis.secondunloadingFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\tthis.thirdunloadingFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.fourthunloadingFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t});\r\n\t\tthis.FifthunloadingFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthunloadingFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.seventhunloadingFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eigthunloadingFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.ninthunloadingFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tenthunloadingFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eleventhunloadingFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tweleveunloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenunloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.fourteenunloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.angLoadingOptionsForm = this.fb.group({\r\n\t\t\tpackingoptions:  this.fb.array([]),\r\n\t\t\tjob_start_date_loading: ['', Validators.required ]\r\n\t\t}); \r\n\t\tthis.secondloadingFormGroup = this.fb.group({\r\n\t\t\t itemRows: this.fb.array([])\r\n\t\t});\r\n\t\tthis.thirdloadingFormGroup = this.fb.group({\r\n\t\t\t// itemRowsTo: this.fb.array([this.initItemRowsTo()])\r\n\t\t\titemRowsTo: this.fb.array([])\r\n\t\t}); \r\n\t\tthis.FourthloadingFormGroup = this.fb.group({\r\n\t\t\tallappliances: new FormArray([]),\r\n\t\t\tappliance_misc: ['' ],\r\n\t\t});\r\n\t\tthis.FifthloadingFormGroup = this.fb.group({\r\n\t\t\tbedrooms: new FormArray([]),\r\n\t\t\tbedrooms_misc: [''],\r\n\t\t});\r\n\t\t\r\n\t\tthis.sixthloadingFormGroup = this.fb.group({\r\n\t\t\tlivingrooms:new FormArray([]),\r\n\t\t\tlivingRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.seventhloadingFormGroup = this.fb.group({\r\n\t\t\tfamilyrooms: new FormArray([]),\r\n\t\t\tfamilyRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eigthloadingFormGroup = this.fb.group({\r\n\t\t\tdiningrooms: new FormArray([]),\r\n\t\t\tdininRooms_misc: ['' ],\r\n\t\t});\r\n\t\tthis.ninthloadingFormGroup = this.fb.group({\r\n\t\t\tkitchens: new FormArray([]),\r\n\t\t\tkitchen_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tenthloadingFormGroup = this.fb.group({\r\n\t\t\tbasements: new FormArray([]),\r\n\t\t\tbasement_misc: ['' ],\r\n\t\t});\r\n\t\tthis.eleventhloadingFormGroup = this.fb.group({\r\n\t\t\tgarages:new FormArray([]),\r\n\t\t\tgarage_misc: ['' ],\r\n\t\t});\r\n\t\tthis.tweleveloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t});\r\n\t\t\r\n\t\tthis.thirteenloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.fourteenloadingFormGroup = this.fb.group({\r\n\t\t\tpatioyards: new FormArray([]),\r\n\t\t\tpatioYard_misc: ['' ],\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\ttoggleMovingFrom(event,number,row) {\r\n\t\tif(event.target.value == 'house'){\r\n\t\t\trow.controls.moving_from_floor.disable(); \r\n\t\t}else{\r\n\t\t\trow.controls.moving_from_floor.enable(); \r\n\t\t\t\r\n\t\t}\t\r\n\t}\r\n\ttoggleMovingTo(event,number,row) {\r\n\t\tif(event.target.value == 'house'){\r\n\t\t\trow.controls.moving_to_floor.disable(); \r\n\t\t}else{\r\n\t\t\trow.controls.moving_to_floor.enable(); \r\n\t\t\t\r\n\t\t}\t\r\n\t}\r\n\t\r\n\tsetLocations(myFormGroup,savedDataToLocation) {\r\n\t\tthis.myGroup = myFormGroup;\r\n\t\tconsole.log('setLocations'+localStorage.getItem('jobType'));\r\n\t\t\r\n\t\tif(localStorage.getItem('jobType') == 'saved'){\r\n\t\t\t\r\n\t\t\t let control = <FormArray>this.myGroup.controls.itemRows;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(savedDataToLocation && savedDataToLocation.moving_from.length > 0){\r\n\t\t\t\t\t\tthis.alllocations = savedDataToLocation.moving_from;\r\n\t\t\t\r\n\t\t\t\t\t\tthis.alllocations.forEach(x => {\r\n\t\t\t\t\t\t\tthis.userservice.getCounties(x.state).subscribe(result => {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.counties1 = result;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.userservice.getCities(x.county,x.state).subscribe(result => {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.cities1 = result;\r\n\t\t\t\t\t\t\t}); \r\n\t\t\t\t\t\t  control.push(this.fb.group({ \r\n\t\t\t\t\t\t\tmoving_from: x.movingType, \r\n\t\t\t\t\t\t\tmoving_from_floor: x.floor, \r\n\t\t\t\t\t\t\tmoving_from_state: x.state, \r\n\t\t\t\t\t\t\tmoving_from_county: x.county, \r\n\t\t\t\t\t\t\tmoving_from_city: x.city, \r\n\t\t\t\t\t\t\tmoving_from_zipcode:  x.zipcode,  \r\n\t\t\t\t\t\t\tmoving_from_address: x.address1,  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcontrol.push(this.fb.group({ \r\n\t\t\t\t\t\t\tmoving_from: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_floor: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_state: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_county: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_city: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_zipcode: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_from_address: ['', Validators.required ] \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\r\n\t\t\t \r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tlet control = <FormArray>this.myGroup.controls.itemRows;\r\n\t\t\tcontrol.push(this.fb.group({ \r\n\t\t\t\tmoving_from: ['', Validators.required ],\r\n\t\t\t\tmoving_from_floor: ['', Validators.required ],\r\n\t\t\t\tmoving_from_state: ['', Validators.required ],\r\n\t\t\t\tmoving_from_county: ['', Validators.required ],\r\n\t\t\t\tmoving_from_city: ['', Validators.required ],\r\n\t\t\t\tmoving_from_zipcode: ['', Validators.required ],\r\n\t\t\t\tmoving_from_address: ['', Validators.required ] \r\n\t\t\t\t\r\n\t\t\t}))\r\n\t\t\t\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tinitItemRows() {\r\n\t\t\t\t  \r\n\t \treturn this.fb.group({\r\n\t\t\tmoving_from: ['', Validators.required ],\r\n\t\t\tmoving_from_floor: ['', Validators.required ],\r\n\t\t \tmoving_from_state: ['', Validators.required ],\r\n\t\t\tmoving_from_county: ['', Validators.required ],\r\n\t\t\tmoving_from_city: ['', Validators.required ],\r\n\t\t\tmoving_from_zipcode: ['', Validators.required ],\r\n\t\t\tmoving_from_address: ['', Validators.required ] \r\n\t\t}); \r\n\t}\r\n\tget formArr() {\r\n\t\treturn this.myGroup.get('itemRows') as FormArray;\r\n\t}\r\n\taddNewRow() {\r\n\t\tthis.formArr.push(this.initItemRows());\r\n\t}\r\n\t\r\n\tdeleteRow(index: number) {\r\n\t\tthis.formArr.removeAt(index);\r\n\t} \r\n\t\r\n\tsetToLocations(myFormGroup3,savedDataToLocation) {\r\n\t\tthis.myGroup3 = myFormGroup3;\r\n\t\tconsole.log('setToLocations'+localStorage.getItem('jobType'));\r\n\t\tif(localStorage.getItem('jobType') == 'saved'){\r\n\t\t\t let control = <FormArray>this.myGroup3.controls.itemRowsTo;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tif(savedDataToLocation && savedDataToLocation.moving_to.length > 0){\r\n\t\t\t\t\t\tthis.alllocations = savedDataToLocation.moving_to;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.alllocations.forEach(x => {\r\n\t\t\t\t\t\t\tthis.userservice.getCounties(x.state).subscribe(result => {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.counties2 = result;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthis.userservice.getCities(x.county,x.state).subscribe(result => {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.cities2 = result;\r\n\t\t\t\t\t\t\t}); \r\n\t\t\t\t\t\t  control.push(this.fb.group({ \r\n\t\t\t\t\t\t\tmoving_to: x.movingType, \r\n\t\t\t\t\t\t\tmoving_to_floor: x.floor, \r\n\t\t\t\t\t\t\tmoving_to_state: x.state, \r\n\t\t\t\t\t\t\tmoving_to_county: x.county, \r\n\t\t\t\t\t\t\tmoving_to_city: x.city, \r\n\t\t\t\t\t\t\tmoving_to_zipcode:  x.zipcode, \r\n\t\t\t\t\t\t\tmoving_to_address: x.address1,  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcontrol.push(this.fb.group({ \r\n\t\t\t\t\t\t\tmoving_to: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_floor: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_state: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_county: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_city: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_zipcode: ['', Validators.required ],\r\n\t\t\t\t\t\t\tmoving_to_address: ['', Validators.required ]\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tlet control = <FormArray>this.myGroup3.controls.itemRowsTo;\r\n\t\t\tcontrol.push(this.fb.group({ \r\n\t\t\t\tmoving_to: ['', Validators.required ],\r\n\t\t\t\tmoving_to_floor: ['', Validators.required ],\r\n\t\t\t\tmoving_to_state: ['', Validators.required ],\r\n\t\t\t\tmoving_to_county: ['', Validators.required ],\r\n\t\t\t\tmoving_to_city: ['', Validators.required ],\r\n\t\t\t\tmoving_to_zipcode: ['', Validators.required ],\r\n\t\t\t\tmoving_to_address: ['', Validators.required ]\r\n\t\t\t\t\r\n\t\t\t}))\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t}\r\n\r\n\tinitItemRowsTo() {\r\n\t\t\r\n\t\treturn this.fb.group({\r\n\t\t\tmoving_to: ['', Validators.required ],\r\n\t\t\tmoving_to_floor: ['', Validators.required ],\r\n\t\t\tmoving_to_state: ['', Validators.required ],\r\n\t\t\tmoving_to_county: ['', Validators.required ],\r\n\t\t\tmoving_to_city: ['', Validators.required ],\r\n\t\t\tmoving_to_zipcode: ['', Validators.required ],\r\n\t\t\tmoving_to_address: ['', Validators.required ]\r\n\t\t});\r\n\t}\r\n\t\r\n\tget formArrTo() {\r\n\t\treturn this.myGroup3.get('itemRowsTo') as FormArray;\r\n\t}\r\n\taddNewRowTo() {\r\n\t\tthis.formArrTo.push(this.initItemRowsTo());\r\n\t}\r\n\tdeleteRowTo(index: number) {\r\n\t\tthis.formArrTo.removeAt(index);\r\n\t} \r\n\t\r\n\t\r\n\taddDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\tvar setApp = [];\r\n\t\r\n\t   \tthis.jobservice.getAppliances(serviceId).subscribe(result => {\r\n\t\t\tthis.apppli_moving = '';\r\n\t\t\tthis.formtype = formtype;\r\n\t\t\tthis.formtype.reset({});\r\n\t\t\tthis.formtype.setControl('allappliances', this.fb.array([]));\r\n\t\t\tthis.allappliances = result;\r\n\t\t\tthis.allappliances.map((o, i) => {\r\n\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t(this.formtype.controls.allappliances as FormArray).push(control);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(saved_data && saved_data.appliances && saved_data.appliances.length > 0){\r\n\t\t\t\tfor(var i=0;i<this.allappliances.length;i++ ){\r\n\t\t\t\t\tsetApp.push('null');\r\n\t\t\t\t\tvar jobdata = saved_data.appliances;\r\n\t\t\t\t\tvar _id = this.allappliances[i]._id;\r\n\t\t\t\t\t$.each(jobdata,function(index,value){\r\n\t\t\t\t\t\tif(value.applianceItem._id == _id){\r\n\t\t\t\t\t\t\tvar item = value.items+'_'+value.applianceItem._id;\r\n\t\t\t\t\t\t\tsetApp[i] = item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});  \t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tfor(var i=0;i<this.allappliances.length;i++ ){\r\n\t\t\t\t\tsetApp.push('null');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\tthis.apppli_moving = setApp;\r\n\t\t\t}\r\n\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\tthis.apppli_packing = setApp;\r\n\t\t\t}\r\n\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\tthis.apppli_unpacking = setApp;\r\n\t\t\t}\r\n\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\tthis.apppli_loading = setApp;\r\n\t\t\t}\r\n\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\tthis.apppli_unloading = setApp;\r\n\t\t\t}\r\n\t\t\r\n\t\t\t\r\n\t\t}); \r\n\t\t\r\n\t}\r\n\t\r\n   /*--------------------------------------------- Fourth Group Elements ----------------------- */\r\n   \r\n\t/*--------------------------------------------- Fifth Group Elements ----------------------- */\r\n\t   addBedDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp1 = [];\r\n\t\t\r\n\t\t  this.jobservice.getBedrooms(serviceId).subscribe(result => {\r\n\t\t\t\tthis.bedrooms = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('bedrooms', this.fb.array([]));\r\n\t\t\t\tthis.bedrooms.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.bedrooms as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.bedRooms && saved_data.bedRooms.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.bedrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp1.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.bedRooms;\r\n\t\t\t\t\t\tvar _id = this.bedrooms[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.bedRoomsItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.bedRoomsItem._id;\r\n\t\t\t\t\t\t\t\tsetApp1[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.bedrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp1.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.beds_moving = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.beds_packing = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.beds_unpacking = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.beds_loading = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.beds_unloading = setApp1;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\t\r\n\t\t\r\n\taddkitchenDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp6 = [];\r\n\t\t\r\n\t\t  this.jobservice.getKitchen(serviceId).subscribe(result => {\r\n\t\t\t\tthis.kitchens = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('kitchens', this.fb.array([]));\r\n\t\t\t\tthis.kitchens.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.kitchens as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.kitchen && saved_data.kitchen.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.kitchens.length;i++ ){\r\n\t\t\t\t\t\tsetApp6.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.kitchen;\r\n\t\t\t\t\t\tvar _id = this.kitchens[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.kitchenItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.kitchenItem._id;\r\n\t\t\t\t\t\t\t\tsetApp6[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.kitchens.length;i++ ){\r\n\t\t\t\t\t\tsetApp6.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.kitch_moving = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.kitch_packing = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.kitch_unpacking = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.kitch_loading = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.kitch_unloading = setApp6;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\r\n\t/*--------------------------------------------- Fifth Group Elements ----------------------- */\r\n\t\r\n\taddDiningDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp3 = [];\r\n\t\t\r\n\t\t  this.jobservice.getDiningrooms(serviceId).subscribe(result => {\r\n\t\t\t\tthis.diningrooms = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('diningrooms', this.fb.array([]));\r\n\t\t\t\tthis.diningrooms.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.diningrooms as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.diningRooms && saved_data.diningRooms.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.diningrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp3.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.diningRooms;\r\n\t\t\t\t\t\tvar _id = this.diningrooms[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.diningRoomsItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.diningRoomsItem._id;\r\n\t\t\t\t\t\t\t\tsetApp3[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.diningrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp3.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.dining_moving = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.dining_packing = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.dining_unpacking = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.dining_loading = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.dining_unloading = setApp3;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\r\n\t addLivingDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp7 = [];\r\n\t\t\r\n\t\t  this.jobservice.getLivingrooms(serviceId).subscribe(result => {\r\n\t\t\t\tthis.livingrooms = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('livingrooms', this.fb.array([]));\r\n\t\t\t\tthis.livingrooms.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.livingrooms as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.livingRooms && saved_data.livingRooms.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.livingrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp7.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.livingRooms;\r\n\t\t\t\t\t\tvar _id = this.livingrooms[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.livingRoomsItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.livingRoomsItem._id;\r\n\t\t\t\t\t\t\t\tsetApp7[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.livingrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp7.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.living_moving = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.living_packing = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.living_unpacking = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.living_loading = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.living_unloading = setApp7;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   } \r\n\taddFamilyDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp4 = [];\r\n\t\t\r\n\t\t  this.jobservice.getFamilyrooms(serviceId).subscribe(result => {\r\n\t\t\t\tthis.familyrooms = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('familyrooms', this.fb.array([]));\r\n\t\t\t\tthis.familyrooms.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.familyrooms as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.familyRooms && saved_data.familyRooms.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.familyrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp4.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.familyRooms;\r\n\t\t\t\t\t\tvar _id = this.familyrooms[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.familyRoomsItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.familyRoomsItem._id;\r\n\t\t\t\t\t\t\t\tsetApp4[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.familyrooms.length;i++ ){\r\n\t\t\t\t\t\tsetApp4.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.family_moving = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.family_packing = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.family_unpacking = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.family_loading = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.family_unloading = setApp4;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\r\n\t\r\n\t addBasementDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp2 = [];\r\n\t\t\r\n\t\t  this.jobservice.getBasement(serviceId).subscribe(result => {\r\n\t\t\t\tthis.basements = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('basements', this.fb.array([]));\r\n\t\t\t\tthis.basements.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.basements as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.basement && saved_data.basement.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.basements.length;i++ ){\r\n\t\t\t\t\t\tsetApp2.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.basement;\r\n\t\t\t\t\t\tvar _id = this.basements[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.basementItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.basementItem._id;\r\n\t\t\t\t\t\t\t\tsetApp2[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.basements.length;i++ ){\r\n\t\t\t\t\t\tsetApp2.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.base_moving = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.base_packing = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.base_unpacking = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.base_loading = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.base_unloading = setApp2;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   }\r\n\t addGaragesDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp5 = [];\r\n\t\t\r\n\t\t  this.jobservice.getGarages(serviceId).subscribe(result => {\r\n\t\t\t\tthis.garages = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('garages', this.fb.array([]));\r\n\t\t\t\tthis.garages.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.garages as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.garage && saved_data.garage.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.garages.length;i++ ){\r\n\t\t\t\t\t\tsetApp5.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.garage;\r\n\t\t\t\t\t\tvar _id = this.garages[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.garageItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.garageItem._id;\r\n\t\t\t\t\t\t\t\tsetApp5[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.garages.length;i++ ){\r\n\t\t\t\t\t\tsetApp5.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.garge_moving = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.garge_packing = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.garge_unpacking = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.garge_loading = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.garge_unloading = setApp5;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   } \r\n\taddPatioyardDropDowns(serviceId,formtype,ser_type,saved_data) {\r\n\t\t   let setApp8 = [];\r\n\t\t\r\n\t\t  this.jobservice.getPatioyard(serviceId).subscribe(result => {\r\n\t\t\t\tthis.patioyards = result;\r\n\t\t\t\tthis.formtype = formtype;\r\n\t\t\t\tthis.formtype.setControl('patioyards', this.fb.array([]));\r\n\t\t\t\tthis.patioyards.map((o, i) => {\r\n\t\t\t\t\tconst control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t\t\t(this.formtype.controls.patioyards as FormArray).push(control);\r\n\t\t\t\t});\r\n\t\t\t\tif(saved_data && saved_data.patioYard && saved_data.patioYard.length > 0){\r\n\t\t\t\t\tfor(var i=0;i<this.patioyards.length;i++ ){\r\n\t\t\t\t\t\tsetApp8.push('null');\r\n\t\t\t\t\t\tvar jobdata1 = saved_data.patioYard;\r\n\t\t\t\t\t\tvar _id = this.patioyards[i]._id;\r\n\t\t\t\t\t\t$.each(jobdata1,function(index,value){\r\n\t\t\t\t\t\t\tif(value.patioYardItem._id == _id){\r\n\t\t\t\t\t\t\t\tvar item1 = value.items+'_'+value.patioYardItem._id;\r\n\t\t\t\t\t\t\t\tsetApp8[i] = item1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});  \t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(var i=0;i<this.patioyards.length;i++ ){\r\n\t\t\t\t\t\tsetApp8.push('null');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//this.beds = default1val;\r\n\t\t\t\tif(ser_type == 'moving'){\r\n\t\t\t\t\tthis.patio_moving = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'packing'){\r\n\t\t\t\t\tthis.patio_packing = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unpacking'){\r\n\t\t\t\t\tthis.patio_unpacking = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'loading'){\r\n\t\t\t\t\tthis.patio_loading = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\tif(ser_type == 'unloading'){\r\n\t\t\t\t\tthis.patio_unloading = setApp8;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t   } \r\n\t\r\n\tcheck(){\r\n\t   \r\n\t\tthis.first_submitted = true;\r\n\t\tif(this.angForm.controls['email'].invalid || this.angForm.controls['password'].invalid){\r\n\t\t\tthis.show = false;\r\n\t\t\tthis.first_show = true;\r\n\t\t}else{\r\n\t\t\tthis.show = true;\r\n\t\t\tthis.first_show = false;\r\n\t\t}\r\n\t}\r\n   \r\n   \r\n\tgetSate(){\r\n  \r\n\t    this.userservice.getStates().subscribe(result => {\r\n\t\t  this.states = result;\r\n\t\t});\r\n\t   \r\n\t} \r\n\r\n\tgetRoles(usertype){\r\n  \r\n\t    this.userservice.getUserRoles(usertype).subscribe(result => {\r\n\t\t\tthis.roles = result;\r\n\t\t});\r\n\t   \r\n\t}\r\n   \r\n\tgetCounties(event){\r\n\t\tthis.stateName = event.target.value;\r\n\t\tthis.userservice.getCounties(this.stateName).subscribe(result => {\r\n\t\t\tthis.counties = result;\r\n\t\t});\r\n\t}  \r\n\tgetCountiesFrom(event){\r\n\t\tthis.stateName = event.target.value;\r\n\t\tthis.userservice.getCounties(this.stateName).subscribe(result => {\r\n\t\t\tthis.counties1 = result;\r\n\t\t});\r\n\t}  \r\n\tgetCountiesTo(event){\r\n\t\tthis.stateName = event.target.value;\r\n\t\tthis.userservice.getCounties(this.stateName).subscribe(result => {\r\n\t\t\tthis.counties2 = result;\r\n\t\t});\r\n\t}  \r\n\t\r\n\tgetCities(event){\r\n\t\tthis.countyName = event.target.value;\r\n\t\tthis.statename = this.firstFormGroup.value.state;\r\n\t\tthis.userservice.getCities(this.countyName,this.statename).subscribe(result => {\r\n\t\t\t\r\n\t\t\tthis.cities = result;\r\n\t\t}); \r\n\t}  \r\n\tgetCitiesFrom(event,number,whichFromGroup){\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tthis.countyName = event.target.value;\r\n\t\tthis.statename = this.whichFromGroup.value.itemRows[number].moving_from_state;\r\n\t\tthis.userservice.getCities(this.countyName,this.statename).subscribe(result => {\r\n\t\t\tthis.cities1 = result;\r\n\t\t});  \r\n\t}  \r\n\tgetCitiesTo(event,number,whichFromGroup){\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tthis.countyName = event.target.value;\r\n\t\tthis.statename = this.whichFromGroup.value.itemRowsTo[number].moving_to_state;\r\n\t\tthis.userservice.getCities(this.countyName,this.statename).subscribe(result => {\r\n\t\t\tthis.cities2 = result;\r\n\t\t}); \r\n\t}  \r\n\tgetServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t\tconsole.log(this.jobservices);\r\n\t\t\t/* this.firstService = result.data[0]._id;this.secondService = result.data[1]._id;this.thirdService = result.data[2]._id;  */\r\n\t\t}); \r\n\t}\r\n\t\r\n\t\r\n\tget f0() { return this.angForm.controls; }\r\n\tget f() { return this.angOptionsForm.controls; }\r\n\t\r\n\t//get f() { return this.firstFormGroup.controls; }\r\n\t/* get f12() { return this.firstPartTwoFormGroup.controls; } */\r\n\tget f2() { return this.secondFormGroup.controls.itemRows; }\r\n\t\r\n\tget f3() { return this.thirdFormGroup.controls.itemRowsTo; }\r\n\tget f4() { return this.FourthFormGroup.controls; }\r\n\tget f5() { return this.FifthFormGroup.controls; }\r\n\tget f6() { return this.sixthFormGroup.controls; }\r\n\tget f7() { return this.seventhFormGroup.controls; }\r\n\tget f8() { return this.eigthFormGroup.controls; }\r\n\tget f9() { return this.ninthFormGroup.controls; }\r\n\tget f10() { return this.tenthFormGroup.controls; }\r\n\tget f11() { return this.eleventhFormGroup.controls; }\r\n\tget f13() { return this.tweleveFormGroup.controls; }\r\n\tget f14() { return this.thirteenFormGroup.controls; }\r\n\tget f15() { return this.fourteenFormGroup.controls; }\r\n\tget _f1() { return this.angPackedOptionsForm.controls; }\r\n\tget _Uf1() { return this.angunPackedOptionsForm.controls; }\r\n\tget _fL1() { return this.angLoadingOptionsForm.controls; }\r\n\tget _fUL1() { return this.angUnloadingOptionsForm.controls; }\r\n\tget _f2() { return this.secondpackedFormGroup.controls.itemRows; }\r\n\tget _f3() { return this.thirdpackedFormGroup.controls.itemRowsTo; }\r\n\tget fL2() { return this.secondloadingFormGroup.controls.itemRows; }\r\n\tget fUL2() { return this.thirdunloadingFormGroup.controls.itemRowsTo; }\r\n\t\r\n\tget _UPf2() { return this.secondunpackedFormGroup.controls.itemRows; }\r\n\tget _UPf3() { return this.thirdunpackedFormGroup.controls.itemRowsTo; }\r\n\t\r\n\t\r\n\tget f16() { return this.fourthpackedFormGroup.controls; }\r\n\t\r\n   \r\n\tonSubmit() {\r\n        // stop here if form is invalid\r\n        \t\r\n\t}\r\n\tcreateNewJob(){\r\n\t\tlocalStorage.setItem('jobType','new');\r\n\t\tlocalStorage.removeItem('currentStop');\r\n\t\tlocalStorage.removeItem('jobID');\r\n\t}\r\n\t\r\n\t\r\n\tpublic geSavedJob(whichstep){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\tlocalStorage.setItem('jobType','saved');\r\n\t\t\r\n\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\r\n\t\tthis.jobservice.getEditJob(this.jobid).subscribe(result => {\r\n\t\t\tif(result.success){\r\n\t\t\t\r\n\t\t\t\t//http://localhost:4200/edit-job/5ea8fd1593c4153e8010841c\r\n\t\t\t\tthis.selectedServices = result.job.serviceId;\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\t\r\n\t\t\t\tthis.jobData = result.job;\r\n\t\t\t\tthis.movingData = result.job.moving[0];\r\n\t\t\t\tthis.packingData = result.job.packing[0];\r\n\t\t\t\tthis.unpackingData = result.job.unpacking[0];\r\n\t\t\t\tthis.loadingData = result.job.loading[0];\r\n\t\t\t\tthis.unloadingData = result.job.unloading[0]; \r\n\t\t\t\t\r\n\t\t\t\tif(this.movingData && whichstep == 'moving'){\r\n\t\t\t\t\tconsole.log(this.movingData);\r\n\t\t\t\t\tthis.showMoving = true;\r\n\t\t\t\t\tthis.setLocations(this.secondFormGroup,this.movingData);\t\r\n\t\t\t\t\tthis.setToLocations(this.thirdFormGroup,this.movingData);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(this.packingData && whichstep == 'packing'){\r\n\t\t\t\t\tconsole.log(this.packingData);\r\n\t\t\t\t\tthis.showPacking = true;\r\n\t\t\t\t\tthis.setLocations(this.secondpackedFormGroup,this.packingData);\t\r\n\t\t\t\t\tthis.setToLocations(this.thirdpackedFormGroup,this.packingData);\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tif(this.unpackingData && whichstep == 'unpacking'){\r\n\t\t\t\t\tthis.showUnPacking = true;\r\n\t\t\t\t\tthis.setLocations(this.secondunpackedFormGroup,this.unpackingData);\t\r\n\t\t\t\t\tthis.setToLocations(this.thirdunpackedFormGroup,this.unpackingData);\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tif(this.loadingData && whichstep == 'loading'){\r\n\t\t\t\t\tthis.showLoading = true;\r\n\t\t\t\t\tthis.setLocations(this.secondloadingFormGroup,this.loadingData);\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tif(this.unloadingData &&  whichstep == 'unloading'){\t\r\n\t\t\t\t\r\n\t\t\t\t\tthis.showUnLoading = true;\r\n\t\t\t\t\tthis.setToLocations(this.thirdunloadingFormGroup,this.loadingData);\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t});\r\n\t\t\t\tvar currentState = this.jobData.state;\r\n\t\t\t\tvar currentCounty = this.jobData.county;\r\n\t\t\t\r\n\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t}); \r\n\t\t\t\t\t\r\n\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(\"No Saved Job Found.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t  }  \r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n  /* *** Add User ** */\r\n\tupdateCalcs(event){\r\n\t\tvar d = new Date(event);\r\n\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\tvar day = '' + d.getDate();\r\n\t\tvar year = d.getFullYear();\r\n\t\tif (month.length < 2) month = '0' + month;\r\n\t\tif (day.length < 2) day = '0' + day;\r\n\t\tthis.mindateset = [year, month, day].join(',');\r\n\t\tthis.minDate2 = new Date(this.mindateset);\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.geSavedJob('start');\r\n\t\t/* var jobType = this.angForm.value.jobtype;\r\n\t\tlocalStorage.setItem('jobType',jobType); */\r\n\t\tthis.thisisdone = false;\r\n\t\tthis.isLinear = true;\r\n\t\tthis.button_text = 'View More';\r\n\t\tvar minD = new Date();\r\n\t\tthis.totalIndex = 14\r\n\t\tvar month1 = '' + (minD.getMonth() + 1);\r\n\t\tvar day1 = '' + minD.getDate();\r\n\t\tvar year1 = minD.getFullYear();\r\n\t\tif (month1.length < 2) month1 = '0' + month1;\r\n\t\tif (day1.length < 2) day1 = '0' + day1;\r\n\t\tthis.setmindate = [year1, month1, day1].join(',');\r\n\t\tthis.minDate = new Date(this.setmindate);\r\n\t\t\r\n\t\t/* this.userservice.getUsers().subscribe(result => {\r\n\t\t\tthis.user = result[0]; \r\n\t\t\r\n\t\t\treturn this.user;\r\n\t\t});\r\n\t\t */\r\n\t\t\r\n\t\tthis.first_show = true;\r\n\t\t/* if(localStorage.getItem('currentStop') != null){\r\n\t\t\tconsole.log(25);\r\n\t\t\tthis.resetStepper(event);\r\n\t\t} */\r\n\t\t\r\n\t\tthis.loadfirststep(1); \r\n\t\t\r\n\t\tthis.bedroomsPack = \"null\";\r\n\t\tthis.kitchensPack = \"null\";\r\n\t\tthis.diningRoomsPack = \"null\";\r\n\t\tthis.basementPack = \"null\";\r\n\t\tthis.garagePack = \"null\";\r\n\t\tthis.shedPack = \"null\";\r\n\t\tthis.officePack = \"null\";\r\n\t}\r\n\t/* resetStepper(stepper: MatStepper){\r\n\t\t\r\n\t\tstepper.selectedIndex = 5; \r\n\t}\r\n\t */\r\n\t\r\n\tloadfirststep(nextstep:number){\r\n\t\tthis.topHeading = 'Contact Information';\r\n\t\tthis.showThis = true; \r\n\t}\t\r\n\t onChange(_id:string,name:string, isChecked: boolean) {\r\n\t\t\r\n\t\t  this.serviceFormArray = <FormArray>this.angForm.controls.services;\r\n\t\t  this.serviceNameArray = <FormArray>this.angForm.controls.services;\r\n\r\n\t\t  if(isChecked) {\r\n\t\t\tthis.serviceFormArray.push(new FormControl(_id));\r\n\t\t\tthis.serviceNameArray.push(new FormControl(name));\r\n\t\t  } else {\r\n\t\t\tlet index = this.serviceFormArray.controls.findIndex(x => x.value == _id)\r\n\t\t\tthis.serviceFormArray.removeAt(index);\r\n\t\t\t\r\n\t\t\tlet index1 = this.serviceNameArray.controls.findIndex(y => y.value == name)\r\n\t\t\tthis.serviceNameArray.removeAt(index1);\r\n\t\t  }\r\n\t\t \r\n\t \r\n\t \r\n\t}\r\n\r\n\t\r\n\tisChangeheading(stepper: MatStepper){\r\n\t\t\r\n\t\tlet myArray = [];\r\n\t\tconst selectedOrderIds = this.angForm.value.services\r\n\t\t\t\t\t\t\t\t.map((v, i) => (v ? this.jobservices[i]._id : null))\r\n\t\t\t\t\t\t\t\t.filter(v => v !== null);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t const selectedOrderName = this.angForm.value.services\r\n\t\t\t\t\t\t\t\t.map((v, i) => (v ? this.jobservices[i].slug : null))\r\n\t\t\t\t\t\t\t\t.filter(v => v !== null);\t\r\n\t\t\t \r\n\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\r\n\t\tif(this.angForm.invalid){\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tif(selectedOrderName.includes('moving')){\r\n\t\t\t\tthis.showMoving = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOrderName.includes('packing')){\r\n\t\t\t\tthis.showPacking = true;\r\n\t\t\t}\r\n\t\t\tif(selectedOrderName.includes('unpacking')){\r\n\t\t\t\tthis.showUnPacking = true;\r\n\t\t\t}\r\n\t\t\tif(selectedOrderName.includes('loading')){\r\n\t\t\t\tthis.showLoading = true;\r\n\t\t\t}\r\n\t\t\tif(selectedOrderName.includes('unloading')){\r\n\t\t\t\tthis.showUnLoading = true;\r\n\t\t\t}\r\n\t\t\tvar flashMessagesService = this._flashMessagesService;\r\n\t\t\t\r\n\t\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\t/* setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\tstepper.next();\r\n\t\t\t}, 0); \r\n\t\t\t */\r\n\t\t this.jobservice.updateEditedJobServices(selectedOrderIds,jobID).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\t//this.submitted = false;\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t//this.allEventHandle(nextstep,totalIndex);\r\n\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t }, 0); \r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t});  \r\n\t\t\t\t\r\n\t\t }  \r\n\t}\r\n\t\r\n\tsetOptionsAvailable(stepper: MatStepper){\r\n\t\t\r\n\t\tif(this.angOptionsForm.invalid){\r\n\t\t\tthis.submitted_moving = true;\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tconst selectedOptionsIds = this.angOptionsForm.value.options\r\n\t\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsData[i].id : null)\r\n\t\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\t\t\r\n\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\tthis.showErrorMessage1 = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t//this.submitted = true;\t\t\r\n\t\t\tconst moving_id = this.MOVING_ID;\r\n\t\t\tconst serv_type = 'moving';\r\n\t\t\t//this.geSavedJob('moving');\r\n\t\t\tif(!this.selectedServices.includes(this.MOVING_ID)){\r\n\t\t\t\tthis.setLocations(this.secondFormGroup,'');\r\n\t\t\t}else{\r\n\t\t\t\tthis.setLocations(this.secondFormGroup,this.movingData);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\tif(selectedOptionsIds.includes(1)){\r\n\t\t\t\tthis.showAppliances = true;\r\n\t\t\t\tthis.addDropDowns(moving_id,this.FourthFormGroup,serv_type,this.movingData);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(2)){\r\n\t\t\t\tthis.showBedrooms = true;\r\n\t\t\t\tthis.addBedDropDowns(moving_id,this.FifthFormGroup,serv_type,this.movingData);\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(3)){\r\n\t\t\t\tthis.showLivingRooms = true;\r\n\t\t\t\tthis.addLivingDropDowns(moving_id,this.sixthFormGroup,serv_type,this.movingData);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(4)){\r\n\t\t\t\tthis.showFamilyRooms = true;\r\n\t\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhFormGroup,serv_type,this.movingData);\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(5)){\r\n\t\t\t\tthis.showDiningRooms = true;\r\n\t\t\t\tthis.addDiningDropDowns(moving_id,this.eigthFormGroup,serv_type,this.movingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(6)){\r\n\t\t\t\tthis.showKitchen = true;\r\n\t\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthFormGroup,serv_type,this.movingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(7)){\r\n\t\t\t\tthis.showBasement = true;\r\n\t\t\t\tthis.addBasementDropDowns(moving_id,this.tenthFormGroup,serv_type,this.movingData);\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(8)){\r\n\t\t\t\tthis.showGarage = true;\r\n\t\t\t\t\r\n\t\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhFormGroup,serv_type,this.movingData);\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(9)){\r\n\t\t\t\tthis.showPatiyoYards = true;\r\n\t\t\t\t\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.tweleveFormGroup,serv_type,this.movingData); \r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(10)){\r\n\t\t\t\tthis.showOffices = true;\r\n\t\t\t\t\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenFormGroup,serv_type,this.movingData); \r\n\t\t\t}\r\n\t\t\tif(selectedOptionsIds.includes(11)){\r\n\t\t\t\tthis.showOversized = true;\r\n\t\t\t\t\r\n\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenFormGroup,serv_type,this.movingData); \r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst start_date  = this.angOptionsForm.value.job_start_date;\r\n\t\t\tvar basic_info  = {moving:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\tthis.jobservice.updateServicesInJob(jobID,basic_info,'moving').subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\tthis.submitted = false;\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t }, 0); \r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t}); \r\n\t\t\t\t \r\n\t\t}\r\n\t \r\n\t}\r\n\t\r\n\t\r\n\t\t\r\n\tsetPackingOptionsAvailable(stepper: MatStepper,type){\r\n\t\tif(type == 'forPacking'){\r\n\t\t\t//this.geSavedJob('packing');\r\n\t\t\tconst selectedOptionsIds = this.angPackedOptionsForm.value.packingoptions\r\n\t\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsPackedData[i].id : null)\r\n\t\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\t\r\n\t\t\tconsole.log(this.angPackedOptionsForm);\r\n\t\t\t\t\r\n\t\t\tif(this.angPackedOptionsForm.invalid){\r\n\t\t\t\tthis.submitted_packing = true;\t\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\t\tthis.showErrorMessage2 = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//this.geSavedJob('packing');\r\n\t\t\t\t\r\n\t\t\t\tconst moving_id = this.PACKING_ID;\r\n\t\t\t\tconst serv_type = 'packing';\r\n\t\t\t\t\r\n\t\t\t\tif(!this.selectedServices.includes(this.PACKING_ID)){\r\n\t\t\t\t\tthis.setLocations(this.secondpackedFormGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setLocations(this.secondpackedFormGroup,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t//if(localStorage.getItem('jobType') == 'new'){\r\n\t\t\t\t\t\t\r\n\t\t\t\t//}\r\n\t\t\t\t\r\n\t\t\t\tif(selectedOptionsIds.includes(12)){\r\n\t\t\t\t\tthis.showPackingAppliances = true;\r\n\t\t\t\t\tthis.addDropDowns(moving_id,this.fourthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(13)){\r\n\t\t\t\t\tthis.showPackingBedrooms = true;\r\n\t\t\t\t\tthis.addBedDropDowns(moving_id,this.FifthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(14)){\r\n\t\t\t\t\tthis.showPackingLivingRooms = true;\r\n\t\t\t\t\tthis.addLivingDropDowns(moving_id,this.sixthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(15)){\r\n\t\t\t\t\tthis.showPackingFamilyRooms = true;\r\n\t\t\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(16)){\r\n\t\t\t\t\tthis.showPackingDiningRooms = true;\r\n\t\t\t\t\tthis.addDiningDropDowns(moving_id,this.eigthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(17)){\r\n\t\t\t\t\tthis.showPackingKitchen = true;\r\n\t\t\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(18)){\r\n\t\t\t\t\tthis.showPackingBasement = true;\r\n\t\t\t\t\tthis.addBasementDropDowns(moving_id,this.tenthpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(19)){\r\n\t\t\t\t\tthis.showPackingGarage = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhpackedFormGroup,serv_type,this.packingData);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(20)){\r\n\t\t\t\t\tthis.showPackingPatiyoYards = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.twelevepackedFormGroup,serv_type,this.packingData); \r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(21)){\r\n\t\t\t\t\tthis.showPackingOffices = true;\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenpackedFormGroup,serv_type,this.packingData); \r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(22)){\r\n\t\t\t\t\tthis.showPackingOversized = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenpackedFormGroup,serv_type,this.packingData); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst start_date  = this.angPackedOptionsForm.value.job_start_date_packing;\r\n\t\t\t\tvar basic_info1  = {packing:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\t\t\t\r\n\t\t\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\t\tthis.jobservice.updateServicesInJob(jobID,basic_info1,'packing').subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.submitted_packing = false;\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t\t }, 0); \r\n\t\t\t\t\t  }else{\r\n\t\t\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t\t  } \r\n\t\t\t\t   \r\n\t\t\t\t}); \r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t}\r\n\t\tif(type == 'forUnpacking'){\r\n\t\t\tthis.geSavedJob('unpacking');\r\n\t\t\tconst selectedOptionsIds = this.angunPackedOptionsForm.value.packingoptions\r\n\t\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsPackedData[i].id : null)\r\n\t\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\t\r\n\t\t\tconsole.log(selectedOptionsIds);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif(this.angunPackedOptionsForm.invalid){\r\n\t\t\t\tthis.submitted_unpacking = true;\r\n\t\t\t\treturn;\r\n\t\t\t}else{\r\n\t\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\t\tthis.showErrorMessage3 = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst moving_id = this.UNPACKING_ID;\r\n\t\t\t\t\r\n\t\t\t\tconst serv_type = 'unpacking';\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(!this.selectedServices.includes(this.UNPACKING_ID)){\r\n\t\t\t\t\tthis.setLocations(this.secondunpackedFormGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setLocations(this.secondunpackedFormGroup,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(selectedOptionsIds.includes(12)){\r\n\t\t\t\t\tthis.addDropDowns(moving_id,this.fourthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t\tthis.showUnpackingAppliances = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(13)){\r\n\t\t\t\t\tthis.showUnpackingBedrooms = true;\r\n\t\t\t\t\tthis.addBedDropDowns(moving_id,this.FifthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(14)){\r\n\t\t\t\t\tthis.showUnpackingLivingRooms = true;\r\n\t\t\t\t\tthis.addLivingDropDowns(moving_id,this.sixthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(15)){\r\n\t\t\t\t\tthis.showUnpackingFamilyRooms = true;\r\n\t\t\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(16)){\r\n\t\t\t\t\tthis.showUnpackingDiningRooms = true;\r\n\t\t\t\t\tthis.addDiningDropDowns(moving_id,this.eigthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(17)){\r\n\t\t\t\t\tthis.showUnpackingKitchen = true;\r\n\t\t\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(18)){\r\n\t\t\t\t\tthis.showUnpackingBasement = true;\r\n\t\t\t\t\tthis.addBasementDropDowns(moving_id,this.tenthunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(19)){\r\n\t\t\t\t\tthis.showUnpackingGarage = true;\r\n\t\t\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhunpackedFormGroup,serv_type,this.unpackingData);\r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(20)){\r\n\t\t\t\t\tthis.showUnpackingPatiyoYards = true;\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.tweleveunpackedFormGroup,serv_type,this.unpackingData); \r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(21)){\r\n\t\t\t\t\tthis.showUnpackingOffices = true;\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenunpackedFormGroup,serv_type,this.unpackingData); \r\n\t\t\t\t}\r\n\t\t\t\tif(selectedOptionsIds.includes(22)){\r\n\t\t\t\t\tthis.showUnpackingOversized = true;\r\n\t\t\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenunpackedFormGroup,serv_type,this.unpackingData); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst start_date  = this.angunPackedOptionsForm.value.job_start_date_unpacking;\r\n\t\t\t\tvar basic_info2  = {unpacking:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\t\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\t\tthis.jobservice.updateServicesInJob(jobID,basic_info2,'unpacking').subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.submitted_unpacking = false;\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t\t }, 0); \r\n\t\t\t\t\t  }else{\r\n\t\t\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t\t  } \r\n\t\t\t\t   \r\n\t\t\t\t});\r\n\t\t\t}\t\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tsetLoadingOptionsAvailable(stepper: MatStepper){\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tconst selectedOptionsIds = this.angLoadingOptionsForm.value.packingoptions\r\n\t\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsPackedData[i].id : null)\r\n\t\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\tif(this.angLoadingOptionsForm.invalid){\r\n\t\t\tthis.submitted_loading = true;\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\tthis.showErrorMessage4 = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\t\r\n\t\t\r\n\t\t\r\n\t\tconst moving_id = this.LOADING_ID;\r\n\t\t\r\n\t\tthis.geSavedJob('loading');\r\n\t\tconst serv_type = 'loading';\r\n\t\t\r\n\t\t\r\n\t\tif(this.selectedServices && !this.selectedServices.includes(this.LOADING_ID)){\r\n\t\t\tthis.setLocations(this.secondloadingFormGroup,'');\r\n\t\t}else{\r\n\t\t\tthis.setLocations(this.secondloadingFormGroup,this.loadingData);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif(selectedOptionsIds.includes(12)){\r\n\t\t\tthis.addDropDowns(moving_id,this.FourthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t\tthis.showLoadingAppliances = true;\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(13)){\r\n\t\t\tthis.showLoadingBedrooms = true;\r\n\t\t\tthis.addBedDropDowns(moving_id,this.FifthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(14)){\r\n\t\t\tthis.showLoadingLivingRooms = true;\r\n\t\t\tthis.addLivingDropDowns(moving_id,this.sixthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(15)){\r\n\t\t\tthis.showLoadingFamilyRooms = true;\r\n\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhloadingFormGroup,serv_type,this.loadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(16)){\r\n\t\t\tthis.showLoadingDiningRooms = true;\r\n\t\t\tthis.addDiningDropDowns(moving_id,this.eigthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(17)){\r\n\t\t\tthis.showLoadingKitchen = true;\r\n\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(18)){\r\n\t\t\tthis.showLoadingBasement = true;\r\n\t\t\tthis.addBasementDropDowns(moving_id,this.tenthloadingFormGroup,serv_type,this.loadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(19)){\r\n\t\t\tthis.showLoadingGarage = true;\r\n\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhloadingFormGroup,serv_type,this.loadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(20)){\r\n\t\t\tthis.showLoadingPatiyoYards = true;\r\n\t\t\tthis.addPatioyardDropDowns(moving_id,this.tweleveloadingFormGroup,serv_type,this.loadingData); \r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(21)){\r\n\t\t\tthis.showLoadingOffices = true;\r\n\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenloadingFormGroup,serv_type,this.loadingData); \r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(22)){\r\n\t\t\tthis.showLoadingOversized = true;\r\n\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenloadingFormGroup,serv_type,this.loadingData); \r\n\t\t}\r\n\t\r\n\t\tconst start_date  = this.angLoadingOptionsForm.value.job_start_date_loading;\r\n\t\tvar basic_info3  = {loading:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tthis.jobservice.updateServicesInJob(jobID,basic_info3,'loading').subscribe(result =>\r\n\t\t{\r\n\t\t\tthis.submitted_loading = false;\r\n\t\t\tif(result.success){\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t  stepper.next();\r\n\t\t\t\t }, 0); \r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t  } \r\n\t\t   \r\n\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tsetUnloadingOptionsAvailable(stepper: MatStepper){\r\n\t\t\r\n\t\tconst selectedOptionsIds = this.angUnloadingOptionsForm.value.packingoptions\r\n\t\t\t\t\t\t\t\t  .map((v, i) => v ? this.optionsPackedData[i].id : null)\r\n\t\t\t\t\t\t\t\t  .filter(v => v !== null);\r\n\t\tif(this.angUnloadingOptionsForm.invalid){\r\n\t\t\tthis.submitted_unloading = true;\r\n\t\t\treturn;\r\n\t\t}else{\t\t\t\t\t\t  \r\n\t\t\tif(selectedOptionsIds.length == 0){\r\n\t\t\t\tthis.showErrorMessage5 = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\tconsole.log(selectedOptionsIds);\r\n\t\tconst moving_id = this.UNLOADING_ID;\r\n\t\tconst serv_type = 'unloading';\r\n\t\tthis.geSavedJob('unloading');\r\n\t\tif(this.selectedServices &&  !this.selectedServices.includes(this.UNLOADING_ID)){\r\n\t\t\tthis.setToLocations(this.thirdunloadingFormGroup,'');\r\n\t\t}else{\r\n\t\t\tthis.setToLocations(this.thirdunloadingFormGroup,this.unloadingData);\r\n\t\t}\r\n\t\t\r\n\t\tif(selectedOptionsIds.includes(12)){\r\n\t\t\tthis.addDropDowns(moving_id,this.fourthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t\tthis.showUnloadingAppliances = true;\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(13)){\r\n\t\t\tthis.showUnloadingBedrooms = true;\r\n\t\t\tthis.addBedDropDowns(moving_id,this.FifthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(14)){\r\n\t\t\tthis.showUnloadingLivingRooms = true;\r\n\t\t\tthis.addLivingDropDowns(moving_id,this.sixthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(15)){\r\n\t\t\tthis.showUnloadingFamilyRooms = true;\r\n\t\t\tthis.addFamilyDropDowns(moving_id,this.seventhunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(16)){\r\n\t\t\tthis.showUnloadingDiningRooms = true;\r\n\t\t\tthis.addDiningDropDowns(moving_id,this.eigthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(17)){\r\n\t\t\tthis.showUnloadingKitchen = true;\r\n\t\t\tthis.addkitchenDropDowns(moving_id,this.ninthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(18)){\r\n\t\t\tthis.showUnloadingBasement = true;\r\n\t\t\tthis.addBasementDropDowns(moving_id,this.tenthunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(19)){\r\n\t\t\tthis.showUnloadingGarage = true;\r\n\t\t\tthis.addGaragesDropDowns(moving_id,this.eleventhunloadingFormGroup,serv_type,this.unloadingData);\r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(20)){\r\n\t\t\tthis.showUnloadingPatiyoYards = true;\r\n\t\t\tthis.addPatioyardDropDowns(moving_id,this.tweleveunloadingFormGroup,serv_type,this.unloadingData); \r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(21)){\r\n\t\t\tthis.showUnloadingOffices = true;\r\n\t\t\tthis.addPatioyardDropDowns(moving_id,this.thirteenunloadingFormGroup,serv_type,this.unloadingData); \r\n\t\t}\r\n\t\tif(selectedOptionsIds.includes(22)){\r\n\t\t\tthis.showUnloadingOversized = true;\r\n\t\t\tthis.addPatioyardDropDowns(moving_id,this.fourteenunloadingFormGroup,serv_type,this.unloadingData); \r\n\t\t}\r\n\t\r\n\t\tconst start_date  = this.angUnloadingOptionsForm.value.job_start_date_unloading;\r\n\t\tvar basic_info4  = {unloading:{serviceId:moving_id,selected_options:selectedOptionsIds,jobStart:start_date}}\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tthis.jobservice.updateServicesInJob(jobID,basic_info4,'unloading').subscribe(result =>\r\n\t\t{\r\n\t\t\tthis.submitted = false;\r\n\t\t\tif(result.success){\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tlocalStorage.setItem('jobID',result.jobId);\r\n\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t  stepper.next();\r\n\t\t\t\t }, 0); \r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t  } \r\n\t\t   \r\n\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tsaveFromLocation(stepper: MatStepper,whichFromGroup,serviceType,nextFromGroup){\r\n\t\t\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tthis.nextFromGroup = nextFromGroup;\r\n\t\tthis.submitted_2 = true;\r\n\t\tif(this.whichFromGroup.controls.itemRows.invalid){\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tif(serviceType == 'moving'){\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(!this.selectedServices.includes(this.MOVING_ID)){\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,this.movingData);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(!this.selectedServices.includes(this.PACKING_ID)){\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,this.packingData);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\tif(!this.selectedServices.includes(this.UNPACKING_ID)){\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,'');\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setToLocations(this.nextFromGroup,this.unpackingData);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t//if(localStorage.getItem('jobType') == 'new'){\r\n\t\t\t\t\r\n\t\t\t//}\r\n\t\t\tvar job_moving_from_info = this.whichFromGroup.value;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\t\r\n\t\t\tthis.submit_final_job(stepper,job_moving_from_info,'step3',jobID,serviceType); \r\n\t\t\t\r\n\t\t\t\r\n\t\t} \r\n\t}\r\n\tsaveFromLoadingLocation(stepper: MatStepper,whichFromGroup,serviceType,nextFromGroup){\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tthis.nextFromGroup = nextFromGroup;\r\n\t\tthis.submitted_2 = true;\r\n\t\tif(this.whichFromGroup.controls.itemRows.invalid){\r\n\t\t\treturn;\r\n\t\t}else{\r\n\t\t\tvar job_moving_from_info = this.whichFromGroup.value;\r\n\t\t\tconsole.log(job_moving_from_info);\r\n\t\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\tthis.submit_final_job(stepper,job_moving_from_info,'step3',jobID,serviceType); \r\n\t\t\t\r\n\t\t\t\r\n\t\t} \r\n\t}\r\n\t\r\n\tsaveToLocation(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tconsole.log('this is called');\r\n\t\tthis.submitted_3 = true;\r\n\t\tif(this.whichFromGroup.controls.itemRowsTo.invalid){\r\n\t\t\treturn;\r\n\t\t}else{ \r\n\t\t\t/* console.log(this.showAppliances);\r\n\t\t\tconsole.log(this.showMoving);\r\n\t\t\tconsole.log(this.showPacking); */\r\n\t\t\tvar job_moving_to_info = this.whichFromGroup.value;\r\n\t\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\tconsole.log(job_moving_to_info);\r\n\t\t\tthis.submit_final_job(stepper,job_moving_to_info,'step4',jobID,serviceType);\r\n\t\t\t\r\n\t\t\t\r\n\t\t} \r\n\t}\r\n\tsaveAppliances(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_4 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\t\r\n\t\tvar appliance_info = this.whichFromGroup.value.allappliances;\r\n\t\tvar misc_info = this.whichFromGroup.value.appliance_misc;\r\n\t\t\r\n\t\t\r\n\t\t //var new_arr = [];\r\n\t\t  var new_arr = [];\r\n\t\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['applianceItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test); \r\n\t\t\t}\r\n\t\t\t\r\n\t\t}); \r\n\t\t\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar misc_info = this.whichFromGroup.value.appliance_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.appliance_assembly;\r\n\t\tconsole.log(assembly_info);\r\n\t\tvar final_submit = {appliances:new_arr,appliances_misc:misc_info,appliances_assembly:assembly_info}\r\n\t\tconsole.log(final_submit);\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit,'step5',jobID,serviceType);\r\n\t}\r\n\tsaveBedrooms(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_5 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.bedrooms;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['bedRoomsItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\t\t\r\n\t\tvar misc_info = this.whichFromGroup.value.bedrooms_misc;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar assembly_info = this.whichFromGroup.value.bedrooms_assembly;\r\n\t\tvar final_submit1 = {bedRooms:new_arr,bedrooms_misc:misc_info,bedrooms_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit1,'step6',jobID,serviceType);\r\n\t}\r\n\tsaveLivingRooms(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_6 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.livingrooms;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['livingRoomsItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.livingRooms_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.livingRooms_assembly;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar final_submit2 = {livingRooms:new_arr,livingRooms_misc:misc_info,livingRooms_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit2,'step7',jobID,serviceType);\r\n\t}\r\n\tsaveFamilyRooms(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_7 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.familyrooms;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['familyRoomsItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.familyRooms_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.familyRooms_assembly;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar final_submit3 = {familyRooms:new_arr,familyRooms_misc:misc_info,familyRooms_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit3,'step8',jobID,serviceType);  \r\n\t}\r\n\tsaveDiningRooms(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_7 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.diningrooms;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['diningRoomsItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tvar misc_info = this.whichFromGroup.value.dininRooms_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.dininRooms_assembly;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar final_submit4 = {diningRooms:new_arr,dininRooms_misc:misc_info,dininRooms_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit4,'step9',jobID,serviceType);\r\n\t}\r\n\tsaveKitchens(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_8 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.kitchens;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['kitchenItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.kitchen_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.kitchen_assembly;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar final_submit5 = {kitchen:new_arr,kitchen_misc:misc_info,kitchen_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit5,'step10',jobID,serviceType);\r\n\t}\r\n\tsaveBasements(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_8 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.basements;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['basementItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.basement_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.basement_assembly;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar final_submit6 = {basement:new_arr,basement_misc:misc_info,basement_assembly:assembly_info}\r\n\t\t\r\n\t\tthis.submit_final_job(stepper,final_submit6,'step11',jobID,serviceType);\r\n\t}\r\n\tsaveGarages(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_9 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.garages;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(value != \"null\"){\r\n\t\t\t\t\tvar test = {};\r\n\t\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\t\ttest['garageItem'] = newstring[1];\r\n\t\t\t\t\tnew_arr.push(test);\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.garage_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.garage_assembly;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar final_submit7 = {garage:new_arr,garage_misc:misc_info,garage_assembly:assembly_info}\r\n\t\tthis.submit_final_job(stepper,final_submit7,'step12',jobID,serviceType);\r\n\t\t\r\n\t\t\r\n\t}\r\n\tsavePatiyoyards(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_10 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.patioyards;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['patioYardItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar misc_info = this.whichFromGroup.value.patioYard_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.patioYard_assembly;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar final_submit8 = {patioYard:new_arr,patioYard_misc:misc_info,patioYard_assembly:assembly_info}\r\n\t\tthis.submit_final_job(stepper,final_submit8,'step13',jobID,serviceType);\r\n\t\t\r\n\t}\r\n\tsaveOffices(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_10 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.patioyards;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['patioYardItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tvar misc_info = this.whichFromGroup.value.patioYard_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.patioYard_assembly;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar final_submit8 = {patioYard:new_arr,patioYard_misc:misc_info,patioYard_assembly:assembly_info}\r\n\t\tthis.submit_final_job(stepper,final_submit8,'step14',jobID,serviceType);\r\n\t\t\r\n\t}\r\n\tsaveOverSized(stepper: MatStepper,whichFromGroup,serviceType){\r\n\t\tthis.submitted_10 = true;\r\n\t\tthis.whichFromGroup = whichFromGroup;\r\n\t\tvar appliance_info = this.whichFromGroup.value.patioyards;\r\n\t\t\r\n\t\t//var new_arr = [];\r\n\t\tvar new_arr = [];\r\n\t\t$.each(appliance_info, function(index, value) { \r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tif(value != \"null\"){\r\n\t\t\t\tvar test = {};\r\n\t\t\t\tvar newstring = value.split(\"_\");\r\n\t\t\t\tconsole.log(newstring[0]);\r\n\t\t\t\ttest['items'] = newstring[0];\r\n\t\t\t\ttest['patioYardItem'] = newstring[1];\r\n\t\t\t\tnew_arr.push(test);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tvar misc_info = this.whichFromGroup.value.patioYard_misc;\r\n\t\tvar assembly_info = this.whichFromGroup.value.patioYard_assembly;\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tvar final_submit8 = {patioYard:new_arr,patioYard_misc:misc_info,patioYard_assembly:assembly_info}\r\n\t\tthis.submit_final_job(stepper,final_submit8,'step15',jobID,serviceType);\r\n\t\t\r\n\t}\r\n\t\r\n\tsubmit_final_job(stepper,final_submit,step,jobID,serviceType){\r\n\t\tconsole.log('sdfsdf'+serviceType);\r\n\t\t\r\n\t\tthis.jobservice.updateEditedJob(final_submit,step,jobID,serviceType).subscribe(result =>\r\n\t\t{\r\n\t\t\tvar flashMessagesService = this._flashMessagesService;\r\n\t\t\t this.submitted_10 = false;\r\n\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\t\tif(step != 'step3' && step != 'step4' ){\r\n\t\t\t\t\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\t\t\t\tthis.jobservice.getEditJob(jobID).subscribe(result => {\r\n\t\t\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//http://localhost:4200/edit-job/5ea8fd1593c4153e8010841c\r\n\t\t\t\t\t\t\t\tthis.selectedServices = result.job.serviceId;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.jobData = result.job;\r\n\t\t\t\t\t\t\t\tthis.movingData = result.job.moving[0];\r\n\t\t\t\t\t\t\t\tthis.packingData = result.job.packing[0];\r\n\t\t\t\t\t\t\t\tthis.unpackingData = result.job.unpacking[0];\r\n\t\t\t\t\t\t\t\tthis.loadingData = result.job.loading[0];\r\n\t\t\t\t\t\t\t\tthis.unloadingData = result.job.unloading[0]; \r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} \r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t  stepper.next();\r\n\t\t\t\t }, 1);\r\n\t\t\t}else{\r\n\t\t\t\t  flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}  \r\n\t\t   \r\n\t\t});  \r\n\t\t\r\n\t}\r\n\tsetupJob(stepper: MatStepper){\r\n\t\tvar jobID = this.route.snapshot.paramMap.get('jobid');\r\n\t\tthis.jobservice.submitEditJob(jobID).subscribe(result =>\r\n\t\t\t{\t\r\n\t\t\t\tvar flashMessagesService = this._flashMessagesService;\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  stepper.next();\r\n\t\t\t\t\t\t }, 1);\r\n\t\t\t\t\t flashMessagesService.show(\"Job updated Successfully\", { cssClass: 'alert-success',timeout:2000});\r\n\t\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\tthis.router.navigate(['/jobs']);\r\n\t\t\t\t\t }, 2500);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tflashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t\t} \r\n\t\t\t   \r\n\t\t\t});  \r\n\t}\r\n\t\r\n\tcheckName(servicename){\r\n\t\tif(servicename == 'Moving'){\r\n\t\t\tthis.totalIndex = 14;\r\n\t\t}else{\r\n\t\t\tthis.totalIndex = 15;\r\n\t\t}\r\n\t}\r\n\tpublic onStepperSelectionChange(event: any) {\r\n\t\tthis.scrollToSectionHook(); \r\n\t}\r\n\ttoggle() {\r\n\t\tthis.show_dialog = !this.show_dialog;\r\n\t\tthis.button_text = this.show_dialog ? 'View Less' : 'View More';\r\n\t}\r\n\tprivate scrollToSectionHook() {\r\n\t\tconst element = document.querySelector('.stepperTop'); \r\n\t\tif (element) { \r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\telement.scrollIntoView({behavior: 'smooth', block: 'start', inline: 'nearest'});\r\n\t\t\t}, 0 );\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n","module.exports = \".action a{margin-right:7px}\\r\\n.joblisting-panel .content-left .time_ago{font-size:12px;}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  /* float: left; */\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.desc .loc_lable{    width: 100px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight:600;\\r\\n\\tfont-size:14px\\r\\n}\\r\\n.desc .loc_lable::after{content:\\\":\\\"}\\r\\n.job-info{\\r\\n    padding: 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.items-moved .job-info {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n.joblisting-panel .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.job-info .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.items-moved.joblisting-panel .title {\\r\\n\\tcolor:#303030;\\r\\n    font-weight: 900;  \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9pbnByb2dyZXNzam9icy9pbnByb2dyZXNzam9icy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsZ0JBQWdCO0FBQzFCLDBDQUEwQyxjQUFjLENBQUM7QUFFekQ7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFNBQVM7SUFDVCxhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFDZixVQUFVO0FBQ2Q7QUFFQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCO0FBR0E7OztJQUdJLGNBQWM7QUFDbEI7QUFHQTtFQUNFLG9HQUFvRztFQUNwRyxZQUFZO0VBQ1osWUFBWTtFQUNaLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsY0FBYztBQUNoQjtBQUdBO0lBQ0ksb0dBQW9HO0lBQ3BHLDJCQUEyQjtJQUMzQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7RUFDZjtBQUdGLHFCQUFxQixZQUFZO0lBQzdCLGtCQUFrQjtJQUNsQixxQkFBcUI7Q0FDeEIsaUJBQWlCO0NBQ2pCLGVBQWU7Q0FDZjtBQUNEO0FBQ0Esd0JBQXdCLFdBQVc7QUFFbkM7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFHSSxhQUFhO0lBRVQsZUFBZTtBQUN2QjtBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7Q0FDQyxhQUFhO0lBQ1YsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9pbnByb2dyZXNzam9icy9pbnByb2dyZXNzam9icy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjdGlvbiBhe21hcmdpbi1yaWdodDo3cHh9XHJcbi5qb2JsaXN0aW5nLXBhbmVsIC5jb250ZW50LWxlZnQgLnRpbWVfYWdve2ZvbnQtc2l6ZToxMnB4O31cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGlucHV0IHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOi05OTk5cHg7XHJcbiAgICBjbGlwOnJlY3QoMCwwLDAsMCk7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsIHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6MWVtO1xyXG4gICAgcGFkZGluZzowLjFlbTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDoxLjI7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgLyogZmxvYXQ6IGxlZnQ7ICovXHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZS1yYXRpbmd7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gICBcclxuLmRlc2MgLmxvY19sYWJsZXsgICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cdGZvbnQtd2VpZ2h0OjYwMDtcclxuXHRmb250LXNpemU6MTRweFxyXG59XHJcbi5kZXNjIC5sb2NfbGFibGU6OmFmdGVye2NvbnRlbnQ6XCI6XCJ9XHJcblxyXG4uam9iLWluZm97XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG4uaXRlbXMtbW92ZWQgLmpvYi1pbmZvIHtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn0gXHJcblxyXG4uam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLmpvYi1pbmZvIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uaXRlbXMtbW92ZWQuam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG5cdGNvbG9yOiMzMDMwMzA7XHJcbiAgICBmb250LXdlaWdodDogOTAwOyAgXHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">All Open Estimates</h3>\\r\\n\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Request Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Company Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Response On</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>$</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Attachments</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Rating</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Actions</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"userslist && userslist.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let jobs of userslist\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" routerLink=\\\"/detail-job/{{jobs._id}}\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.job_created | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.companyName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>${{jobs.bid_price}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.attachemnt_pic}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"jobs.width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\" routerLink=\\\"/detail-job/{{jobs.job_id}}\\\">View</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\" routerLink=\\\"/complete-job/{{jobs.job_id}}/{{jobs.bidder_id}}\\\">Complete Job</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"!userslist || userslist.length == 0\\\" >\\r\\n\\t\\t\\t\\t\\t\\t<tr><td colspan=\\\"7\\\"><p class=\\\"text-center\\\">No Estimates posted</td></tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { JobService } from '../../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'inprogressjobs.component.html',\r\n   styleUrls : [ './inprogressjobs.component.css' ]\r\n\r\n})\r\nexport class UsersInProgressJobsComponent implements OnInit{\r\n\t\r\n\tfirst_show = false;val:any='';userslist:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tisValid : boolean = false;\r\n\tname:any='';animal:any='';jobidisset:any='';\r\n\tmessage:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title)\r\n\t{\r\n\t\t this.getAllJobs();\r\n\t\t this.titleService.setTitle( 'Jobs in Progress | MoveLaunch' );\r\n\t}\r\n\t\r\n\t \r\n\tgetAllJobs(){\r\n\t\t\r\n\t\tthis.jobservice.getFilteredJobsForUser(1).subscribe(result =>\r\n\t\t{\r\n\t\t\tconsole.log(result);\r\n\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs = result.jobs;\r\n\t\t\t\tconsole.log(this.allJobs);\r\n\t\t\t\tlet userslist1 = [];\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\tx.bidsData.forEach((value,index)=>{\r\n\t\t\t\t\t\tuserslist1.push({'job_id':x._id,'bidder_id':value.userId._id,'bid_price':value.bid_price,'created_at':value.created_at,'bidStatus':value.bidStatus,'companyName':value.userId.companyName,'jobId':x.jobId,'job_created':x.created_at,'width':value.rating*20});\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}); \r\n\t\t\t\tuserslist1.sort((a,b) => b.created_at.localeCompare(a.created_at));\r\n\t\t\t\tthis.userslist = userslist1;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t/*this.allJobs.forEach((x,key) => {\r\n\t\t\t\t\t this.jobservice.getJobBids(x._id).subscribe(result=>{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.each(result.users, function(index, value) { \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tresult.users[index].width = value.userRating*20;\r\n\t\t\t\t\t\t\tresult.users[index].jobId = x.jobId;\r\n\t\t\t\t\t\t\tresult.users[index].job_created = x.created_at;\r\n\t\t\t\t\t\t\tresult.users[index].user_id = value._id;\r\n\t\t\t\t\t\t\tresult.users[index].job_id = x._id;\r\n\t\t\t\t\t\t\t//this.allJobs[index].userEmail =  value.email;\r\n\t\t\t\t\t\t});\t \r\n\t\t\t\t\t\t\r\n \t\t\t\t\t\tthis.userslist = result.users; \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}); */\r\n\t\t\r\n\t\t\t\t/* \tthis.jobservice.getBidsOnJobUser(x._id).subscribe(result1 =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log(result1);\r\n\t\t\t\t\t\tif(result1.success){\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidsOn =  result1.data.hired_decline;\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidder_id =  result1.data.userId;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidsOn =  result1.data.hired_decline;\r\n\t\t\t\t\t\t\tthis.allJobs[key].bidder_id =  result1.data.userId;\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t});  \r\n\t\t\t\t});*/\r\n\t\t\t\tconsole.log(this.userslist);\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\t//this._flashMessagesService.show(\"No job founds\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}   \r\n\t\t   \r\n\t\t});\r\n\t\t\t\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.isValid = false;\r\n\t\t\r\n\t}\r\n\t\r\n\r\n}\r\n","module.exports = \".mat-dialog-container{\\r\\n\\tpadding:35px !important;\\r\\n}\\r\\n.mat-raised-button.mat-primary{\\r\\n\\tbackground-color:#1695C2;\\r\\n}\\r\\n.mat-dialog-content{    margin: 0;\\r\\n    padding: 0;}\\r\\n.mat-dialog-actions{padding:13px !important;position:relative}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JkZXRhaWxzL2RpYWxvZy1oaXJlLWRlY2xpbmUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsdUJBQXVCO0FBQ3hCO0FBQ0E7Q0FDQyx3QkFBd0I7QUFDekI7QUFFQSx3QkFBd0IsU0FBUztJQUM3QixVQUFVLENBQUM7QUFDZixvQkFBb0IsdUJBQXVCLENBQUMsaUJBQWlCIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JkZXRhaWxzL2RpYWxvZy1oaXJlLWRlY2xpbmUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGFpbmVye1xyXG5cdHBhZGRpbmc6MzVweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeXtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiMxNjk1QzI7XHJcbn1cclxuXHJcbi5tYXQtZGlhbG9nLWNvbnRlbnR7ICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7fVxyXG4ubWF0LWRpYWxvZy1hY3Rpb25ze3BhZGRpbmc6MTNweCAhaW1wb3J0YW50O3Bvc2l0aW9uOnJlbGF0aXZlfSJdfQ== */\"","module.exports = \"<div *ngIf=\\\"type==1\\\" class=\\\"col-md-12\\\">\\r\\n\\t<div mat-dialog-content class=\\\"row\\\"  >\\r\\n\\t  <p>Do you want to accept this person's job propsal?</p>\\r\\n\\t</div>\\r\\n\\t<br />\\r\\n\\t<div mat-dialog-actions class=\\\"row\\\" >\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"onYesClick('1')\\\" cdkFocusInitial>Yes</button>\\r\\n\\t\\t<button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">No</button>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div *ngIf=\\\"type==2\\\" class=\\\"col-md-12\\\" >\\r\\n\\t<div mat-dialog-content class=\\\"row\\\" >\\r\\n\\t  <p>Do you want to decline this person's job propsal?</p>\\r\\n\\t</div>\\r\\n\\t<br />\\r\\n\\t<div mat-dialog-actions class=\\\"row\\\" >\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"onYesClick('2')\\\" cdkFocusInitial>Yes</button>\\r\\n\\t\\t<button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">No</button>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \".hire-panel .info .rate span{font-size:14px;font-weight:500}\\r\\n.hire-panel .info .completedjob {\\r\\n\\tcolor: #1691be;\\r\\n\\tfont-weight: 700;\\r\\n\\tfont-size: 14px;\\r\\n\\tdisplay: inline-flex;\\r\\n}\\r\\n.hire_edit {\\r\\n   background: #23bf07;\\r\\n    color: #fff;\\r\\n    padding: 3px 5px;\\r\\n    display: inline-block;\\r\\n    min-width: 70px;\\r\\n    text-align: center;\\r\\n    transition: all linear 0.5s;\\r\\n    font-size: 18px;\\r\\n\\tmargin: 0 10px;\\r\\n}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.job_status{\\r\\n    float: right;\\r\\n    color: green;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.comp_button{color:#fff !important;\\r\\nfont-weight:bold}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.img-view{\\r\\n\\twidth: 136px;\\r\\n\\theight: 136px;\\r\\n\\t  \\r\\n  }\\r\\n.img-view img{\\r\\nwidth: 136px;\\r\\nheight: 136px;\\r\\n-o-object-fit: cover;\\r\\n   object-fit: cover;\\r\\nborder-radius: 50%;\\r\\n}\\r\\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\\r\\nspan.itemcount{width:25px; float:right}\\r\\n.border-class{\\r\\n\\tborder-bottom: 1px dashed #ccc;\\r\\n    width: 97%;\\r\\n    margin: 15px auto;\\r\\n}\\r\\n.desc .loc_lable{    width: 100px;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n\\ttext-align: right;\\r\\n\\tfont-weight:600;\\r\\n\\tfont-size:14px\\r\\n}\\r\\n.desc .loc_lable::after{content:\\\":\\\"}\\r\\n.job-info{\\r\\n    padding: 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.items-moved .job-info {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n.joblisting-panel .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.job-info .title {\\r\\n    font-size: 16px;\\r\\n    margin-top: 15px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n.items-moved.joblisting-panel .title {\\r\\n\\tcolor:#303030;\\r\\n    font-weight: 900;  \\r\\n}\\r\\n@media (max-width: 575.98px){\\r\\n\\t.job_status{\\r\\n\\t\\tfloat: none;\\r\\n\\t}\\r\\n\\t\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JkZXRhaWxzL2pvYmRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkIsY0FBYyxDQUFDLGVBQWU7QUFDM0Q7Q0FDQyxjQUFjO0NBQ2QsZ0JBQWdCO0NBQ2hCLGVBQWU7Q0FDZixvQkFBb0I7QUFDckI7QUFFQTtHQUNHLG1CQUFtQjtJQUNsQixXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLDJCQUEyQjtJQUMzQixlQUFlO0NBQ2xCLGNBQWM7QUFDZjtBQUNBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGlCQUFpQjtBQUNyQjtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDLGdCQUFnQjtBQUNoQjtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmO0FBQ0E7Q0FDRCxZQUFZO0NBQ1osYUFBYTs7RUFFWjtBQUNBO0FBQ0YsWUFBWTtBQUNaLGFBQWE7QUFDYixvQkFBaUI7R0FBakIsaUJBQWlCO0FBQ2pCLGtCQUFrQjtBQUNsQjtBQUNDLGVBQWUsVUFBVSxDQUFDLGVBQWUsQ0FBQyxlQUFlO0FBQzFELGVBQWUsVUFBVSxFQUFFLFdBQVc7QUFFdEM7Q0FDQyw4QkFBOEI7SUFDM0IsVUFBVTtJQUNWLGlCQUFpQjtBQUNyQjtBQUVBLHFCQUFxQixZQUFZO0lBQzdCLGtCQUFrQjtJQUNsQixxQkFBcUI7Q0FDeEIsaUJBQWlCO0NBQ2pCLGVBQWU7Q0FDZjtBQUNEO0FBQ0Esd0JBQXdCLFdBQVc7QUFFbkM7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFHSSxhQUFhO0lBRVQsZUFBZTtBQUN2QjtBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7Q0FDQyxhQUFhO0lBQ1YsZ0JBQWdCO0FBQ3BCO0FBQ0E7Q0FDQztFQUNDLFdBQVc7Q0FDWjs7QUFFRCIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvam9iZGV0YWlscy9qb2JkZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlyZS1wYW5lbCAuaW5mbyAucmF0ZSBzcGFue2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH1cclxuLmhpcmUtcGFuZWwgLmluZm8gLmNvbXBsZXRlZGpvYiB7XHJcblx0Y29sb3I6ICMxNjkxYmU7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn1cclxuXHJcbi5oaXJlX2VkaXQge1xyXG4gICBiYWNrZ3JvdW5kOiAjMjNiZjA3O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBwYWRkaW5nOiAzcHggNXB4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWluLXdpZHRoOiA3MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIGxpbmVhciAwLjVzO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG5cdG1hcmdpbjogMCAxMHB4O1xyXG59XHJcbi5yYXRpbmcge1xyXG4gICAgZmxvYXQ6bGVmdDtcclxufVxyXG4uam9iX3N0YXR1c3tcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbi5jb21wX2J1dHRvbntjb2xvcjojZmZmICFpbXBvcnRhbnQ7XHJcbmZvbnQtd2VpZ2h0OmJvbGR9XHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGlucHV0IHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOi05OTk5cHg7XHJcbiAgICBjbGlwOnJlY3QoMCwwLDAsMCk7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsIHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6MWVtO1xyXG4gICAgcGFkZGluZzowLjFlbTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDoxLjI7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZS1yYXRpbmd7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgfVxyXG4gIC5pbWctdmlld3tcclxuXHR3aWR0aDogMTM2cHg7XHJcblx0aGVpZ2h0OiAxMzZweDtcclxuXHQgIFxyXG4gIH1cclxuICAuaW1nLXZpZXcgaW1ne1xyXG53aWR0aDogMTM2cHg7XHJcbmhlaWdodDogMTM2cHg7XHJcbm9iamVjdC1maXQ6IGNvdmVyO1xyXG5ib3JkZXItcmFkaXVzOiA1MCU7XHJcbn1cclxuIHNwYW4uaXRlbW5hbWV7IHdpZHRoOjIwcHg7Zm9udC13ZWlnaHQ6NjAwO2ZvbnQtc2l6ZToxNHB4IH1cclxuc3Bhbi5pdGVtY291bnR7d2lkdGg6MjVweDsgZmxvYXQ6cmlnaHR9XHJcblxyXG4uYm9yZGVyLWNsYXNze1xyXG5cdGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2NjYztcclxuICAgIHdpZHRoOiA5NyU7XHJcbiAgICBtYXJnaW46IDE1cHggYXV0bztcclxufVxyXG5cclxuLmRlc2MgLmxvY19sYWJsZXsgICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cdGZvbnQtd2VpZ2h0OjYwMDtcclxuXHRmb250LXNpemU6MTRweFxyXG59XHJcbi5kZXNjIC5sb2NfbGFibGU6OmFmdGVye2NvbnRlbnQ6XCI6XCJ9XHJcblxyXG4uam9iLWluZm97XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG4uaXRlbXMtbW92ZWQgLmpvYi1pbmZvIHtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn0gXHJcblxyXG4uam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLmpvYi1pbmZvIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uaXRlbXMtbW92ZWQuam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG5cdGNvbG9yOiMzMDMwMzA7XHJcbiAgICBmb250LXdlaWdodDogOTAwOyAgXHJcbn1cclxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NS45OHB4KXtcclxuXHQuam9iX3N0YXR1c3tcclxuXHRcdGZsb2F0OiBub25lO1xyXG5cdH1cclxuXHRcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\t\\t<h3 class=\\\"mb-4\\\">Estimate Details</h3>\\r\\n\\r\\n\\r\\n\\r\\n\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">\\r\\n\\t\\t\\t\\t\\tSelected Moving Data\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 2\\\">Completed</span>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 1\\\">In Progress</span>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\" *ngIf=\\\"jobData.jobStatus == 0\\\">Open</span>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"job_status\\\"><a text-align=\\\"right\\\" routerLink=\\\"/edit-job/{{jobid}}\\\" class =\\\"hire_edit\\\">Edit</a></span>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tEstimate Date : {{movingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"movingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of movingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"movingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of movingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t \\r\\n<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"movingData\\\">\\r\\n\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\r\\n\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\tItems to be Moved\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.appliances  && movingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of movingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_misc\\\">{{ movingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.appliances_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.appliances_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.appliances && movingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.bedRooms  && movingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of movingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedrooms_misc\\\">{{ movingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.bedRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.bedRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.bedRooms && movingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.livingRooms && movingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of movingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_misc\\\">{{ movingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.livingRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.livingRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.livingRooms && movingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.familyRooms && movingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of movingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_misc\\\">{{ movingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.familyRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.familyRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.familyRooms && movingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.diningRooms  && movingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of movingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_misc\\\">{{ movingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.diningRooms_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.diningRooms_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.diningRooms && movingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.kitchen && movingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of movingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_misc\\\">{{ movingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.kitchen_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.kitchen_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.kitchen && movingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.basement && movingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of movingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_misc\\\">{{ movingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.basement_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.basement_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.basement && movingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.garage  && movingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of movingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_misc\\\">{{ movingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.garage_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.garage_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.garage && movingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"movingData && movingData.patioYard  && movingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of movingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_misc\\\">{{ movingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<b>Need Help in Assembly/Deassembly : </b>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"movingData.patioYard_assembly\\\">Yes</span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!movingData.patioYard_assembly\\\">No</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"movingData.patioYard && movingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Packing Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tEstimate Date : {{packingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of packingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"packingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of packingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"packingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Packed\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.appliances  && packingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of packingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.appliances_misc\\\">{{ packingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.appliances && packingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.bedRooms  && packingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of packingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.bedrooms_misc\\\">{{ packingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.bedRooms && packingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.livingRooms && packingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of packingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.livingRooms_misc\\\">{{ packingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.livingRooms && packingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.familyRooms && packingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of packingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.familyRooms_misc\\\">{{ packingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.familyRooms && packingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.diningRooms  && packingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of packingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.diningRooms_misc\\\">{{ packingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.diningRooms && packingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.kitchen && packingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of packingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.kitchen_misc\\\">{{ packingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.kitchen && packingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.basement && packingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of packingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.basement_misc\\\">{{ packingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.basement && packingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.garage  && packingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of packingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.garage_misc\\\">{{ packingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.garage && packingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"packingData && packingData.patioYard  && packingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of packingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"packingData.patioYard_misc\\\">{{ packingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!packingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"packingData.patioYard && packingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\"  *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Unpacking Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tEstimate Date : {{unpackingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of unpackingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" *ngIf=\\\"unpackingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unpackingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"unpackingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Unpacked\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.appliances  && unpackingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unpackingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.appliances_misc\\\">{{ unpackingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.appliances && unpackingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.bedRooms  && unpackingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unpackingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.bedrooms_misc\\\">{{ unpackingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.bedRooms && unpackingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.livingRooms && unpackingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unpackingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.livingRooms_misc\\\">{{ unpackingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.livingRooms && unpackingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.familyRooms && unpackingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unpackingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.familyRooms_misc\\\">{{ unpackingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.familyRooms && unpackingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.diningRooms  && unpackingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unpackingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.diningRooms_misc\\\">{{ unpackingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.diningRooms && unpackingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.kitchen && unpackingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unpackingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.kitchen_misc\\\">{{ unpackingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.kitchen && unpackingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.basement && unpackingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unpackingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.basement_misc\\\">{{ unpackingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.basement && unpackingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.garage  && unpackingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unpackingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.garage_misc\\\">{{ unpackingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.garage && unpackingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unpackingData && unpackingData.patioYard  && unpackingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unpackingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unpackingData.patioYard_misc\\\">{{ unpackingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unpackingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unpackingData.patioYard && unpackingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar\\\"  *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Loading Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tEstimate Date : {{loadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\" *ngIf=\\\"loadingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingfrom of loadingData.moving_from\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingfrom.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingfrom.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  {{movingfrom.address1}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"loadingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Loaded\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.appliances  && loadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of loadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.appliances_misc\\\">{{ loadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.appliances && loadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.bedRooms  && loadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of loadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.bedrooms_misc\\\">{{ loadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.bedRooms && loadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.livingRooms && loadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of loadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.livingRooms_misc\\\">{{ loadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.livingRooms && loadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.familyRooms && loadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of loadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.familyRooms_misc\\\">{{ loadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.familyRooms && loadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.diningRooms  && loadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of loadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.diningRooms_misc\\\">{{ loadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.diningRooms && loadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.kitchen && loadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of loadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.kitchen_misc\\\">{{ loadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.kitchen && loadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.basement && loadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of loadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.basement_misc\\\">{{ loadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.basement && loadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.garage  && loadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of loadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.garage_misc\\\">{{ loadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.garage && loadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"loadingData && loadingData.patioYard  && loadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of loadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"loadingData.patioYard_misc\\\">{{ loadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!loadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loadingData.patioYard && loadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\r\\n\\t\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">Selected Unloading Data</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"container title-icon-bar\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\tEstimate Date : {{unloadingData.jobStart | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"border-class\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\" *ngIf=\\\"unloadingData\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTo Location\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let movingto of unloadingData.moving_to\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Floor </span>  {{ movingto.floor }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">State </span>  {{ movingto.state }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">County </span>  {{movingto.county | titlecase}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">City </span>  {{movingto.city | titlecase }}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"bidStatus == 1\\\"  class=\\\"data_row\\\"><span class=\\\"loc_lable\\\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t</div>\\t\\r\\n\\t</div>\\r\\n\\t<div class=\\\"container title-icon-bar items-moved\\\" *ngIf=\\\"unloadingData\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\t\\r\\n\\t\\t\\r\\n\\t\\t\\t<div class=\\\"\\\" > \\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"job-info row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"title col-12 mb-5 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\tItems to be Unloaded\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.appliances  && unloadingData.appliances.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Appliances</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let appliance of unloadingData.appliances\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ appliance.applianceItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ appliance.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.appliances_misc\\\">{{ unloadingData.appliances_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.appliances_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.appliances && unloadingData.appliances.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.bedRooms  && unloadingData.bedRooms.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Bedrooms</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let bedroom of unloadingData.bedRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ bedroom.bedRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ bedroom.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.bedrooms_misc\\\">{{ unloadingData.bedrooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.bedrooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.bedRooms && unloadingData.bedRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.livingRooms && unloadingData.livingRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Living Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let living of unloadingData.livingRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ living.livingRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ living.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.livingRooms_misc\\\">{{ unloadingData.livingRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.livingRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.livingRooms && unloadingData.livingRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.familyRooms && unloadingData.familyRooms.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Family Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let family of unloadingData.familyRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ family.familyRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ family.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.familyRooms_misc\\\">{{ unloadingData.familyRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.familyRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.familyRooms && unloadingData.familyRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.diningRooms  && unloadingData.diningRooms.length > 0\\\">\\t\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Dining Room</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let dining of unloadingData.diningRooms\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ dining.diningRoomsItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ dining.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.diningRooms_misc\\\">{{ unloadingData.diningRooms_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.diningRooms_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.diningRooms && unloadingData.diningRooms.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.kitchen && unloadingData.kitchen.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Kitchen</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let kitchen of unloadingData.kitchen\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ kitchen.kitchenItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ kitchen.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.kitchen_misc\\\">{{ unloadingData.kitchen_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.kitchen_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.kitchen && unloadingData.kitchen.length == 0\\\">-- Nothing To Move --</div>\\t  \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.basement && unloadingData.basement.length > 0\\\">\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Basement</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\" *ngFor=\\\"let basement of unloadingData.basement\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ basement.basementItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ basement.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.basement_misc\\\">{{ unloadingData.basement_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.basement_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.basement && unloadingData.basement.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.garage  && unloadingData.garage.length > 0\\\">\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Garage</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let garage of unloadingData.garage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ garage.garageItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ garage.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.garage_misc\\\">{{ unloadingData.garage_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.garage_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.garage && unloadingData.garage.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\" *ngIf=\\\"unloadingData && unloadingData.patioYard  && unloadingData.patioYard.length > 0\\\" >\\t  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">Patio/Yard</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\"  *ngFor=\\\"let patioYard of unloadingData.patioYard\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\">{{ patioYard.patioYardItem.name }}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemcount\\\">{{ patioYard.items }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<b>Instructions : </b>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"unloadingData.patioYard_misc\\\">{{ unloadingData.patioYard_misc}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"itemname\\\" *ngIf=\\\"!unloadingData.patioYard_misc\\\">--- Nothing ---</span>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"unloadingData.patioYard && unloadingData.patioYard.length == 0\\\">-- Nothing To Move --</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"container hire-panel-wrap\\\">\\r\\n\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row\\\" *ngIf=\\\"jobData.jobStatus == 0\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\" > \\r\\n\\t\\t\\t\\t<div class=\\\"hire-panel\\\" *ngFor=\\\"let list of userslist\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"img-view\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img *ngIf=\\\"list.image_url\\\" src=\\\"{{list.image_url}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img *ngIf=\\\"!list.image_url\\\" src=\\\"../../../assets/images/no_user_images.jpg\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"name\\\"><a class=\\\"tc-wrap\\\" routerLink=\\\"/partner-profile/{{list._id}}\\\">{{list.firstname}} {{list.lastname}}</a></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"info col-md-3 text-center\\\" >\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"list.width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row completedjob\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{list.totalCompletedJob}} jobs completed\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"action\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"!list.bidStatus && list.bidStatus ==0\\\" (click)=\\\"openDialog(1,jobData._id,list._id)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"fas fa-check\\\"></i>{{hire_decline}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"!list.bidStatus && list.bidStatus ==0\\\" (click)=\\\"openDialog(2,jobData._id,list._id)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"fas fa-times\\\"></i>{{decline_hire}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"list.bidStatus && list.bidStatus ==1\\\" (click)=\\\"openDialog(1,jobData._id,list._id)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"fas fa-check\\\"></i>Hired</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"list.bidStatus && list.bidStatus ==2\\\" (click)=\\\"openDialog(1,jobData._id,list._id)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"fas fa-times\\\"></i>Declined</a>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"action\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"list.bidStatus && list.bidStatus ==1\\\" routerLink=\\\"/complete-job/{{jobData._id}}/{{list._id}}\\\">Complete Job</a>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row\\\" *ngIf=\\\"jobData.jobStatus == 1\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\" > \\r\\n\\t\\t\\t\\t<div class=\\\"hire-panel\\\" *ngFor=\\\"let list of userslist\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"img-view\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img *ngIf=\\\"list.image_url\\\" src=\\\"{{list.image_url}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img *ngIf=\\\"!list.image_url\\\" src=\\\"../../../assets/images/no_user_images.jpg\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"name\\\"><a class=\\\"tc-wrap\\\" routerLink=\\\"/partner-profile/{{list._id}}\\\">{{list.firstname}} {{list.lastname}}</a></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"info col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"list.width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"completedjob\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{list.totalCompletedJob}} estimates completed\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"action\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"!list.bidStatus && list.bidStatus ==0\\\" (click)=\\\"openDialog(1,jobData._id,list._id)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"fas fa-check\\\"></i>{{hire_decline}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"!list.bidStatus && list.bidStatus ==0\\\" (click)=\\\"openDialog(2,jobData._id,list._id)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"fas fa-times\\\"></i>{{decline_hire}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"list.bidStatus && list.bidStatus ==1\\\" (click)=\\\"openDialog(1,jobData._id,list._id)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"fas fa-check\\\"></i>Hired -  {{list.hired_decline | date:'mediumDate'}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"list.bidStatus && list.bidStatus ==2\\\" (click)=\\\"openDialog(1,jobData._id,list._id)\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"fas fa-times\\\"></i>Declined -  {{list.hired_decline | date:'mediumDate'}}</a>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"action\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a class=\\\"btn btn-primary comp_button\\\" *ngIf =\\\"list.bidStatus && list.bidStatus ==1\\\" routerLink=\\\"/complete-job/{{jobData._id}}/{{list._id}}\\\">Complete Estimate</a>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"row\\\" *ngIf=\\\"jobData.jobStatus == 2\\\">\\r\\n\\t\\t\\t<div class=\\\"col\\\" > \\r\\n\\t\\t\\t\\t<div class=\\\"hire-panel\\\" *ngFor=\\\"let list of userslist\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"img-view\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img *ngIf=\\\"list.image_url\\\" src=\\\"{{list.image_url}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img *ngIf=\\\"!list.image_url\\\" src=\\\"../../../assets/images/no_user_images.jpg\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"name\\\"><a class=\\\"tc-wrap\\\" routerLink=\\\"/partner-profile/{{list._id}}\\\">{{list.firstname}} {{list.lastname}}</a></div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"info col-md-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"list.width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"completedjob\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{list.totalCompletedJob}} estimates completed\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"completedjob\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tCompleted on {{jobData.completedAt | date:'mediumDate'}}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n</div> \\r\\n</div> \\r\\n</div> \\r\\n \"","import { Component, OnInit ,Input, Output, EventEmitter,Inject } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { ActivatedRoute, Router,NavigationEnd } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\nimport { JobService } from '../../../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { environment } from '../../../../../../environments/environment';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { Title } from '@angular/platform-browser';\r\nexport interface DialogData {\r\n\tjobID:any;type:any;userid:any;\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'jobdetails.component.html',\r\n  styleUrls : [ './jobdetails.component.css' ]\r\n})\r\nexport class DetailsJobComponent implements OnInit{\r\n\t@Input() rating: number;\r\n\t@Input() itemId: number;\r\n\t@Output() ratingClick: EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\t\r\n\tjobid = '';\tappliances:any='';basements:any='';\tdiningrooms:any='';bedrooms:any='';\r\n\tfamilyrooms:any='';garages:any='';kitchens:any='';livingrooms:any='';patioyards:any='';\r\n\tuserslist:any='';\tjobData:any='';thisisdone:any=\"\";alllocations:any=\"\";\r\n\tstates:any = '';counties:any = '';cities:any = '';allappliances:any='';\r\n\tshow_dialog : boolean = false;\r\n\tbutton_text:any='';image_url:any='';hire_decline:any='';decline_hire:any='';\r\n\t movingData:any='';\r\n\tpackingData:any='';\r\n\tunpackingData:any='';\r\n\tloadingData:any='';\r\n\tunloadingData:any='';\r\n\t\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private router: Router,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,public dialog: MatDialog,private titleService: Title)\r\n\t{\r\n\t\tthis.getSavedJob();\r\n\t\tthis.titleService.setTitle( 'Job Detail | MoveLaunch' );\r\n\t\t\r\n\t\t\r\n\t\tthis.router.routeReuseStrategy.shouldReuseRoute = function(){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.router.events.subscribe((evt) => {\r\n\t\t\tif (evt instanceof NavigationEnd) {\r\n\t\t\t   // trick the Router into believing it's last link wasn't previously loaded\r\n\t\t\t   this.router.navigated = false;\r\n\t\t\t   // if you need to scroll back to top, here is the right place\r\n\t\t\t   window.scrollTo(0, 0);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\topenDialog(type,jobID,userid): void {\r\n\t\tconst dialogRef = this.dialog.open(HireDeclineDialog, {\r\n\t\t  width: '450px',\r\n\t\t  data: {jobID:jobID,type:type,userid:userid}\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\t\r\n\t\t\tif(result == 'Success'){\r\n\t\t\t\tthis._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}\r\n\t\t\tconsole.log(result);\r\n\t\t\tif(result == 'Hired'){\r\n\t\t\t\tthis.hire_decline = this.hire_decline ? 'Hired' : 'Hire';\r\n\t\t\t\tthis.decline_hire = this.decline_hire ? 'Decline' : 'Declined';\r\n\t\t\t\t\r\n\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\tthis.router.navigate(['/user-in-progress-jobs']);\r\n\t\t\t\t},1200);\r\n\t\t\t}\r\n\t\t\tif(result == 'Declined'){\r\n\t\t\t\tthis.decline_hire = this.decline_hire ? 'Declined' : 'Decline';\r\n\t\t\t\tthis.hire_decline = this.decline_hire ? 'Hire' : 'Hired';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t  }\r\n\t  \r\n\tgetUserListonJob(){\r\n\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\t\t\r\n\t\tthis.jobservice.getJobBids(this.jobid).subscribe(result=>{\r\n\t\t\t$.each(result.users, function(index, value) { \t\t\r\n\t\t\t\tresult.users[index].width = value.userRating*20;\r\n\t\t\t\tif(value.profile_pic){\r\n\t\t\t\t\tresult.users[index].image_url  = environment.partner_image_url+value._id+'/'+value.profile_pic;\r\n\t\t\t\t}\t\r\n\t\t\t});\t \r\n\t\t\tconsole.log(result);\r\n\t\t\tthis.userslist = result.users;\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\tgetSavedJob(){\r\n\t\tvar user_id = localStorage.getItem('userid');\r\n\t\tlocalStorage.setItem('jobType','saved');\r\n\t\t\r\n\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\t\tthis.jobservice.getEditJob(this.jobid).subscribe(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t/* this.createFromLocationForm(); */\r\n\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\tthis.jobData = result.job;\r\n\t\t\t\t//this.jobData.servicename = this.jobData.serviceId.name;\r\n\t\t\t\t \r\n\t\t\t\tif(result.job.moving && result.job.moving.length > 0){\r\n\t\t\t\t\tthis.movingData = result.job.moving[0];\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.movingData);\r\n\t\t\t\tif(result.job.packing && result.job.packing.length > 0){\r\n\t\t\t\t\tthis.packingData = result.job.packing[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(result.job.unpacking && result.job.unpacking.length > 0){\r\n\t\t\t\t\tthis.unpackingData = result.job.unpacking[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(result.job.loading && result.job.loading.length > 0){\r\n\t\t\t\t\tthis.loadingData = result.job.loading[0];\r\n\t\t\t\t}\r\n\t\t\t\tif(result.job.unloading && result.job.unloading.length > 0){\r\n\t\t\t\t\tthis.unloadingData = result.job.unloading[0];\r\n\t\t\t\t}\r\n\t\t\t\tthis.getUserListonJob();\r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(\"No Saved Job Found.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t  } \r\n\t\t});\r\n\t\t\r\n\t\t \r\n\t}\r\n\t\r\n\tdeleteJob(jobID){\r\n\t\tthis.jobservice.deleteJob(jobID).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis._flashMessagesService.show(\"job has been deleted successfully\", { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}else{\r\n\t\t\t\tthis._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t} \r\n\t\t   \r\n\t\t}); \r\n\t}\r\n\t\r\n\ttoggle() {\r\n\t\tthis.show_dialog = !this.show_dialog;\r\n\t\tthis.button_text = this.show_dialog ? 'View Less' : 'View More';\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.jobid = this.route.snapshot.paramMap.get('jobid');\r\n\t\tthis.button_text = 'View More';\r\n\t\tthis.hire_decline = 'Hire';\r\n\t\tthis.decline_hire = 'Decline';\r\n\t}\r\n\r\n}\r\n@Component({\r\n  selector: 'dialog-hire-decline',\r\n  templateUrl: 'dialog-hire-decline.html',\r\n  styleUrls : [ './dialog-hire-decline.css' ]\r\n})\r\nexport class HireDeclineDialog {\r\n\t\r\n\tpublic jobID:any='';\r\n \tpublic type:any='';\r\n \tpublic userid:any='';\r\n \r\n  constructor(\r\n    public dialogRef: MatDialogRef<HireDeclineDialog>,  @Inject(MAT_DIALOG_DATA) public data: DialogData,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder) {\r\n\t\t\r\n\t\tconsole.log(data);\r\n\t\tthis.jobID = data.jobID;\r\n\t\tthis.type = data.type;\r\n\t\tthis.userid = data.userid;\r\n\t} \r\n\r\n\tonNoClick(): void {\r\n\t\tthis.dialogRef.close('ignore');\r\n\t}\r\n\tonYesClick(type_sent): void {\r\n\t \r\n\t\tthis.jobservice.hireDecline(type_sent,this.jobID,this.userid).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success && type_sent ==1){\r\n\t\t\t\tthis.dialogRef.close('Hired');\r\n\t\t\t}\r\n\t\t\tif(result.success && type_sent ==2){\r\n\t\t\t\tthis.dialogRef.close('Declined');\r\n\t\t\t} \r\n\t\t   this.dialogRef.close('ignore');\r\n\t\t}); \r\n\t\t\r\n\t}\r\n\r\n}","module.exports = \".mat-dialog-container{\\r\\n\\tpadding:35px !important;\\r\\n}\\r\\n.mat-raised-button.mat-primary{\\r\\n\\tbackground-color:#1695C2;\\r\\n}\\r\\n.mat-dialog-actions{padding:25px 0;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JsaXN0aW5nL2RpYWxvZy1vdmVydmlldy1leGFtcGxlLWRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyx1QkFBdUI7QUFDeEI7QUFDQTtDQUNDLHdCQUF3QjtBQUN6QjtBQUVBLG9CQUFvQixjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3VzZXJzL2pvYmxpc3RpbmcvZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZGlhbG9nLWNvbnRhaW5lcntcclxuXHRwYWRkaW5nOjM1cHggIWltcG9ydGFudDtcclxufVxyXG4ubWF0LXJhaXNlZC1idXR0b24ubWF0LXByaW1hcnl7XHJcblx0YmFja2dyb3VuZC1jb2xvcjojMTY5NUMyO1xyXG59XHJcblxyXG4ubWF0LWRpYWxvZy1hY3Rpb25ze3BhZGRpbmc6MjVweCAwO30iXX0= */\"","module.exports = \"<div mat-dialog-content>\\r\\n  <p>Do you want to delete this Estimates?</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"onYesClick()\\\" cdkFocusInitial>Yes</button>\\r\\n\\t<button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">No</button>\\r\\n</div>\\r\\n\"","module.exports = \".action a{margin-right:7px}\\r\\n.joblisting-panel .content-left .time_ago{font-size:12px;}\\r\\n.mode.New .fas {\\r\\n    color: #0CAF03;\\r\\n    font-size: 14px;\\r\\n}\\r\\n.mode.Old .fas {\\r\\n    color: red;\\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JsaXN0aW5nL2pvYmxpc3RpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLGdCQUFnQjtBQUMxQiwwQ0FBMEMsY0FBYyxDQUFDO0FBRXpEO0lBQ0ksY0FBYztJQUNkLGVBQWU7QUFDbkI7QUFDQTtJQUNJLFVBQVU7SUFDVixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JsaXN0aW5nL2pvYmxpc3RpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24gYXttYXJnaW4tcmlnaHQ6N3B4fVxyXG4uam9ibGlzdGluZy1wYW5lbCAuY29udGVudC1sZWZ0IC50aW1lX2Fnb3tmb250LXNpemU6MTJweDt9XHJcblxyXG4ubW9kZS5OZXcgLmZhcyB7XHJcbiAgICBjb2xvcjogIzBDQUYwMztcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG4ubW9kZS5PbGQgLmZhcyB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4iXX0= */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">All Estimates Posted</h3>\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Created Date</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Job Status</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Bid Count</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"allJobs && allJobs.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let jobs of allJobs\\\" ngClass=\\\"myclass_{{jobs._id}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" routerLink=\\\"/detail-job/{{jobs._id}}\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.jobStatus}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{jobs.bidcount}} Bids</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\" routerLink=\\\"/detail-job/{{jobs._id}}\\\">View</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\" routerLink=\\\"/edit-job/{{jobs._id}}\\\">Edit</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\" (click)=\\\"openDialog(jobs._id)\\\" href=\\\"javascript:void(0)\\\" >Delete</a>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t<tbody *ngIf=\\\"!allJobs || allJobs.length == 0\\\" >\\r\\n\\t\\t\\t\\t\\t\\t<tr><td colspan=\\\"5\\\"><p class=\\\"text-center\\\">No estimates posted</td></tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\nimport { JobService } from '../../../../../services/job.service';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n  jobID:any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'joblisting.component.html',\r\n  styleUrls : [ './joblisting.component.css' ]\r\n})\r\nexport class ListingJobComponent implements OnInit{\r\n\t\r\n\tfirst_show = false;\r\n\tval:any='';\r\n\tallJobs:any=\"\";\r\n\tjobservices:any=\"\";\r\n\tallservice:any=\"\";\r\n\tisValid : boolean = false;\r\n\tname:any='';\r\n\tanimal:any='';\r\n\tjobidisset:any='';\r\n\tmessage:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, \r\n\t\tprivate fb: FormBuilder,public dialog: MatDialog,private titleService: Title)\r\n\t{\r\n\t\t this.getAllJobs();\r\n\t\t this.titleService.setTitle( 'All Jobs | MoveLaunch' );\r\n\t}\r\n\t\r\n\topenDialog(jobId): void {\r\n\t\tconst dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n\t\t  width: '450px',\r\n\t\t  data: {jobID:jobId}\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\tif(result == 'Success'){\r\n\t\t\t\tthis._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t  }\r\n\t  \r\n\tgetAllJobs(){\r\n\t\tthis.jobservice.getAllJobs().subscribe(result =>\r\n\t\t{\r\n\t\t\tthis.isValid = true;\r\n\t\t\tif(result.success){\r\n\t\t\t\t var d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');  \r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs = result.job;\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar d1 = new Date(x.jobStart);\r\n\t\t\t\t\tvar month1 = '' + (d1.getMonth() + 1);\r\n\t\t\t\t\tvar day1 = '' + d1.getDate();\r\n\t\t\t\t\tvar year1 = d1.getFullYear();\r\n\t\t\t\t\tif (month1.length < 2) month1 = '0' + month1;\r\n\t\t\t\t\tif (day1.length < 2) day1 = '0' + day1;\r\n\t\t\t\t\tvar mindateset1 = [year1, month1, day1].join('-');\r\n\t\t\t\t\tif(mindateset1 < mindateset){\r\n\t\t\t\t\t\tresult.job[key].jobStatus =  'Old';\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresult.job[key].jobStatus =  'New';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(this.allJobs);\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tthis._flashMessagesService.show(\"Error in Creating Job\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t} \r\n\t\t   \r\n\t\t}); \r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.isValid = false;\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog-overview-example-dialog.html',\r\n  styleUrls : [ './dialog-overview-example-dialog.css' ]\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n\t\r\n\tpublic jobID:any='';\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,  @Inject(MAT_DIALOG_DATA) public data: DialogData,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder) {\r\n\t\t\r\n\t\tthis.jobID = data.jobID;\r\n\t}\r\n\r\n\tonNoClick(): void {\r\n\t\tthis.dialogRef.close('ignore');\r\n\t}\r\n  onYesClick(): void {\r\n\t\tthis.jobservice.deleteJob(this.jobID).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tlet myElement = document.getElementsByClassName('myclass_'+this.jobID) as HTMLCollectionOf<HTMLElement>;\r\n\t\t\t\tmyElement[0].style.display = \"none\";\r\n\t\t\t\tthis.dialogRef.close('Success');\r\n\t\t\t}\r\n\t\t   \r\n\t\t});  \r\n  }\r\n\r\n}\r\n","module.exports = \".mat-dialog-container{\\r\\n\\tpadding:35px !important;\\r\\n}\\r\\n.mat-raised-button.mat-primary{\\r\\n\\tbackground-color:#1695C2;\\r\\n}\\r\\n.mat-dialog-actions{padding:25px 0;}\\r\\n.desc{\\r\\n\\tline-height:18px;\\r\\n\\tfont-size:14px;\\r\\n\\tpadding:15px 18px;\\r\\n}\\r\\n.desc label{font-weight:bold}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy91c2Vyc2NvbXBsZXRlZGpvYnMvZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLHVCQUF1QjtBQUN4QjtBQUNBO0NBQ0Msd0JBQXdCO0FBQ3pCO0FBRUEsb0JBQW9CLGNBQWMsQ0FBQztBQUduQztDQUNDLGdCQUFnQjtDQUNoQixjQUFjO0NBQ2QsaUJBQWlCO0FBQ2xCO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUI7SUFDSSxVQUFVO0FBQ2Q7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy91c2Vyc2NvbXBsZXRlZGpvYnMvZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZGlhbG9nLWNvbnRhaW5lcntcclxuXHRwYWRkaW5nOjM1cHggIWltcG9ydGFudDtcclxufVxyXG4ubWF0LXJhaXNlZC1idXR0b24ubWF0LXByaW1hcnl7XHJcblx0YmFja2dyb3VuZC1jb2xvcjojMTY5NUMyO1xyXG59XHJcblxyXG4ubWF0LWRpYWxvZy1hY3Rpb25ze3BhZGRpbmc6MjVweCAwO31cclxuXHJcblxyXG4uZGVzY3tcclxuXHRsaW5lLWhlaWdodDoxOHB4O1xyXG5cdGZvbnQtc2l6ZToxNHB4O1xyXG5cdHBhZGRpbmc6MTVweCAxOHB4O1xyXG59XHJcbi5kZXNjIGxhYmVse2ZvbnQtd2VpZ2h0OmJvbGR9XHJcbi5yYXRpbmcge1xyXG4gICAgZmxvYXQ6bGVmdDtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OjEuMjtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlciB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjMTY5MWJlO1xyXG59XHJcblxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlcixcclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlciB+IGxhYmVsLFxyXG4ucmF0aW5nID4gbGFiZWw6aG92ZXIgfiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDIxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9Il19 */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<h3 class=\\\"col-md-12\\\">User Rating and Feedback</h3>\\r\\n\\t<div class=\\\" col-md-12\\\">\\r\\n\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"desc col-md-12\\\">\\r\\n\\t\\t<label>Comments</label> : {{reviews.feedback}}\\r\\n\\t</div>\\r\\n\\t<div class=\\\"desc col-md-12\\\">\\r\\n\\t\\t<a (click)= \\\"closeDialog();\\\" routerLink=\\\"/edit-feedback/{{reviews._id}}\\\"><i class=\\\"fa fa-pencil\\\"></i> Edit Feedback</a>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \".action a{margin-right:7px}\\r\\n.joblisting-panel .content-left .time_ago{font-size:12px;}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  /* float: left; */\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n  \\r\\n   \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy91c2Vyc2NvbXBsZXRlZGpvYnMvdXNlcnNjb21wbGV0ZWRqb2JzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxnQkFBZ0I7QUFDMUIsMENBQTBDLGNBQWMsQ0FBQztBQUV6RDtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy91c2Vyc2NvbXBsZXRlZGpvYnMvdXNlcnNjb21wbGV0ZWRqb2JzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uIGF7bWFyZ2luLXJpZ2h0OjdweH1cclxuLmpvYmxpc3RpbmctcGFuZWwgLmNvbnRlbnQtbGVmdCAudGltZV9hZ297Zm9udC1zaXplOjEycHg7fVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OjEuMjtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlciB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjMTY5MWJlO1xyXG59XHJcblxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlcixcclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlciB+IGxhYmVsLFxyXG4ucmF0aW5nID4gbGFiZWw6aG92ZXIgfiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDIxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICAvKiBmbG9hdDogbGVmdDsgKi9cclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9XHJcbiAgXHJcbiAgICJdfQ== */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\t\\t\\t\\r\\n\\t\\t<h3 class=\\\"mb-4\\\">History of Completed Estimates</h3>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Request Date</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Company Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Response On</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>$</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Attachments</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Rating</th>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tbody *ngIf=\\\"compuserslist && compuserslist.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let jobs of compuserslist\\\">\\r\\n\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" routerLink=\\\"/detail-job/{{jobs.job_id}}\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{jobs.job_created | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{jobs.companyName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>${{jobs.bid_price}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td><p *ngIf=\\\"jobs.attachemnt_pic\\\">{{jobs.attachemnt_pic}}</p><p *ngIf=\\\"!jobs.attachemnt_pic\\\">N.A.</p></td>\\r\\n\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"jobs.width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t<tbody *ngIf=\\\"!compuserslist || compuserslist.length == 0\\\" >\\r\\n\\t\\t\\t\\t\\t<tr><td colspan=\\\"7\\\"><p class=\\\"text-center\\\">No estimates completed</td></tr>\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t</table>                                \\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { UserService } from '../../../../../services/user.service';\r\nimport { JobService } from '../../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n  jobID:any;\r\n  reviews:any;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'userscompletedjobs.component.html',\r\n     styleUrls : [ './userscompletedjobs.component.css' ]\r\n})\r\nexport class UsersCompletedJobsComponent implements OnInit{\r\n\t\r\n\tfirst_show = false;val:any='';\r\n\tallJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tisValid : boolean = false;\r\n\tname:any='';animal:any='';jobidisset:any='';\r\n\tmessage:any='';compuserslist:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,public dialog: MatDialog,private titleService: Title)\r\n\t{\r\n\t\t this.getAllJobs(); \r\n\t\t this.titleService.setTitle( 'Completed Jobs | MoveLaunch' );\r\n\t}\r\n\topenDialog(jobId): void {\r\n\t\tconst dialogRef = this.dialog.open(DialogOverviewFeedback, {\r\n\t\t  width: '450px',\r\n\t\t  data: {jobID:jobId}\r\n\t\t});\r\n\t\t\r\n\t\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\tif(result == 'Success'){\r\n\t\t\t\tthis._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\t\r\n\t \r\n\tgetAllJobs(){\r\n\t\t\r\n\t\tthis.jobservice.getFilteredJobsForUserDashboard(2).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\tconsole.log(result.jobs);\r\n\t\t\t\tthis.allJobs = result.jobs;\r\n\t\t\t\tlet userslist2 = [];\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\tx.bidsData.forEach((value,index)=>{\r\n\t\t\t\t\t\tuserslist2.push({'job_id':x._id,'user_id':value.userId._id,'bid_price':value.bid_price,'created_at':value.created_at,'bidStatus':value.bidStatus,'companyName':value.userId.companyName,'jobId':x.jobId,'job_created':x.created_at,'width':value.rating*20});\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}); \r\n\t\t\t\t\r\n\t\t\t\tthis.compuserslist = userslist2;\r\n\t\t\t\tconsole.log(this.compuserslist);\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\t//this._flashMessagesService.show(\"No job founds\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}   \r\n\t\t   \r\n\t\t});\r\n\t\t\r\n\t\t/* \r\n\t\tthis.jobservice.getFilteredJobsForUser(2).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs = result.jobs;\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\tthis.jobservice.getJobBids(x._id).subscribe(result=>{\r\n\t\t\t\t\t\tconsole.log(result.users);\r\n\t\t\t\t\t\t$.each(result.users, function(index, value) { \t\t\r\n\t\t\t\t\t\t\tresult.users[index].width = value.userRating*20;\r\n\t\t\t\t\t\t\tresult.users[index].jobId = x.jobId;\r\n\t\t\t\t\t\t\tresult.users[index].job_created = x.created_at;\r\n\t\t\t\t\t\t\t//this.allJobs[index].userEmail =  value.email;\r\n\t\t\t\t\t\t});\t \r\n\t\t\t\t\t\tconsole.log(result);\r\n \t\t\t\t\t\tthis.compuserslist = result.users; \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\t//this._flashMessagesService.show(\"No job founds\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}   \r\n\t\t   \r\n\t\t}); */\r\n\t\t\t\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.isValid = false;\r\n\t\t\r\n\t}\r\n\t\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: 'dialog-overview-example-dialog.html',\r\n  styleUrls : [ './dialog-overview-example-dialog.css' ]\r\n})\r\nexport class DialogOverviewFeedback {\r\n\tpublic jobID:any='';public reviews:any='';public width:any='';\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewFeedback>,  @Inject(MAT_DIALOG_DATA) public data: DialogData,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder) {\r\n\t\tthis.jobID = data.jobID;\r\n\t\tthis.getFeedback(this.jobID);\r\n\t}\r\n\tgetFeedback(jobID){\r\n\t\tthis.jobservice.getJobFeedbackForUser(jobID).subscribe(result=>{\r\n\t\t\tthis.reviews = result.review;\r\n\t\t\tthis.width = result.review.rating*20;\r\n\t\t});\r\n\t}\r\n\tcloseDialog(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n}\r\n","module.exports = \"<div class=\\\"form-wrapper signin-form\\\">\\r\\n<div class=\\\"form-inner\\\">\\r\\n<div class=\\\"form-header\\\">Change Password</div> \\r\\n           <form class=\\\"form-main\\\" [formGroup]=\\\"angForm\\\" novalidate>\\r\\n\\t\\t    <div class=\\\"first_form\\\">\\r\\n\\t\\t\\t\\t<img class=\\\"logo-icon\\\" src=\\\"../../../../assets/images/logo-icon.png\\\">\\r\\n\\t\\t\\t\\t<h1>Change <span>Password</span></h1>\\r\\n\\t\\t\\t\\t<flash-messages></flash-messages>   \\r\\n\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"  placeholder=\\\"Password\\\" #password />\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.password.errors.required\\\">Password is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.password.errors?.minlength\\\"> Password must be at least 5 characters long.</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.password.errors?.maxlength\\\"> Password can be max 10 characters long.</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"confirm_password\\\"  [ngClass]=\\\"{ 'is-invalid': (submitted && f.confirm_password.errors) || submitted && angForm.errors}\\\"  placeholder=\\\"Confirm Password\\\" #confirm_password />\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"(submitted && f.confirm_password.errors) || (submitted && angForm.errors)\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.confirm_password.errors?.required\\\">Confirm Password is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.confirm_password.errors?.minlength\\\">Confirm Password must be at least 5 characters long.</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.confirm_password.errors?.maxlength\\\">Confirm Password can be max 10 characters long.</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && angForm.errors\\\">Password do not match.</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t  <button (click)=\\\"onSubmit()\\\"  (ngSubmit)=\\\"onSubmit()\\\" class=\\\"btn btn-lg btn-primary\\\">Submit</button><br />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</form>\\r\\n     </div>\\r\\n </div>\\r\\n \\r\\n \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormControl,FormGroupDirective,NgForm } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { Title } from '@angular/platform-browser';\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n    const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\r\n\r\n    return (invalidCtrl || invalidParent);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'changepassword.component.html'\r\n})\r\nexport class ChangepasswordComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  title = 'Login User';\r\n  //error :any=\"\";\r\n  result :any =\"\";\r\n   submitted = false;\r\n  verifycode ='';\r\n  matcher = new MyErrorStateMatcher();\r\n  \r\n  constructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute, private router: Router, private userservice: UserService, private fb: FormBuilder,private titleService: Title\t) { \r\n    this.LoginForm();\r\n\t\t\tthis.titleService.setTitle( 'Change Passowrd | MoveLaunch' );\r\n   }\r\n\t\r\n  LoginForm() {\r\n    this.angForm = this.fb.group({ \r\n\t\tpassword:['',  Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(10)])],\r\n\t\tconfirm_password:['',  Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(10)])],\r\n\t}, {validator: this.checkPasswords });\r\n\r\n\t\r\n  }\r\n\tget f() { \r\n\t\r\n\t\treturn this.angForm.controls; \r\n\t}\r\n    onSubmit() {\r\n\t\t\r\n        this.submitted = true;\r\n\t\r\n        // stop here if form is invalid\r\n        if(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\tvar user = this.angForm.value;\r\n\t\t\t//this.verifycode = this.route.snapshot.paramMap.get('verifycode');\r\n\t\t\t\r\n\t\t\tthis.userservice.updatePassword(user.password).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-success',timeout:5000});\r\n\t\t\t\t}else{\r\n\t\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:10000}); \r\n\t\t\t\t}  \r\n\t\t\t   \r\n\t\t\t}); \r\n\t\t\t \r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n    }\r\n\tcheckPasswords(group: FormGroup) { // here we have the 'passwords' group\r\n\t\tlet pass = group.controls.password.value;\r\n\t\tlet confirmPass = group.controls.confirm_password.value;\r\n\t\treturn pass === confirmPass ? null : { notSame: true }     \r\n\t}\r\n\r\n  ngOnInit() {\r\n\t/* this.verifycode = this.route.snapshot.paramMap.get('verifycode');\r\n\tthis.userservice.password_code(this.verifycode).subscribe(result => {\r\n\t\tif(!result.success){\r\n\t\t\tthis._flashMessagesService.show(\"This code has been expired.\", { cssClass: 'alert-danger',timeout:2000});\r\n\t\t} \t\r\n\t\t\r\n\t}); */\r\n\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \".mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#1691be !important}\\r\\n.mat-checkbox{display:block}\\r\\ninput[type=checkbox], input[type=radio]{margin-right:8px}\\r\\n.job_dashboard .table .hire{\\r\\n    margin: 3px 0;\\r\\n}\\r\\n.payment_banner{\\r\\n\\tdisplay: block;\\r\\n\\twidth: 100%;\\r\\n\\ttext-align: center;\\r\\n\\tcolor: red;\\r\\n\\tbackground: #fffccc;\\r\\n\\tpadding: 10px;\\r\\n}\\r\\n.checkbox label{display:block;width:100%}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.main_title{\\r\\n\\t\\tfont-size: 2rem;\\r\\n    text-align: center;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhGQUE4RixtQ0FBbUM7QUFDakksY0FBYyxhQUFhO0FBRTNCLHdDQUF3QyxnQkFBZ0I7QUFDeEQ7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7Q0FDQyxjQUFjO0NBQ2QsV0FBVztDQUNYLGtCQUFrQjtDQUNsQixVQUFVO0NBQ1YsbUJBQW1CO0NBQ25CLGFBQWE7QUFDZDtBQUVBLGdCQUFnQixhQUFhLENBQUMsVUFBVTtBQUV4QztJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmO0FBRUE7RUFDQSxlQUFlO0lBQ2Isa0JBQWtCO0VBQ3BCIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jaGVja2JveDpub3QoLm1hdC1jaGVja2JveC1kaXNhYmxlZCkubWF0LWFjY2VudCAubWF0LWNoZWNrYm94LXJpcHBsZSAubWF0LXJpcHBsZS1lbGVtZW50e2JhY2tncm91bmQtY29sb3I6IzE2OTFiZSAhaW1wb3J0YW50fVxyXG4ubWF0LWNoZWNrYm94e2Rpc3BsYXk6YmxvY2t9XHJcblxyXG5pbnB1dFt0eXBlPWNoZWNrYm94XSwgaW5wdXRbdHlwZT1yYWRpb117bWFyZ2luLXJpZ2h0OjhweH1cclxuLmpvYl9kYXNoYm9hcmQgLnRhYmxlIC5oaXJle1xyXG4gICAgbWFyZ2luOiAzcHggMDtcclxufVx0XHJcbi5wYXltZW50X2Jhbm5lcntcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHR3aWR0aDogMTAwJTtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0Y29sb3I6IHJlZDtcclxuXHRiYWNrZ3JvdW5kOiAjZmZmY2NjO1xyXG5cdHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5jaGVja2JveCBsYWJlbHtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCV9XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBpbnB1dCB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDotOTk5OXB4O1xyXG4gICAgY2xpcDpyZWN0KDAsMCwwLDApO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICAgIHdpZHRoOjFlbTtcclxuICAgIHBhZGRpbmc6MC4xZW07XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZToxMDAlO1xyXG4gICAgbGluZS1oZWlnaHQ6MS4yO1xyXG4gICAgY29sb3I6I2RkZDtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6ICfimIUgJztcclxufVxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICMxNjkxYmU7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyIH4gbGFiZWwsXHJcbi5yYXRpbmcgPiBsYWJlbDpob3ZlciB+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlIHtcclxuICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgZm9udC1zaXplOiAwO1xyXG4gIGhlaWdodDogMjFweDtcclxuICBsaW5lLWhlaWdodDogMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtaW5kZW50OiAtOTk5ZW07XHJcbiAgd2lkdGg6IDExMHB4O1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUtcmF0aW5ne1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBoZWlnaHQ6IDIxcHg7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gIH1cclxuICBcclxuICAubWFpbl90aXRsZXtcclxuXHRcdGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9Il19 */\"","module.exports = \"<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\t\\t<h1 class=\\\"main_title\\\">Dashboard</h1>\\r\\n\\t\\t<h3 class=\\\"mb-4\\\">Open Estimates</h3>\\r\\n\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Request Date</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Company Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Response On</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>$</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Attachments</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Rating</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Hiring</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tbody *ngIf=\\\"userslist && userslist.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let jobs of userslist\\\" ngClass=\\\"myclass_{{jobs.jobId}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" routerLink=\\\"/detail-job/{{jobs.job_id}}\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{jobs.job_created | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{jobs.companyName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>${{jobs.bid_price}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td><p *ngIf=\\\"jobs.attachment_pic\\\">{{jobs.attachment_pic}}</p><p *ngIf=\\\"!jobs.attachment_pic\\\">N.A.</p></td>\\r\\n\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"jobs.width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a class=\\\"hire\\\" *ngIf =\\\"!jobs.bidStatus && jobs.bidStatus ==0\\\" (click)=\\\"openDialog(1,jobs.job_id,jobs.user_id,jobs.jobId)\\\" href=\\\"javascript:void(0)\\\">{{hire_decline}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<a  class=\\\"hire\\\" *ngIf =\\\"!jobs.bidStatus && jobs.bidStatus ==0\\\" (click)=\\\"openDialog(2,jobs.job_id,jobs.user_id,jobs.jobId)\\\" href=\\\"javascript:void(0)\\\">{{decline_hire}}</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t<tbody *ngIf=\\\"!userslist || userslist.length == 0\\\" >\\r\\n\\t\\t\\t\\t\\t<tr><td colspan=\\\"7\\\"><p class=\\\"text-center\\\">No Open Estimates</td></tr>\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t</table>                                \\r\\n\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row mt-4\\\">\\r\\n<div class=\\\"col\\\"> \\r\\n\\r\\n<h3 class=\\\"mb-4\\\">History of Accepted Estimates</h3>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t<table class=\\\"table table-striped text-center\\\">\\r\\n\\t\\t\\t\\t<thead class=\\\"thead-dark\\\">\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<th>Job ID</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Request Date</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Company Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Response On</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>$</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Attachments</th>\\r\\n\\t\\t\\t\\t\\t\\t<th>Rating</th>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tbody *ngIf=\\\"compuserslist && compuserslist.length > 0\\\">\\r\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let jobs of compuserslist\\\">\\r\\n\\t\\t\\t\\t\\t\\t<td><a class=\\\"job_id\\\" routerLink=\\\"/detail-job/{{jobs.jobId}}\\\">{{jobs.jobId}}</a></td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{jobs.job_created | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{jobs.companyName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>${{jobs.bid_price}}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td><p *ngIf=\\\"jobs.attachment_pic\\\">{{jobs.attachment_pic}}</p><p *ngIf=\\\"!jobs.attachment_pic\\\">N.A.</p></td>\\r\\n\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"jobs.width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t<tbody *ngIf=\\\"!compuserslist || compuserslist.length == 0\\\" >\\r\\n\\t\\t\\t\\t\\t<tr><td colspan=\\\"7\\\"><p class=\\\"text-center\\\">No Completed Estimates</td></tr>\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t</table>                                \\r\\n\\t\\t</div>\\r\\n\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n</div> \\r\\n \\r\\n \"","import { Component, OnInit ,Input, Output, EventEmitter,Inject } from '@angular/core';\r\nimport { ActivatedRoute, Router,NavigationEnd } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { JobService } from './../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormArray,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { Title } from '@angular/platform-browser';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n\r\nexport interface DialogData {\r\n\tjobID:any;type:any;userid:any;Int_job_id:any;\r\n}\r\n\r\n\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\t\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'dashboard.component.html',\r\n  styleUrls : [ './dashboard.component.css' ]\r\n})\r\n\r\nexport class DashboardComponent implements OnInit {\r\n\t\tfirst_show = false;val:any='';userslist:any='';compuserslist:any='';bidsData:any='';\r\n\tallJobs:any=\"\";allCompletedJobs:any=\"\";jobservices:any=\"\";allservice:any=\"\";\r\n\tisValid : boolean = false;\r\n\tname:any='';animal:any='';jobidisset:any='';\r\n\tmessage:any='';\r\n\tshow_dialog : boolean = false;\r\n\tbutton_text:any='';image_url:any='';hire_decline:any='';decline_hire:any='';\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,public dialog: MatDialog,private titleService: Title,private route: ActivatedRoute,private router: Router)\r\n\t{\r\n\t\tthis.getAllJobs();\r\n\t\tsetTimeout(() => {  \r\n\t\t\tthis.getAllCompletedJobs();\r\n\t\t},5200);\r\n\t\t\r\n\t\tthis.titleService.setTitle( 'Dashboard | MoveLaunch' );\r\n\t}\r\n\topenDialog(type,jobID,userid,Int_job_id): void {\r\n\t\tconst dialogRef = this.dialog.open(HireDeclineDialogDashboard, {\r\n\t\t  width: '450px',\r\n\t\t  data: {jobID:jobID,type:type,userid:userid,Int_job_id:Int_job_id}\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\t\r\n\t\t\tconsole.log(result);\r\n\t\t\tif(result == 'Hired'){\r\n\t\t\t\tthis._flashMessagesService.show('Estimates has been hired.', { cssClass: 'alert-success',timeout:2000});\r\n\t\t\t\tthis.hire_decline = this.hire_decline ? 'Hired' : 'Hire';\r\n\t\t\t\tthis.decline_hire = this.decline_hire ? 'Decline' : 'Declined';\r\n\t\t\t\t\r\n\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\tthis.router.navigate(['/user-in-progress-jobs']);\r\n\t\t\t\t},2200);\r\n\t\t\t}\r\n\t\t\tif(result == 'Declined'){\r\n\t\t\t\tthis._flashMessagesService.show('Estimates has been Declined.', { cssClass: 'alert-success',timeout:2000});\r\n\t\t\t\tthis.decline_hire = this.decline_hire ? 'Declined' : 'Decline';\r\n\t\t\t\tthis.hire_decline = this.decline_hire ? 'Hire' : 'Hired';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetAllJobs(){\r\n\t\tthis.jobservice.getAllJobsWithBids().subscribe(result =>\r\n\t\t{\r\n\t\t\tthis.isValid = true;\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\t\r\n\t\t\t\tthis.allJobs = result.job;\r\n\t\t\t\tconsole.log(this.allJobs);\r\n\t\t\t\tlet userslist1 = [];\r\n\t\t\t\tthis.allJobs.forEach((x,key) => {\r\n\t\t\t\t\tx.bidsData.forEach((value,index)=>{\r\n\t\t\t\t\t\tuserslist1.push({'job_id':x._id,'user_id':value.userId._id,'bid_price':value.bid_price,'attachment_pic':value.attachment_pic,'created_at':value.created_at,'bidStatus':value.bidStatus,'companyName':value.userId.companyName,'jobId':x.jobId,'job_created':x.created_at,'width':value.rating*20});\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}); \r\n\t\t\t\tuserslist1.sort((a,b) => b.created_at.localeCompare(a.created_at));\r\n\t\t\t\tthis.userslist = userslist1;\r\n\t\t\t\tconsole.log(this.userslist);\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tthis._flashMessagesService.show(\"No Estimates Found.\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t} \r\n\t\t   \r\n\t\t}); \r\n\t}\r\n\t\r\n\r\n\tgetAllCompletedJobs(){\r\n\t\t\r\n\t\tthis.jobservice.getFilteredJobsForUserDashboard(2).subscribe(result =>\r\n\t\t{\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\tvar d = new Date();\r\n\t\t\t\tvar month = '' + (d.getMonth() + 1);\r\n\t\t\t\tvar day = '' + d.getDate();\r\n\t\t\t\tvar year = d.getFullYear();\r\n\t\t\t\tif (month.length < 2) month = '0' + month;\r\n\t\t\t\tif (day.length < 2) day = '0' + day;\r\n\t\t\t\tvar mindateset = [year, month, day].join('-');\r\n\t\t\t\t//console.log(result.jobs);\r\n\t\t\t\tthis.allCompletedJobs = result.jobs;\r\n\t\t\t\tlet userslist2 = [];\r\n\t\t\t\tthis.allCompletedJobs.forEach((x,key) => {\r\n\t\t\t\t\tx.bidsData.forEach((value,index)=>{\r\n\t\t\t\t\t\tuserslist2.push({'job_id':x._id,'user_id':value.userId._id,'bid_price':value.bid_price,'attachment_pic':x.attachment_pic,'created_at':value.created_at,'bidStatus':value.bidStatus,'companyName':value.userId.companyName,'jobId':x.jobId,'job_created':x.created_at,'width':value.rating*20});\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}); \r\n\t\t\t\tuserslist2.sort((a,b) => b.created_at.localeCompare(a.created_at));\r\n\t\t\t\tthis.compuserslist = userslist2;\r\n\t\t\t\tconsole.log(this.compuserslist);\r\n\t\t\t}else{\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t\t//this._flashMessagesService.show(\"No job founds\", { cssClass: 'alert-danger',timeout:6000});\r\n\t\t\t}   \r\n\t\t   \r\n\t\t});\r\n\t\t\t\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.isValid = false;\r\n\t\t\r\n\t\tthis.hire_decline = 'Hire';\r\n\t\tthis.decline_hire = 'Decline';\r\n\t}\r\n}\r\n@Component({\r\n  selector: 'dialog-hire-decline',\r\n  templateUrl: 'dialog-hire-decline.html',\r\n  styleUrls : [ './dialog-hire-decline.css' ]\r\n})\r\nexport class HireDeclineDialogDashboard {\r\n\t\r\n\tpublic jobID:any='';\r\n \tpublic type:any='';\r\n \tpublic userid:any='';\r\n\tpublic Int_job_id:any='';\r\n \r\n  constructor(\r\n    public dialogRef: MatDialogRef<HireDeclineDialogDashboard>,  @Inject(MAT_DIALOG_DATA) public data: DialogData,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder) {\r\n\t\t\r\n\t\tconsole.log(data);\r\n\t\tthis.jobID = data.jobID;\r\n\t\tthis.type = data.type;\r\n\t\tthis.userid = data.userid;\r\n\t\tthis.Int_job_id = data.Int_job_id;\r\n\t} \r\n\r\n\tonNoClick(): void {\r\n\t\tthis.dialogRef.close('ignore');\r\n\t}\r\n\tonYesClick(type_sent): void {\r\n\t\tconsole.log(this.jobID);\r\n\t\tconsole.log(this.userid);\r\n\t\tconsole.log(this.Int_job_id);\r\n\t\t\r\n\t\t\t\r\n\t\tthis.jobservice.hireDecline(type_sent,this.jobID,this.userid,).subscribe(result =>\r\n\t\t{\r\n\t\t\t\r\n\t\t\tif(result.success && type_sent ==1){\r\n\t\t\t\tconsole.log('myclass_'+this.Int_job_id);\r\n\t\t\t\tvar myElement = document.getElementsByClassName('myclass_'+this.Int_job_id) as HTMLCollectionOf<HTMLElement>\r\n\t\t\t\tfor (var i = 0; i < myElement.length; i++){\r\n\t\t\t\t\tmyElement[i].style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.dialogRef.close('Hired');\r\n\t\t\t}\r\n\t\t\tif(result.success && type_sent ==2){\r\n\t\t\t\tvar myElement = document.getElementsByClassName('myclass_'+this.Int_job_id) as HTMLCollectionOf<HTMLElement>\r\n\t\t\t\tfor (var i = 0; i < myElement.length; i++){\r\n\t\t\t\t\tmyElement[i].style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tthis.dialogRef.close('Declined');\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\t\r\n\t\t});   \r\n\t\t\r\n\t}\r\n\r\n}","module.exports = \".mat-dialog-container{\\r\\n\\tpadding:35px !important;\\r\\n}\\r\\n.mat-raised-button.mat-primary{\\r\\n\\tbackground-color:#1695C2;\\r\\n}\\r\\n.mat-dialog-content{    margin: 0;\\r\\n    padding: 0;}\\r\\n.mat-dialog-actions{padding:13px !important;position:relative}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvZGFzaGJvYXJkL2RpYWxvZy1oaXJlLWRlY2xpbmUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsdUJBQXVCO0FBQ3hCO0FBQ0E7Q0FDQyx3QkFBd0I7QUFDekI7QUFFQSx3QkFBd0IsU0FBUztJQUM3QixVQUFVLENBQUM7QUFDZixvQkFBb0IsdUJBQXVCLENBQUMsaUJBQWlCIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvZGFzaGJvYXJkL2RpYWxvZy1oaXJlLWRlY2xpbmUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGFpbmVye1xyXG5cdHBhZGRpbmc6MzVweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeXtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiMxNjk1QzI7XHJcbn1cclxuXHJcbi5tYXQtZGlhbG9nLWNvbnRlbnR7ICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7fVxyXG4ubWF0LWRpYWxvZy1hY3Rpb25ze3BhZGRpbmc6MTNweCAhaW1wb3J0YW50O3Bvc2l0aW9uOnJlbGF0aXZlfSJdfQ== */\"","module.exports = \"<div *ngIf=\\\"type==1\\\" class=\\\"col-md-12\\\">\\r\\n\\t<div mat-dialog-content class=\\\"row\\\"  >\\r\\n\\t  <p>Do you want to accept this person's estimate propsal?</p>\\r\\n\\t</div>\\r\\n\\t<br />\\r\\n\\t<div mat-dialog-actions class=\\\"row\\\" >\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"onYesClick('1')\\\" cdkFocusInitial>Yes</button>\\r\\n\\t\\t<button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">No</button>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div *ngIf=\\\"type==2\\\" class=\\\"col-md-12\\\" >\\r\\n\\t<div mat-dialog-content class=\\\"row\\\" >\\r\\n\\t  <p>Do you want to decline this person's estimate propsal?</p>\\r\\n\\t</div>\\r\\n\\t<br />\\r\\n\\t<div mat-dialog-actions class=\\\"row\\\" >\\r\\n\\t\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"onYesClick('2')\\\" cdkFocusInitial>Yes</button>\\r\\n\\t\\t<button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\">No</button>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \".mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#1691be !important}\\r\\n.mat-checkbox{display:block}\\r\\ninput[type=checkbox], input[type=radio]{margin-right:8px}\\r\\n.payment_banner{\\r\\n\\tdisplay: block;\\r\\n\\twidth: 100%;\\r\\n\\ttext-align: center;\\r\\n\\tcolor: red;\\r\\n\\tbackground: #fffccc;\\r\\n\\tpadding: 10px;\\r\\n}\\r\\n.checkbox label{display:block;width:100%}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvZWRpdHByb2ZpbGUvZWRpdHByb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4RkFBOEYsbUNBQW1DO0FBQ2pJLGNBQWMsYUFBYTtBQUUzQix3Q0FBd0MsZ0JBQWdCO0FBRXhEO0NBQ0MsY0FBYztDQUNkLFdBQVc7Q0FDWCxrQkFBa0I7Q0FDbEIsVUFBVTtDQUNWLG1CQUFtQjtDQUNuQixhQUFhO0FBQ2Q7QUFFQSxnQkFBZ0IsYUFBYSxDQUFDLFVBQVUiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy91c2Vycy9lZGl0cHJvZmlsZS9lZGl0cHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jaGVja2JveDpub3QoLm1hdC1jaGVja2JveC1kaXNhYmxlZCkubWF0LWFjY2VudCAubWF0LWNoZWNrYm94LXJpcHBsZSAubWF0LXJpcHBsZS1lbGVtZW50e2JhY2tncm91bmQtY29sb3I6IzE2OTFiZSAhaW1wb3J0YW50fVxyXG4ubWF0LWNoZWNrYm94e2Rpc3BsYXk6YmxvY2t9XHJcblxyXG5pbnB1dFt0eXBlPWNoZWNrYm94XSwgaW5wdXRbdHlwZT1yYWRpb117bWFyZ2luLXJpZ2h0OjhweH1cclxuXHJcbi5wYXltZW50X2Jhbm5lcntcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHR3aWR0aDogMTAwJTtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0Y29sb3I6IHJlZDtcclxuXHRiYWNrZ3JvdW5kOiAjZmZmY2NjO1xyXG5cdHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5jaGVja2JveCBsYWJlbHtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCV9Il19 */\"","module.exports = \"\\r\\n<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div *ngIf=\\\"showthis && setusertype=='partner' && !user.customer_id\\\" class=\\\"payment_banner\\\">\\r\\n\\t\\t\\t\\tYour account is on hold due to non payment. Please make the payment for job listing and making bids on the jobs. <a routerLink=\\\"/purchase-plans/\\\">Get a Plan</a>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">Profile</h3>\\r\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<form [formGroup]=\\\"angForm\\\"  class=\\\"esitame-form\\\" *ngIf=\\\"setusertype=='user'\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<!--------------------   Customer ----------------------- -->\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t<div class=\\\"tab-content second_form active\\\" id=\\\"pills-tabContent\\\" style=\\\"border:none\\\"  >\\r\\n\\t\\t\\t\\t  <div class=\\\"tab-pane fade show active\\\" id=\\\"pill-customer\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"pills-home-tab\\\">\\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Firstname</label>\\r\\n\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"First Name*\\\" formControlName=\\\"firstName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors}\\\" [(ngModel)]=\\\"user.firstname\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Lastname</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"Last name*\\\" formControlName=\\\"lastName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" [(ngModel)]=\\\"user.lastname\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t </div> \\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<select  id=\\\"inputState\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"state\\\" (change)= \\\"getCounties($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.state.errors }\\\"  [(ngModel)]=\\\"user.state\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.state.errors.required\\\">State is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<select  id=\\\"inputCounty\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"county\\\" (change)= \\\"getCities($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.county.errors }\\\" [(ngModel)]=\\\"user.county\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <option *ngFor=\\\"let county of counties\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.county.errors.required\\\">County is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t </div>  \\r\\n\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t<select  id=\\\"inputCity\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"city\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.city.errors }\\\" [(ngModel)]=\\\"user.city\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.city.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.city.errors.required\\\">City is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t </div> \\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Street Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" id=\\\"address\\\" placeholder=\\\"Street Address\\\"  formControlName=\\\"address\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\" [(ngModel)]=\\\"user.address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.address.errors.required\\\">Street Address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t </div> \\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t  <input type=\\\"number\\\" class=\\\"form-control\\\" maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" id=\\\"zipcode\\\" placeholder=\\\"Zip*\\\"  formControlName=\\\"zip\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.zip.errors }\\\" [(ngModel)]=\\\"user.zipcode\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.zip.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.zip.errors.required\\\">Zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.zip.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>Phone</label>\\r\\n\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\" placeholder=\\\"Phone*\\\"  formControlName=\\\"phone\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.phone.errors }\\\" [(ngModel)]=\\\"user.phone\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.phone.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.phone.errors.required\\\">Phone is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.phone.errors.pattern\\\">Invlid Format EX:(123)465-7890</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t </div> \\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t <!--  <div class=\\\"form-row \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Profile Pic</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input #imageInput type=\\\"file\\\" formControlName=\\\"imageInput\\\" (change)=\\\"processFile(imageInput)\\\" accept=\\\"image/*\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"img-preview-container\\\" *ngIf=\\\"!selectedFile\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"img-view\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<img height=\\\"116px\\\" width=\\\"116px\\\" src=\\\"../../../assets/images/no_user_images.jpg\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"selectedFile\\\" class=\\\"img-preview-container\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"img-preview{{selectedFile.status === 'fail' ? '-error' : ''}}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t   [ngStyle]=\\\"{'background-image': 'url('+ selectedFile.src + ')'}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"selectedFile.pending\\\" class=\\\"img-loading-overlay\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"img-spinning-circle\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"selectedFile.status === 'ok'\\\" class=\\\"alert alert-success\\\"> Image Uploaded Succesfuly!</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"selectedFile.status === 'fail'\\\" class=\\\"alert alert-danger\\\"> Image Upload Failed!</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t </div> \\r\\n\\t\\t\\t\\t\\t  -->\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\"  (ngSubmit)=\\\"onSubmit()\\\">Submit</button> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t </div> \\t  \\r\\n\\t\\t\\t\\t   \\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t </div>\\r\\n\\t\\t</form>\\r\\n\\t\\t<form [formGroup]=\\\"angPartnerForm\\\"  class=\\\"esitame-form\\\" *ngIf = \\\"setusertype=='partner'\\\" >\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<!--------------------   Partner ----------------------- -->\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t<div class=\\\"tab-content second_form active\\\" id=\\\"pills-tabContent\\\" style=\\\"border:none\\\"  >\\r\\n\\t\\t\\t\\t  <div class=\\\"tab-pane fade show active\\\" id=\\\"pill-customer\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"pills-home-tab\\\">\\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Firstname</label>\\r\\n\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"First Name for partner*\\\" formControlName=\\\"firstName\\\" [ngClass]=\\\"{ 'is-invalid': submittedpartner && fpartner.firstName.errors}\\\" [(ngModel)]=\\\"user.firstname\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedpartner && fpartner.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.firstName.errors.required\\\">First Name is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>Lastname</label>\\r\\n\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"Last name*\\\" formControlName=\\\"lastName\\\" [ngClass]=\\\"{ 'is-invalid': submittedpartner && fpartner.lastName.errors }\\\" [(ngModel)]=\\\"user.lastname\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedpartner && fpartner.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.lastName.errors.required\\\">Last Name is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t </div> \\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Company Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail41\\\" placeholder=\\\"Company Name*\\\" formControlName=\\\"companyName\\\" [ngClass]=\\\"{ 'is-invalid': submittedpartner && fpartner.companyName.errors }\\\" [(ngModel)]=\\\"user.companyName\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedpartner && fpartner.companyName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.companyName.errors.required\\\">Company Name is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t  <label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<select  id=\\\"inputState\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"state\\\" (change)= \\\"getCounties($event)\\\" [ngClass]=\\\"{ 'is-invalid': submittedpartner && fpartner.state.errors }\\\"  [(ngModel)]=\\\"user.state\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedpartner && fpartner.state.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.state.errors.required\\\">State is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<select multiple id=\\\"inputCounty\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"county\\\" [ngClass]=\\\"{ 'is-invalid': submittedpartner && fpartner.county.errors }\\\" [(ngModel)]=\\\"user.county\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  <option *ngFor=\\\"let county of counties\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t  </option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedpartner && fpartner.county.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.county.errors.required\\\">County is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t </div>  \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tWhat services do you provide ?\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6 text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"checkbox\\\"  formArrayName=\\\"services\\\" *ngFor=\\\"let service of angPartnerForm.controls.services.controls; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label><input type=\\\"checkbox\\\" [(ngModel)]=\\\"userselectedservices[i]\\\" [formControlName]=\\\"i\\\" value=\\\"{{services[i]._id}}\\\">{{services[i].name}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <mat-checkbox [ngModel]=\\\"true\\\" *ngFor=\\\"let services of jobservices; let i=index\\\" type=\\\"checkbox\\\" id=\\\"services_checkbox_{{i}}\\\" formControlName=\\\"services\\\"  (change)=\\\"onCheckboxChagen($event, services._id)\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.services.errors }\\\"> {{services.name}}</mat-checkbox> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t  <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"zipcode\\\" placeholder=\\\"Zip*\\\"  formControlName=\\\"zip\\\" [ngClass]=\\\"{ 'is-invalid': submittedpartner && fpartner.zip.errors }\\\" maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" [(ngModel)]=\\\"user.zipcode\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <div *ngIf=\\\"submittedpartner && fpartner.zip.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.zip.errors.required\\\">Zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.zip.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>Phone</label>\\r\\n\\t\\t\\t\\t\\t\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\" placeholder=\\\"Phone*\\\"  formControlName=\\\"phone\\\" [ngClass]=\\\"{ 'is-invalid': submittedpartner && fpartner.phone.errors }\\\" [(ngModel)]=\\\"user.phone\\\">\\r\\n\\t\\t\\t\\t\\t\\t  <div *ngIf=\\\"submittedpartner && fpartner.phone.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.phone.errors.required\\\">Phone is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.phone.errors.pattern\\\">Invlid Format EX:(123)465-7890</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t </div> \\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t <label>Street Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" id=\\\"address\\\" placeholder=\\\"Address\\\"  formControlName=\\\"address\\\" [ngClass]=\\\"{ 'is-invalid': submittedpartner && fpartner.address.errors }\\\" [(ngModel)]=\\\"user.address\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submittedpartner && fpartner.address.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"fpartner.address.errors.required\\\">Street Address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t </div> \\r\\n\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t    <div class=\\\"form-row\\\" *ngIf=\\\"user.totalbid\\\"> \\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label>Bid Count for your Account ({{user.totalbid}} bids left)</label>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t </div> \\r\\n\\t\\t\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t <div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmitPartner()\\\"  (ngSubmit)=\\\"onSubmitPartner()\\\">Submit</button> \\r\\n\\t\\t\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t\\t </div> \\t  \\r\\n\\t\\t\\t\\t   \\r\\n\\t\\t\\t\\t  </div>\\r\\n\\r\\n\\t\\t\\t </div>\\r\\n\\t\\t</form>\\r\\n\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { JobService } from './../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormArray,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { Title } from '@angular/platform-browser';\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\t\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'editprofile.component.html',\r\n  styleUrls : [ './editprofile.component.css' ]\r\n})\r\n\r\nexport class EditProfileComponent implements OnInit {\r\n\tangForm: FormGroup;angPartnerForm: FormGroup;\r\n\ttitle = 'Login User';\r\n\t//error :any=\"\";\r\n\tresult :any =\"\";\r\n\tuser:any =\"\"; \r\n\tstates:any = '';\r\n\tcounties:any = '';jobservices:any = '';setusertype:any = '';\r\n\tcities:any = '';\r\n\tsubmitted = false;\r\n\tsubmittedpartner = false;showthis = false;\r\n\tservices:any='';\r\n\tstateName = '';\r\n\tstatename = '';countyName = '';currentState='';currentCounty='';userid='';\r\n\tselectedFile:any='';interests = []; userImage = [];\r\n\timage_url ='';partner_image_url =''; \r\n\tisChecked:any = '';userselectedservices:any=\"\";\r\n\t\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private jobservice: JobService,\r\n\t\t private router: Router, private userservice: UserService, private fb: FormBuilder,private titleService: Title, private changeDetectionRef:ChangeDetectorRef){ \r\n\t\tthis.LoginForm();\r\n\t\tthis.addCheckboxes();\r\n\t\tthis.titleService.setTitle( 'Edit Profile | MoveLaunch' );\r\n\t\t  \r\n\t}\r\n\r\n\tLoginForm() {\r\n\t\tthis.angForm = this.fb.group({\r\n\t\t\t// name: ['',  Validators.required ],\r\n\t\t\tstate: ['', Validators.required ],\r\n\t\t\tfirstName: ['', Validators.required ],\r\n\t\t\tlastName: ['', Validators.required ],\r\n\t\t\tcounty: ['', Validators.required ],\r\n\t\t\tcity: ['', Validators.required ],\r\n\t\t\tzip: ['', Validators.required ],\r\n\t\t\t phone: ['', Validators.compose([Validators.required,Validators.pattern('^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')])],\r\n\t\t\taddress: ['', Validators.required ],\r\n\t\t\timageInput: ['']\r\n\t\t  \r\n\t\t}); \r\n\t\tthis.angPartnerForm = this.fb.group({\r\n\t\t\t // name: ['',  Validators.required ],\r\n\t\t\t  state: ['', Validators.required ],\r\n\t\t\t  firstName: ['', Validators.required ],\r\n\t\t\t  lastName: ['', Validators.required ],\r\n\t\t\t  companyName: ['', Validators.required ],\r\n\t\t\t  county: ['', Validators.required ],\r\n\t\t\t // services: ['', Validators.required ],\r\n\t\t\t  services: new FormArray([]),\r\n\t\t\t  zip: ['', Validators.required ],\r\n\t\t\t  phone: ['', Validators.compose([Validators.required,Validators.pattern('^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')])],\r\n\t\t\t  address: ['', Validators.required ],\r\n\t\t\t  imageInput: ['']\r\n\t\t}); \r\n\t\t\r\n\t\r\n\t}\r\n\tprivate onSuccess() {\r\n\t\tthis.selectedFile.pending = false;\r\n\t\tthis.selectedFile.status = 'ok';\r\n\t}\r\n\r\n\tprivate onError() {\r\n\t\tthis.selectedFile.pending = false;\r\n\t\tthis.selectedFile.status = 'fail';\r\n\t\tthis.selectedFile.src = '';\r\n\t}\r\n\r\n\tprocessFile(imageInput: any) {\r\n\t\tconst file: File = imageInput.files[0];\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\treader.addEventListener('load', (event: any) => {\r\n\r\n\t\t  this.selectedFile = new ImageSnippet(event.target.result, file);\r\n\t\t  this.selectedFile.pending = true;\r\n\t\t});\r\n\t\r\n\t\treader.readAsDataURL(file);\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\tgetCounties(event){\r\n\t\tthis.stateName = event.target.value;\r\n\t\tthis.userservice.getCounties(this.stateName).subscribe(result => {\r\n\t\t\tthis.counties = result;\r\n\t\t});\r\n\t\t\r\n\t}  \r\n\tgetCities(event){\r\n\t\tthis.countyName = event.target.value;\r\n\t\t\r\n\t\tthis.statename = this.angForm.value.state;\r\n\t\t this.userservice.getCities(this.countyName,this.statename).subscribe(result => {\r\n\t\t\tthis.cities = result;\r\n\t\t}); \r\n\r\n\t}  \r\n\tgetServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t}); \r\n\t}\r\n\tget f() { return this.angForm.controls; }\r\n\tget fpartner() { return this.angPartnerForm.controls; }\r\n\tonSubmit() {\r\n        this.submitted = true;\r\n\t\t\r\n        // stop here if form is invalid\r\n        if(this.angForm.invalid){\r\n\t\t\treturn;\r\n        }else{\r\n\t\t\tvar user = this.angForm.value;\r\n\t\t\tvar _userid = localStorage.getItem('userid');\r\n\t\t\t\r\n\t\t\tif(this.selectedFile == undefined){\r\n\t\t\t\tthis.userservice.updateUserWithoutFIle(user,_userid).subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tlocalStorage.setItem('firstname',user.firstName);\r\n\t\t\t\t\t\tlocalStorage.setItem('lastname',user.lastName);  \r\n\t\t\t\t\t\tthis._flashMessagesService.show('Your Profile has been updated.', { cssClass: 'alert-success',timeout:2000}); \r\n\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  this.router.navigate(['/profile']);\r\n\t\t\t\t\t\t }, 2200);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t\t} \r\n\t\t\t\t   \r\n\t\t\t\t});  \r\n\t\t\t}else{\r\n\t\t\t\tthis.userservice.updateUser(user,_userid,this.selectedFile.file).subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tlocalStorage.setItem('firstname',user.firstName);\r\n\t\t\t\t\t\tlocalStorage.setItem('lastname',user.lastName);  \r\n\t\t\t\t\t\tthis._flashMessagesService.show('Your Profile has been updated.', { cssClass: 'alert-success',timeout:2000}); \r\n\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  this.router.navigate(['/profile']);\r\n\t\t\t\t\t\t }, 2200);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t\t} \r\n\t\t\t\t   \r\n\t\t\t\t}); \r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n    }\r\n\tonSubmitPartner() {\r\n\t\t\r\n        this.submittedpartner = true;\r\n\t\t\r\n        // stop here if form is invalid\r\n\t\t\r\n        if(this.angPartnerForm.invalid){\r\n\t\t\t\r\n\t\t\t return;\r\n        }else{\r\n\t\t\t\r\n\t\t\tconst selectedOrderIds = this.angPartnerForm.value.services\r\n\t\t\t  .map((v, i) => v ? this.services[i]._id : null)\r\n\t\t\t  .filter(v => v !== null);\r\n\t\t\t\r\n\t\t\tthis.angPartnerForm.value.services = selectedOrderIds;\r\n\t\t\t\r\n\t\t\tvar user = this.angPartnerForm.value; \r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar _userid = localStorage.getItem('userid');\r\n\t\t\t\r\n\t\t\tif(this.selectedFile == undefined){\r\n\t\t\t\t\r\n\t\t\t\tthis.userservice.updatePartnerWithoutFIle(user,_userid).subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tlocalStorage.setItem('firstname',user.firstName);\r\n\t\t\t\t\t\tlocalStorage.setItem('lastname',user.lastName);  \r\n\t\t\t\t\t\t//this._flashMessagesService.show('Your Profile has been updated.', { cssClass: 'alert-success',timeout:5000}); \r\n\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  this.router.navigate(['/profile']);\r\n\t\t\t\t\t\t }, 2200);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:2000});\r\n\t\t\t\t\t} \r\n\t\t\t\t   \r\n\t\t\t\t});  \r\n\t\t\t}else{\r\n\t\t\t\tthis.userservice.updatePartner(user,_userid,this.selectedFile.file).subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlocalStorage.setItem('firstname',user.firstName);\r\n\t\t\t\t\t\tlocalStorage.setItem('lastname',user.lastName);  \r\n\t\t\t\t\t\tthis._flashMessagesService.show('Your Profile has been updated.', { cssClass: 'alert-success',timeout:2000}); \r\n\t\t\t\t\t\t setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t  this.router.navigate(['/profile']);\r\n\t\t\t\t\t\t }, 2200);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t\t} \r\n\t\t\t\t   \r\n\t\t\t\t}); \r\n\t\t\t} \r\n\t\t\t \r\n\t\t\t \r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n    }\r\n\tprivate addCheckboxes() {\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.services = result.data;\r\n\t\t\t this.services.map((o, i) => {\r\n\t\t\t  const control = new FormControl(i === 0); // if first item set to true, else false\r\n\t\t\t  (this.angPartnerForm.controls.services as FormArray).push(control);\r\n\t\t\t});\r\n\t\t}); \r\n\t}\r\n\t  \r\n\tonCheckboxChagen(event, value) {\r\n\t\t\r\n\t\tif (event.checked) {\r\n\r\n\t\t  this.interests.push(value);\r\n\t\t} \r\n\r\n\t\tif (!event.checked) {\r\n\t\t\t\r\n\t\t\tlet index = this.interests.indexOf(value);\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tthis.interests.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\tngOnDestroy(){\r\n      this.changeDetectionRef.detach();\r\n    }\r\n\t\r\n\tngOnInit() {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tthis.setusertype =  localStorage.getItem('user_role');\r\n\t\tthis.isChecked = true;\r\n\t\t\r\n\t\tif(this.setusertype == 'user'){\r\n\t\t\tthis.userservice.getUsers().subscribe(result => {\r\n\t\t\t\tconsole.log('i got it ', result);\r\n\r\n\t\t\t\tthis.user = result[0]; \r\n\t\t\t\tvar currentState = this.user.state;\r\n\t\t\t\tvar currentCounty = this.user.county;\r\n\t\t\t\tvar user_pic = this.user.profile_pic;\r\n\t\t\t\tvar user_id = this.user._id;\r\n\t\t\t\t\r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(currentState != undefined || currentState != 'undefined') {\r\n\t\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.userservice.getCounties(this.states).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(currentCounty != undefined || currentCounty != 'undefined') {\r\n\t\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.userservice.getCities(this.counties, this.states).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t \r\n\t\t\t\tthis.userImage['src'] = environment.image_url+user_id+'/'+user_pic;\r\n\t\t\t\tthis.selectedFile = this.userImage;\r\n\t\t\t\treturn this.user;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif(this.setusertype == 'partner'){\r\n\t\t\tvar _user_id = localStorage.getItem('userid')\r\n\t\t\tthis.userservice.getPartner(_user_id).subscribe(result => {\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.user = result.user; \r\n\t\t\t\t\r\n\t\t\t\tvar setApp = [];\r\n\t\t\t\tfor(var i=0;i<this.services.length;i++ ){\r\n\t\t\t\t\tvar servic = this.user.services;\r\n\t\t\t\t\tvar _id = this.services[i]._id;\r\n\t\t\t\t\t$.each(servic,function(index,value){\r\n\t\t\t\t\t\t if(value == _id){\r\n\t\t\t\t\t\t\t var item = value;\r\n\t\t\t\t\t\t\t setApp[i] = item;\r\n\t\t\t\t\t\t }\r\n\t\t\t\t\t });  \t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tif(this.user.customer_id){\r\n\t\t\t\t\tthis.showthis = false;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.showthis = true;\r\n\t\t\t\t}\r\n\t\t\t\tvar currentState = this.user.state;\r\n\t\t\t\tvar currentCounty = this.user.county;\r\n\t\t\t\tvar user_pic = this.user.profile_pic;\r\n\t\t\t\tvar user_id = this.user._id;\r\n\t\t\t\t\r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif(currentState != undefined || currentState != 'undefined') {\r\n\t\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.userservice.getCounties(this.states).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(currentCounty != undefined || currentCounty != 'undefined') {\r\n\t\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.userservice.getCities(this.counties, this.states).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.userselectedservices = setApp;\r\n\r\n\t\t\t\tif(user_pic){\r\n\t\t\t\t\tthis.userImage['src'] = environment.partner_image_url+user_id+'/'+user_pic;\r\n\t\t\t\t\tthis.selectedFile = this.userImage;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\treturn this.user;\r\n\t\t\t});\r\n\t\t} \r\n\t\t\r\n\t\tif (!this.changeDetectionRef['destroyed']) {\r\n\t\t\tthis.changeDetectionRef.detectChanges();\r\n\t\t}\r\n\r\n\t\tthis.getServices();\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"form-wrapper signin-form\\\">\\r\\n<div class=\\\"form-inner\\\">\\r\\n<div class=\\\"form-header\\\">Forgot Password</div> \\r\\n           <form class=\\\"form-main\\\" [formGroup]=\\\"angForm\\\" novalidate>\\r\\n\\t\\t    <div class=\\\"first_form\\\">\\r\\n\\t\\t    <img class=\\\"logo-icon\\\" src=\\\"../../../../assets/images/logo-icon.png\\\">\\r\\n\\t\\t\\t <h1>Forgot <span>Password</span></h1>\\r\\n\\t\\t\\t <flash-messages></flash-messages>   \\r\\n\\t\\t\\t  <div class=\\\"form-group  col-md-12\\\">\\r\\n\\t\\t\\t\\t<label class=\\\"sr-only\\\">User email</label>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your registered Email address\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\"  formControlName=\\\"email\\\" #email  />\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t  Email is required.\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].errors.pattern\\\">\\r\\n\\t\\t\\t\\t\\t\\tPlease enter Valid Email .\\r\\n\\t\\t\\t\\t\\t  </div>\\t \\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t  \\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"form-group  col-md-12\\\">\\r\\n\\t\\t\\t\\t  <button (click)=\\\"onSubmit()\\\"  (ngSubmit)=\\\"onSubmit()\\\" class=\\\"btn btn-lg btn-primary\\\">Submit</button><br />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</form>\\r\\n     </div>\\r\\n </div>\\r\\n \\r\\n \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'forgotpassword.component.html'\r\n})\r\nexport class ForgotpasswordComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  title = 'Login User';\r\n  //error :any=\"\";\r\n  result :any =\"\";\r\n   submitted = false;\r\n  \r\n  constructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute, private router: Router, private userservice: UserService, private fb: FormBuilder,private titleService: Title\t) { \r\n    this.LoginForm();\r\n\t\t\tthis.titleService.setTitle( 'Forgot Password  | MoveLaunch' );\r\n   }\r\n\t\r\n  LoginForm() {\r\n    this.angForm = this.fb.group({\r\n      email: new FormControl('', Validators.compose([\r\n\t\t\t  Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])),\r\n   });\r\n  }\r\n get f() { return this.angForm.controls; }\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\t\r\n        // stop here if form is invalid\r\n        if(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\tvar user = this.angForm.value;\r\n\t\t\tconsole.log(user);\r\n\t\t\tthis.userservice.forgot_password(user.email).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-success',timeout:5000});\r\n\t\t\t\t \r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:10000}); \r\n\t\t\t\t  \r\n\t\t\t\t  }  \r\n\t\t\t   \r\n\t\t\t}); \r\n\t\t\t \r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n    }\r\n\t\r\n\r\n  ngOnInit() {\r\n\t\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\\r\\nbody{ background-color: #eef8fc !important}\\r\\n.app{background:red}\\r\\n.content_wrapper{height: calc(100vh - 180px);}\\r\\n.forgot {\\r\\n    color: #1691BE;\\r\\n    font-size: 14px;\\r\\n}\\r\\n.signin-form .invalid-feedback {\\r\\n    position: absolute;\\r\\n    bottom: -19px;\\r\\n    font-size: 12px;\\r\\n    margin: 0;\\r\\n}\\r\\n.signin-form .form-group {\\r\\n    position: relative;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsTUFBTSxvQ0FBb0M7QUFDMUMsS0FBSyxjQUFjO0FBQ25CLGlCQUFpQiwyQkFBMkIsQ0FBQztBQUM3QztJQUNJLGNBQWM7SUFDZCxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGVBQWU7SUFDZixTQUFTO0FBQ2I7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy91c2Vycy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmJvZHl7IGJhY2tncm91bmQtY29sb3I6ICNlZWY4ZmMgIWltcG9ydGFudH1cclxuLmFwcHtiYWNrZ3JvdW5kOnJlZH1cclxuLmNvbnRlbnRfd3JhcHBlcntoZWlnaHQ6IGNhbGMoMTAwdmggLSAxODBweCk7fVxyXG4uZm9yZ290IHtcclxuICAgIGNvbG9yOiAjMTY5MUJFO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbi5zaWduaW4tZm9ybSAuaW52YWxpZC1mZWVkYmFjayB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IC0xOXB4O1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcbi5zaWduaW4tZm9ybSAuZm9ybS1ncm91cCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4iXX0= */\"","module.exports = \"<div class=\\\"form-wrapper signin-form\\\">\\r\\n\\t<div class=\\\"form-inner\\\">\\r\\n\\t\\t<div class=\\\"form-header\\\">Login</div> \\r\\n           <form class=\\\"form-main\\\" [formGroup]=\\\"angForm\\\" novalidate>\\r\\n\\t\\t    <div class=\\\"first_form\\\">\\r\\n\\t\\t    <img class=\\\"logo-icon\\\" src=\\\"../../../../assets/images/logo-icon.png\\\">\\r\\n\\t\\t\\t <h1>Login <span>here</span></h1>\\r\\n\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t<label class=\\\"sr-only\\\">User email</label>\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\"  formControlName=\\\"email\\\" #email [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors}\\\"  />\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t  Email is required.\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].errors.pattern\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tPlease enter Valid Email .\\r\\n\\t\\t\\t\\t\\t\\t  </div>\\t \\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t  <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t<label class=\\\"sr-only\\\">Password :</label>\\r\\n\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" #password  [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors}\\\" />\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['password'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t  Password is required.\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t  <button (ngSubmit)=\\\"LoginUser(email.value, password.value)\\\" (click)=\\\"LoginUser(email.value, password.value)\\\" class=\\\"btn btn-lg btn-primary mb-3\\\">LOGIN</button><br />\\r\\n\\t\\t\\t\\t  <a class=\\\"forgot\\\" routerLink=\\\"/forgotpassword\\\">Forgot Password ?</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</form>\\r\\n     </div>\\r\\n </div>\\r\\n \\r\\n \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'login.component.html',\r\n  styleUrls : [ './login.component.css' ]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  title = 'Login User';\r\n  //error :any=\"\";\r\n  result :any =\"\";  userdetail:any =\"\";\r\n submitted = false;\r\n  \r\n  constructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute, private router: Router, private userservice: UserService, private fb: FormBuilder,private titleService: Title\t) { \r\n    this.LoginForm();\r\n\t\t\tthis.titleService.setTitle( 'Login | MoveLaunch' );\r\n   }\r\n\t\r\n\r\n  LoginForm() {\r\n    this.angForm = this.fb.group({\r\n      email: new FormControl('', Validators.compose([\r\n\t\t\t  Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])),\r\n      password: ['', Validators.required ],\r\n   });\r\n  }\r\n\tget f() { return this.angForm.controls; }\r\n\t\r\n  LoginUser(email,password) {\r\n\t  this.submitted = true;\r\n\t   if(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\t\r\n\t\t\tthis.userservice.login_user(email,password).subscribe(result => {\r\n\t\t\t if(result.success){\r\n\t\t\t\r\n\t\t          // this._flashMessagesService.show(result.message, { cssClass: 'alert-success',timeout:2000});\r\n\t\t\t\t //setTimeout(() => { \r\n\t\t\t\t\t\r\n\t\t\t\t\tlocalStorage.setItem('login_token', result.token);\r\n\t\t\t\t\tlocalStorage.setItem('userid',result.userid);\r\n\t\t\t\t\tlocalStorage.setItem('firstname',result.firstname);\r\n\t\t\t\t\tlocalStorage.setItem('lastname',result.lastname);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(result.role_name == 'user'){\r\n\t\t\t\t\t\tlocalStorage.setItem('user_role',result.role_name);\r\n\t\t\t\t\t\tthis.router.navigate(['/dashboard']);\r\n\t\t\t\t\t}else if(result.role_name == 'partner'){\r\n\t\t\t\t\t\tlocalStorage.setItem('user_role',result.role_name);\r\n\t\t\t\t\t\tlocalStorage.setItem('customer_id',result.lastname);\r\n\t\t\t\t\t\tlocalStorage.setItem('total_bid',result.totalbid);\r\n\t\t\t\t\t\tthis.router.navigate(['/alljobs']);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/* this.userservice.getUsers().subscribe(result1 => {\r\n\t\t\t\t\t\tthis.userdetail = result1[0];\r\n\t\t\t\t\t\tlocalStorage.setItem('current_user',this.userdetail);\r\n\t\t\t\t\t\tconsole.log(this.userdetail);\r\n\t\t\t\t\t}) */\r\n\t\t\t\t\t\r\n\t\t\t\t//\t},1000);\r\n\t\t\t\t \r\n\t\t\t  }else{\r\n\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:3000});\r\n\t\t\t  }\r\n\t\t\t\tif(result.success){\r\n\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t}); \r\n\t\t}\r\n   }\r\n\r\n  ngOnInit() {\r\n\t\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"<div class=\\\"cell example example1\\\" id=\\\"example-1\\\">\\r\\n<h1 class=\\\"\\\">Please fill your card details</h1>\\r\\n\\r\\n<flash-messages></flash-messages>\\r\\n<form novalidate (ngSubmit)=\\\"buy()\\\" [formGroup]=\\\"stripeTest\\\">\\r\\n \\t<fieldset>\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div id=\\\"card-element\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t</fieldset>\\r\\n\\t<div *ngIf=\\\"isSubmit==false\\\">\\r\\n\\t\\t<button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" data-tid=\\\"elements_examples.form.pay_button\\\"> Make Payment</button>\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"isSubmit==true\\\" class=\\\"text-center\\\">\\r\\n\\t\\t<img src=\\\"../../../assets/images/spinner.gif\\\" />\\r\\n\\t</div>\\r\\n</form>\\r\\n</div>\\r\\n\"","module.exports = \".form-wrapper{padding:0px}\\r\\n.alert-error{color:red !important}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvcGF5bWVudC9wYXltZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxXQUFXO0FBQ3pCLGFBQWEsb0JBQW9CIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvcGF5bWVudC9wYXltZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS13cmFwcGVye3BhZGRpbmc6MHB4fVxyXG4uYWxlcnQtZXJyb3J7Y29sb3I6cmVkICFpbXBvcnRhbnR9Il19 */\"","module.exports = \"<section>\\r\\n<div class=\\\"col-12\\\">\\r\\n\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t<flash-messages></flash-messages>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div class=\\\"form-wrapper\\\">\\r\\n\\t\\t<div class=\\\"block level-service\\\">\\r\\n\\t\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h2>Find the level of service that works for you</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span>onsectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore.Duis aute irure dolor in reprehenderit in voluptate velit esse nulla pariatur. </span>\\r\\n\\t\\t\\t\\t\\t\\t</div><!-- Heading -->\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"isLoading == true\\\" class=\\\"text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../../assets/images/spinner.gif\\\" />\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"isLoading == false\\\" class=\\\"plans-sec\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row justify-content-center\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-4 col-md-6 col-sm-6 col-xs-12\\\" *ngFor=\\\"let plans of allplans\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"pricetable style2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"pricetable-head\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3>{{plans.name}}</h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{plans.plan_bid}} Bids</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>${{plans.price/100}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div><!-- Price Table -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>Consectetur adipiscing elit, sed</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>Contrary to popular belief</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>Lorem Ipsum is not simply random text</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>Consectetur adipiscing elit, sed</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>dolore eu fugiat nulla pariatur.</li> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" *ngIf =\\\"isLoggedIn() && plans._id == user.planId\\\" [ngStyle]=\\\"{'background': '#37D61A'}\\\" class=\\\"partner-btn btn\\\">Current Plan</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" *ngIf =\\\"isLoggedIn() && user.planId && plans._id != user.planId\\\" (click)=\\\"openDialogUpdate(plans._id)\\\" class=\\\"partner-btn btn\\\">Update Plan</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" *ngIf =\\\"isLoggedIn() && !user.planId\\\" (click)=\\\"openDialog(plans._id)\\\" class=\\\"partner-btn btn\\\">Purchase Plan</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"col-lg-12 text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"!isLoggedIn()\\\" class=\\\"partner-btn btn\\\" routerLink=\\\"/register\\\" (click) = \\\"setuserpartner('partner')\\\">Become a partner</a>\\r\\n\\t\\t\\t\\t\\t\\t<a *ngIf =\\\"isLoggedIn()\\\" class=\\\"partner-btn btn\\\" routerLink=\\\"/create-job\\\">Create a Job</a>\\r\\n\\t\\t\\t\\t\\t</div>\\t -->\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t</section> \"","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { JobService } from '../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { StripeScriptTag } from \"stripe-angular\";\r\nimport { StripeToken } from \"stripe-angular\";\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { StripeService, Elements, Element as StripeElement, ElementsOptions } from \"ngx-stripe\";\r\n\r\nexport interface DialogData {\r\n  planId:any;type:any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'payment.component.html',\r\n   styleUrls : [ './payment.component.css' ]\r\n  \r\n})\r\nexport class PaymentComponent implements OnInit {\r\n\tallplans:any=\"\";user:any=\"\";\r\n\tprivate publishableKey:string = \"pk_test_oUX3CoG5KpQL5KxzgxwE6rQd\";\r\n\tisLoading:boolean = true;\r\n\t\r\n\t\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute, private router: Router, private userservice: UserService,private jobservice: JobService,private fb: FormBuilder,public StripeScriptTag:StripeScriptTag,public dialog: MatDialog,private titleService: Title\t) { \r\n\t\tthis.StripeScriptTag.setPublishableKey( this.publishableKey )\r\n\t\tthis.getAllplans();\r\n\t\tthis.titleService.setTitle( 'Payment | MoveLaunch' );\r\n\t}\r\n\topenDialog(planId): void {\r\n\t\tconst dialogRef = this.dialog.open(StripePaymentDialog, {\r\n\t\t  width: '450px',\r\n\t\t  data: {planId:planId,type:'purchase'}\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\tif(result == 'Success'){\r\n\t\t\t\t/* setTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\tthis.router.navigate(['/alljobs']);\r\n\t\t\t\t }, 8500); */\r\n\t\t\t\t// this.ngOnInit();\r\n\t\t\t\t\r\n\r\n\t\t\t\t/* this.router.routeReuseStrategy.shouldReuseRoute = function(){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} */\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\t openDialogUpdate(planId): void {\r\n\t\tconst dialogRef = this.dialog.open(StripePaymentDialog, {\r\n\t\t  width: '450px',\r\n\t\t  data: {planId:planId,type:'update'}\r\n\t\t});\r\n\r\n\t\tdialogRef.afterClosed().subscribe(result => {\r\n\t\t\tif(result == 'Success'){\r\n\t\t\t\tthis.router.navigateByUrl('/profile', {skipLocationChange: true}).then(()=>\tthis.router.navigate([\"/purchase-plans\"])); \r\n\r\n\t\t\t\t/* this.router.routeReuseStrategy.shouldReuseRoute = function(){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} */\r\n\t\t\t\t// this.ngOnInit();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t  }\r\n\t  \r\n\t  \r\n\tgetAllplans(){\r\n\t\tthis.jobservice.getAllPlans().subscribe(result =>\r\n\t\t{\r\n\t\t\tthis.isLoading = true;\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t\tthis.allplans = result.data;\r\n\t\t\t\tconsole.log(this.allplans);\t\t\r\n\t\t\t}\r\n\t\t}); \r\n\t} \r\n\tisLoggedIn() {\r\n\t   let token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\treturn true ;\r\n\t\t}else{\r\n\t\t\treturn false ;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\t  \r\n\tngOnInit() {\r\n\t\tthis.router.navigate(['/purchase-plans']);\r\n\t\tvar _user_id = localStorage.getItem('userid')\r\n\t\tthis.userservice.getPartner(_user_id).subscribe(result => {\r\n\t\t\tthis.user = result.user; \r\n\t\t});\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n    selector: 'dialog-overview-example-dialog',\r\n\ttemplateUrl: 'dialog-overview-example-dialog.html',\r\n\tstyleUrls : [ './stripe-dialog.css' ]\r\n})\r\n\r\nexport class StripePaymentDialog {\r\n\tpublic planId:any='';\r\n\tpublic type:any='';\r\n\telements: Elements;\r\n\tcard: StripeElement;\r\n\tstripeTest: FormGroup;\r\n\tisSubmit:boolean = false;\r\n\telementsOptions: ElementsOptions = {\r\n\t\tlocale: 'en',\r\n\t\t\r\n\t};\r\n\t  \r\n  constructor(\r\n  \r\n    public dialogRef: MatDialogRef<StripePaymentDialog>,  @Inject(MAT_DIALOG_DATA) public data: DialogData,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder, private stripeService: StripeService,private _flashMessagesService: FlashMessagesService) {\r\n\t\tthis.planId = data.planId;\r\n\t\tthis.type = data.type;\r\n\t\t\r\n\t\tconsole.log(this.type);\r\n\t}\r\n\t\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.stripeTest = this.fb.group({\r\n\t\t  plan_type: ['']\r\n\t\t});\r\n\t\tthis.stripeService.elements(this.elementsOptions)\r\n\t\t  .subscribe(elements => {\r\n\t\t\tthis.elements = elements;\r\n\t\t\t// Only mount the element the first time\r\n\t\t\tif (!this.card) {\r\n\t\t\t  this.card = this.elements.create('card', {\r\n\t\t\t\thidePostalCode:true,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t  base: {\r\n\t\t\t\t\t iconColor: '#203767',\r\n\t\t\t\t\tcolor: '#616161',\r\n\t\t\t\t\tlineHeight: '40px',\r\n\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\tfontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t   ':-webkit-autofill': {\r\n\t\t\t\t\t\tcolor: '#fce883',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'::placeholder': {\r\n\t\t\t\t\t\t color: '#87BBFD',\r\n\t\t\t\t\t},\r\n\t\t\t\t  }\r\n\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t  });\r\n\t\t\t  this.card.mount('#card-element');\r\n\t\t\t}\r\n\t\t  });\r\n\t}\r\n  buy() {\r\n\tthis.isSubmit = true;\r\n\tthis.stripeService\r\n      .createToken(this.card,{})\r\n      .subscribe(result => {\r\n\t\t  console.log(result.token);\r\n        if (result.token) {\r\n\t\t\t\r\n\t\t\tvar _user_id = localStorage.getItem('userid')\r\n\t\t\tif(this.type == 'purchase'){\r\n\t\t\t\tthis.jobservice.makePayment(result.token.id,this.planId,_user_id).subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tthis.isSubmit = false;\r\n\t\t\t\t\t\tlocalStorage.setItem('total_bid',result.totalbids); \r\n\t\t\t\t\t\tthis._flashMessagesService.show(\"Plan purchased successfully\", { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t\tthis.dialogRef.close('Success');\r\n\t\t\t\t\t\t},3000);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._flashMessagesService.show(result.message.message, { cssClass: 'alert-error',timeout:6000});\r\n\t\t\t\t\t}\r\n\t\t\t\t   \r\n\t\t\t\t}); \r\n\t\t\t}\r\n\t\t\tif(this.type == 'update'){\r\n\t\t\t\tthis.jobservice.updatePayment(result.token.id,this.planId,_user_id).subscribe(result =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(result.success){\r\n\t\t\t\t\t\tthis.isSubmit = false;\r\n\t\t\t\t\t\tlocalStorage.setItem('total_bid',result.totalbids); \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis._flashMessagesService.show(\"Plan updated successfully\", { cssClass: 'alert-success',timeout:6000});\r\n\t\t\t\t\t\tsetTimeout(() => {           // or do some API calls/ Async events\r\n\t\t\t\t\t\t\tthis.dialogRef.close('Success');\r\n\t\t\t\t\t\t},3000);\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis._flashMessagesService.show(result.message.message, { cssClass: 'alert-error',timeout:6000});\r\n\t\t\t\t\t}\r\n\t\t\t\t   \r\n\t\t\t\t}); \r\n\t\t\t}\r\n          \r\n        } else if (result.error) {\r\n         this.isSubmit = false;\r\n          console.log(result.error.message);\r\n        }\r\n      }); \r\n  }\r\n  \r\n\r\n}\r\n\r\n\r\n","module.exports = \".InputElement  {\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  left: 0;\\r\\n   padding: 11px 15px 11px 0;\\r\\n  bottom: 0;\\r\\n  padding-bottom: 7px;\\r\\n  color: #32325d;\\r\\n  background-color: transparent;\\r\\n}\\r\\n\\r\\n.example.example1 * {\\r\\n  font-family: Roboto, Open Sans, Segoe UI, sans-serif;\\r\\n  font-size: 16px;\\r\\n  font-weight: 500;\\r\\n}\\r\\n\\r\\n.example.example1 h1{\\r\\n\\tpadding:10px\\r\\n}\\r\\n\\r\\n.example.example1 fieldset {\\r\\n  margin: 0 15px 20px;\\r\\n  padding: 0;\\r\\n  border-style: none;\\r\\n\\r\\n  box-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08),\\r\\n    inset 0 1px 0 #829fff;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.example.example1 .row {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  margin-left: 15px;\\r\\n}\\r\\n\\r\\n.example.example1 .row + .row {\\r\\n  border-top: 1px solid #819efc;\\r\\n}\\r\\n\\r\\n.example.example1 label {\\r\\n  width: 15%;\\r\\n  min-width: 70px;\\r\\n  padding: 11px 0;\\r\\n  color: #c4f0ff;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\\r\\n.example.example1 input, .example.example1 button {\\r\\n  -webkit-appearance: none;\\r\\n  -moz-appearance: none;\\r\\n  appearance: none;\\r\\n  outline: none;\\r\\n  border-style: none;\\r\\n}\\r\\n\\r\\n.example.example1 input:-webkit-autofill {\\r\\n  -webkit-text-fill-color: #fce883;\\r\\n  transition: background-color 100000000s;\\r\\n  -webkit-animation: 1ms void-animation-out;\\r\\n}\\r\\n\\r\\n.example.example1 .StripeElement--webkit-autofill {\\r\\n  background: transparent !important;\\r\\n}\\r\\n\\r\\n.example.example1 .StripeElement {\\r\\n  width: 100%;\\r\\n  padding: 11px 15px 11px 0;\\r\\n}\\r\\n\\r\\n.example.example1 input {\\r\\n  width: 100%;\\r\\n  padding: 11px 15px 11px 0;\\r\\n  color: #fff;\\r\\n  background-color: transparent;\\r\\n  -webkit-animation: 1ms void-animation-out;\\r\\n}\\r\\n\\r\\n.example.example1 input::-webkit-input-placeholder {\\r\\n  color: #87bbfd;\\r\\n}\\r\\n\\r\\n.example.example1 input::-moz-placeholder {\\r\\n  color: #87bbfd;\\r\\n}\\r\\n\\r\\n.example.example1 input:-ms-input-placeholder {\\r\\n  color: #87bbfd;\\r\\n}\\r\\n\\r\\n.example.example1 button {\\r\\n  display: block;\\r\\n  width: calc(100% - 30px);\\r\\n  height: 40px;\\r\\n  margin: 40px 15px 0;\\r\\n  box-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08),\\r\\n    inset 0 1px 0 #ffb9f6;\\r\\n  border-radius: 4px;\\r\\n  color: #fff;\\r\\n  font-weight: 600;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.example.example1 button:active {\\r\\n  background-color: #d782d9;\\r\\n  box-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08),\\r\\n    inset 0 1px 0 #e298d8;\\r\\n}\\r\\n\\r\\n.example.example1 .error svg .base {\\r\\n  fill: #fff;\\r\\n}\\r\\n\\r\\n.example.example1 .error svg .glyph {\\r\\n  fill: #6772e5;\\r\\n}\\r\\n\\r\\n.example.example1 .error .message {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.example.example1 .success .icon .border {\\r\\n  stroke: #87bbfd;\\r\\n}\\r\\n\\r\\n.example.example1 .success .icon .checkmark {\\r\\n  stroke: #fff;\\r\\n}\\r\\n\\r\\n.example.example1 .success .title {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.example.example1 .success .message {\\r\\n  color: #9cdbff;\\r\\n}\\r\\n\\r\\n.example.example1 .success .reset path {\\r\\n  fill: #fff;\\r\\n}\\r\\n\\r\\n.alert-error{color:red !important}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvcGF5bWVudC9zdHJpcGUtZGlhbG9nLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsT0FBTztHQUNOLHlCQUF5QjtFQUMxQixTQUFTO0VBQ1QsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxvREFBb0Q7RUFDcEQsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFDQTtDQUNDO0FBQ0Q7O0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLGtCQUFrQjs7RUFFbEI7eUJBQ3VCO0VBQ3ZCLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUVFLGFBQWE7RUFFYixtQkFBbUI7RUFDbkIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsVUFBVTtFQUNWLGVBQWU7RUFDZixlQUFlO0VBQ2YsY0FBYztFQUNkLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLHFCQUFxQjtFQUNyQixnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGdDQUFnQztFQUNoQyx1Q0FBdUM7RUFDdkMseUNBQXlDO0FBQzNDOztBQUNBO0VBQ0Usa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsV0FBVztFQUNYLDZCQUE2QjtFQUM3Qix5Q0FBeUM7QUFDM0M7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsd0JBQXdCO0VBQ3hCLFlBQVk7RUFDWixtQkFBbUI7RUFDbkI7eUJBQ3VCO0VBQ3ZCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekI7eUJBQ3VCO0FBQ3pCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUEsYUFBYSxvQkFBb0IiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy91c2Vycy9wYXltZW50L3N0cmlwZS1kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLklucHV0RWxlbWVudCAge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBsZWZ0OiAwO1xyXG4gICBwYWRkaW5nOiAxMXB4IDE1cHggMTFweCAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBwYWRkaW5nLWJvdHRvbTogN3B4O1xyXG4gIGNvbG9yOiAjMzIzMjVkO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4uZXhhbXBsZS5leGFtcGxlMSAqIHtcclxuICBmb250LWZhbWlseTogUm9ib3RvLCBPcGVuIFNhbnMsIFNlZ29lIFVJLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG59XHJcbi5leGFtcGxlLmV4YW1wbGUxIGgxe1xyXG5cdHBhZGRpbmc6MTBweFxyXG59XHJcbi5leGFtcGxlLmV4YW1wbGUxIGZpZWxkc2V0IHtcclxuICBtYXJnaW46IDAgMTVweCAyMHB4O1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG5cclxuICBib3gtc2hhZG93OiAwIDZweCA5cHggcmdiYSg1MCwgNTAsIDkzLCAwLjA2KSwgMCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4wOCksXHJcbiAgICBpbnNldCAwIDFweCAwICM4MjlmZmY7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG59XHJcbi5leGFtcGxlLmV4YW1wbGUxIC5yb3cge1xyXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS5leGFtcGxlMSAucm93ICsgLnJvdyB7XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICM4MTllZmM7XHJcbn1cclxuXHJcbi5leGFtcGxlLmV4YW1wbGUxIGxhYmVsIHtcclxuICB3aWR0aDogMTUlO1xyXG4gIG1pbi13aWR0aDogNzBweDtcclxuICBwYWRkaW5nOiAxMXB4IDA7XHJcbiAgY29sb3I6ICNjNGYwZmY7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG59XHJcblxyXG4uZXhhbXBsZS5leGFtcGxlMSBpbnB1dCwgLmV4YW1wbGUuZXhhbXBsZTEgYnV0dG9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xyXG4gIGFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbi5leGFtcGxlLmV4YW1wbGUxIGlucHV0Oi13ZWJraXQtYXV0b2ZpbGwge1xyXG4gIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiAjZmNlODgzO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMTAwMDAwMDAwcztcclxuICAtd2Via2l0LWFuaW1hdGlvbjogMW1zIHZvaWQtYW5pbWF0aW9uLW91dDtcclxufVxyXG4uZXhhbXBsZS5leGFtcGxlMSAuU3RyaXBlRWxlbWVudC0td2Via2l0LWF1dG9maWxsIHtcclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZXhhbXBsZS5leGFtcGxlMSAuU3RyaXBlRWxlbWVudCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMTFweCAxNXB4IDExcHggMDtcclxufVxyXG5cclxuLmV4YW1wbGUuZXhhbXBsZTEgaW5wdXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDExcHggMTVweCAxMXB4IDA7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgLXdlYmtpdC1hbmltYXRpb246IDFtcyB2b2lkLWFuaW1hdGlvbi1vdXQ7XHJcbn1cclxuXHJcbi5leGFtcGxlLmV4YW1wbGUxIGlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICBjb2xvcjogIzg3YmJmZDtcclxufVxyXG5cclxuLmV4YW1wbGUuZXhhbXBsZTEgaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIge1xyXG4gIGNvbG9yOiAjODdiYmZkO1xyXG59XHJcblxyXG4uZXhhbXBsZS5leGFtcGxlMSBpbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gIGNvbG9yOiAjODdiYmZkO1xyXG59XHJcblxyXG4uZXhhbXBsZS5leGFtcGxlMSBidXR0b24ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAzMHB4KTtcclxuICBoZWlnaHQ6IDQwcHg7XHJcbiAgbWFyZ2luOiA0MHB4IDE1cHggMDtcclxuICBib3gtc2hhZG93OiAwIDZweCA5cHggcmdiYSg1MCwgNTAsIDkzLCAwLjA2KSwgMCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4wOCksXHJcbiAgICBpbnNldCAwIDFweCAwICNmZmI5ZjY7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uZXhhbXBsZS5leGFtcGxlMSBidXR0b246YWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDc4MmQ5O1xyXG4gIGJveC1zaGFkb3c6IDAgNnB4IDlweCByZ2JhKDUwLCA1MCwgOTMsIDAuMDYpLCAwIDJweCA1cHggcmdiYSgwLCAwLCAwLCAwLjA4KSxcclxuICAgIGluc2V0IDAgMXB4IDAgI2UyOThkODtcclxufVxyXG5cclxuLmV4YW1wbGUuZXhhbXBsZTEgLmVycm9yIHN2ZyAuYmFzZSB7XHJcbiAgZmlsbDogI2ZmZjtcclxufVxyXG5cclxuLmV4YW1wbGUuZXhhbXBsZTEgLmVycm9yIHN2ZyAuZ2x5cGgge1xyXG4gIGZpbGw6ICM2NzcyZTU7XHJcbn1cclxuXHJcbi5leGFtcGxlLmV4YW1wbGUxIC5lcnJvciAubWVzc2FnZSB7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5leGFtcGxlLmV4YW1wbGUxIC5zdWNjZXNzIC5pY29uIC5ib3JkZXIge1xyXG4gIHN0cm9rZTogIzg3YmJmZDtcclxufVxyXG5cclxuLmV4YW1wbGUuZXhhbXBsZTEgLnN1Y2Nlc3MgLmljb24gLmNoZWNrbWFyayB7XHJcbiAgc3Ryb2tlOiAjZmZmO1xyXG59XHJcblxyXG4uZXhhbXBsZS5leGFtcGxlMSAuc3VjY2VzcyAudGl0bGUge1xyXG4gIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4uZXhhbXBsZS5leGFtcGxlMSAuc3VjY2VzcyAubWVzc2FnZSB7XHJcbiAgY29sb3I6ICM5Y2RiZmY7XHJcbn1cclxuXHJcbi5leGFtcGxlLmV4YW1wbGUxIC5zdWNjZXNzIC5yZXNldCBwYXRoIHtcclxuICBmaWxsOiAjZmZmO1xyXG59XHJcblxyXG4uYWxlcnQtZXJyb3J7Y29sb3I6cmVkICFpbXBvcnRhbnR9Il19 */\"","module.exports = \".mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#1691be !important}\\r\\n.mat-checkbox{display:block}\\r\\ninput[type=checkbox], input[type=radio]{margin-right:8px}\\r\\n.payment_banner{\\r\\n\\tdisplay: block;\\r\\n\\twidth: 100%;\\r\\n\\ttext-align: center;\\r\\n\\tcolor: red;\\r\\n\\tbackground: #fffccc;\\r\\n\\tpadding: 10px;\\r\\n}\\r\\n.checkbox label{display:block;width:100%}\\r\\n/*************************************************************************************/\\r\\n.pro-btn-cls {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    padding: 0 10px;\\r\\n        padding-bottom: 0px;\\r\\n    border-bottom: 1px solid #ccc;\\r\\n    padding-bottom: 20px;\\r\\n}\\r\\n.mypro h2 {\\r\\n    padding-bottom: 0;\\r\\n    font-weight: 600;\\r\\n    padding-left: 10px;\\r\\n    margin: 0px;\\r\\n}\\r\\n.probtn:hover {\\r\\n    color: #fff;\\r\\n    background: #1F4372;\\r\\n    border-color: #1F4372;\\r\\n}\\r\\n.probtn {\\r\\n    background: #0092C1;\\r\\n    border-color: #0092C1;\\r\\n    color: #fff;\\r\\n    padding: 0px 15px;\\r\\n    line-height: 36px;\\r\\n    font-size: 14px;\\r\\n    border-radius: 2px;\\r\\n    transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\\r\\n}\\r\\n.mypro {\\r\\n   /* border: 1px solid #ccc;*/\\r\\n    padding: 20px 20px;\\r\\n    box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.1);\\r\\n    margin-top: 20px;\\r\\n}\\r\\n.basic-info {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    width: 100%;\\r\\n    padding-top: 20px;\\r\\n\\tpadding-left: 10px;\\r\\n\\tpadding-bottom: 10px;\\r\\n}\\r\\n.basic-info ul {\\r\\n    padding: 0;\\r\\n    margin: 0px;\\r\\n    width: 100%;\\r\\n}\\r\\n.basic-info ul {\\r\\n    list-style: none;\\r\\n}\\r\\n.basic-info ul li .urw {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    font-size: 18px;\\r\\n    line-height: 40px;\\r\\n}\\r\\n.basic-title {\\r\\n    width: 20%;\\r\\n    color: #0092c1;\\r\\n    display: inline-block;\\r\\n\\tfont-weight: 600;\\r\\n}\\r\\n.basic-txtinfo {\\r\\n    width: 100%;\\r\\n    font-size: 16px;\\r\\n    color: #4f4f4f;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEZBQThGLG1DQUFtQztBQUNqSSxjQUFjLGFBQWE7QUFFM0Isd0NBQXdDLGdCQUFnQjtBQUV4RDtDQUNDLGNBQWM7Q0FDZCxXQUFXO0NBQ1gsa0JBQWtCO0NBQ2xCLFVBQVU7Q0FDVixtQkFBbUI7Q0FDbkIsYUFBYTtBQUNkO0FBRUEsZ0JBQWdCLGFBQWEsQ0FBQyxVQUFVO0FBR3hDLHNGQUFzRjtBQUV0RjtJQUdJLGFBQWE7SUFHTCw4QkFBOEI7SUFDdEMsZUFBZTtRQUNYLG1CQUFtQjtJQUN2Qiw2QkFBNkI7SUFDN0Isb0JBQW9CO0FBQ3hCO0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixXQUFXO0FBQ2Y7QUFFQTtJQUNJLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIscUJBQXFCO0FBQ3pCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixrQkFBa0I7SUFJbEIsOEhBQThIO0FBRWxJO0FBRUE7R0FDRywyQkFBMkI7SUFDMUIsa0JBQWtCO0lBQ2xCLDJDQUEyQztJQUMzQyxnQkFBZ0I7QUFDcEI7QUFFQTtJQUdJLGFBQWE7SUFHYiw4QkFBOEI7SUFDOUIsV0FBVztJQUNYLGlCQUFpQjtDQUNwQixrQkFBa0I7Q0FDbEIsb0JBQW9CO0FBQ3JCO0FBQ0E7SUFDSSxVQUFVO0lBQ1YsV0FBVztJQUNYLFdBQVc7QUFDZjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxXQUFXO0lBR1gsYUFBYTtJQUNiLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLFVBQVU7SUFDVixjQUFjO0lBQ2QscUJBQXFCO0NBQ3hCLGdCQUFnQjtBQUNqQjtBQUVBO0lBQ0ksV0FBVztJQUNYLGVBQWU7SUFDZixjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNoZWNrYm94Om5vdCgubWF0LWNoZWNrYm94LWRpc2FibGVkKS5tYXQtYWNjZW50IC5tYXQtY2hlY2tib3gtcmlwcGxlIC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjojMTY5MWJlICFpbXBvcnRhbnR9XHJcbi5tYXQtY2hlY2tib3h7ZGlzcGxheTpibG9ja31cclxuXHJcbmlucHV0W3R5cGU9Y2hlY2tib3hdLCBpbnB1dFt0eXBlPXJhZGlvXXttYXJnaW4tcmlnaHQ6OHB4fVxyXG5cclxuLnBheW1lbnRfYmFubmVye1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRjb2xvcjogcmVkO1xyXG5cdGJhY2tncm91bmQ6ICNmZmZjY2M7XHJcblx0cGFkZGluZzogMTBweDtcclxufVxyXG5cclxuLmNoZWNrYm94IGxhYmVse2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJX1cclxuXHJcblxyXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcbi5wcm8tYnRuLWNscyB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XHJcbiAgICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgcGFkZGluZzogMCAxMHB4O1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwcHg7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4ubXlwcm8gaDIge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbn1cclxuXHJcbi5wcm9idG46aG92ZXIge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMUY0MzcyO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMUY0MzcyO1xyXG59XHJcbi5wcm9idG4ge1xyXG4gICAgYmFja2dyb3VuZDogIzAwOTJDMTtcclxuICAgIGJvcmRlci1jb2xvcjogIzAwOTJDMTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMHB4IDE1cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMzZweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgLjE1cyBlYXNlLWluLW91dCxiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsLXdlYmtpdC1ib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQ7XHJcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3JkZXItY29sb3IgLjE1cyBlYXNlLWluLW91dCwtd2Via2l0LWJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dDtcclxuICAgIC1vLXRyYW5zaXRpb246IGNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dDtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dDtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dCwtd2Via2l0LWJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuLm15cHJvIHtcclxuICAgLyogYm9yZGVyOiAxcHggc29saWQgI2NjYzsqL1xyXG4gICAgcGFkZGluZzogMjBweCAyMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuXHJcbi5iYXNpYy1pbmZvIHtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcclxuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG5cdHBhZGRpbmctbGVmdDogMTBweDtcclxuXHRwYWRkaW5nLWJvdHRvbTogMTBweDtcclxufVxyXG4uYmFzaWMtaW5mbyB1bCB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4uYmFzaWMtaW5mbyB1bCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcbi5iYXNpYy1pbmZvIHVsIGxpIC51cncge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xyXG59XHJcbi5iYXNpYy10aXRsZSB7XHJcbiAgICB3aWR0aDogMjAlO1xyXG4gICAgY29sb3I6ICMwMDkyYzE7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0Zm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5cclxuLmJhc2ljLXR4dGluZm8ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBjb2xvcjogIzRmNGY0ZjtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl19 */\"","module.exports = \"\\r\\n<div class=\\\"container job_change_step_page\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\r\\n\\t\\t<div class=\\\"col mypro\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"showthis && setusertype=='partner' && !user.customer_id\\\" class=\\\"payment_banner\\\">\\r\\n\\t\\t\\t\\tYour account is on hold due to non payment. Please make the payment for job listing and making bids on the jobs. <a routerLink=\\\"/purchase-plans/\\\">Get a Plan</a>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t \\r\\n\\t\\t\\t<div class=\\\"pro-btn-cls\\\">\\r\\n\\t\\t\\t\\t<h2> {{user.firstname}} {{user.lastname}} </h2>\\r\\n\\t\\t\\t\\t<a routerLink=\\\"/edit-profile\\\" class=\\\"probtn\\\" type=\\\"button\\\">  Edit Profile </a>\\r\\n\\t\\t\\t</div> \\r\\n\\t\\t\\t<div class=\\\"basic-info\\\">\\r\\n\\t\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t\\t<li><div class=\\\"urw\\\"> <span class=\\\"basic-title\\\"> State </span> <span class=\\\"basic-txtinfo\\\"> {{selectedState}} </span> </div></li>\\r\\n\\t\\t\\t\\t\\t<li><div href=\\\"#\\\" class=\\\"urw\\\"> <span class=\\\"basic-title\\\"> County </span> <span class=\\\"basic-txtinfo\\\"> {{user.county}} </span> </div></li>\\r\\n\\t\\t\\t\\t\\t<li><div href=\\\"#\\\" class=\\\"urw\\\"> <span class=\\\"basic-title\\\"> City </span> <span class=\\\"basic-txtinfo\\\"> {{user.city}} </span> </div></li>\\r\\n\\t\\t\\t\\t\\t<li><a href=\\\"#\\\" class=\\\"urw\\\"> <span class=\\\"basic-title\\\"> Street Address </span> <span class=\\\"basic-txtinfo\\\"> {{user.address}}</span> </a></li>\\r\\n\\t\\t\\t\\t\\t<li><div href=\\\"#\\\" class=\\\"urw\\\"> <span class=\\\"basic-title\\\"> Zipcode </span> <span class=\\\"basic-txtinfo\\\"> {{user.zipcode}} </span> </div></li>\\r\\n\\t\\t\\t\\t\\t<li><div href=\\\"#\\\" class=\\\"urw\\\"> <span class=\\\"basic-title\\\"> Phone </span> <span class=\\\"basic-txtinfo\\\"> {{user.phone}} </span> </div></li>\\r\\n\\t\\t\\t\\t\\t<li *ngIf=\\\"user.totalbid\\\"><div href=\\\"#\\\" class=\\\"urw\\\"> <span class=\\\"basic-title\\\"> Bid Left </span> <span class=\\\"basic-txtinfo\\\">({{user.totalbid}} bids left) </span> </div></li>\\r\\n\\t\\t\\t\\t\\t<li *ngIf = \\\"setusertype=='partner'\\\" >\\r\\n\\t\\t\\t\\t\\t\\t<div href=\\\"#\\\" class=\\\"urw\\\"> <span class=\\\"basic-title\\\"> Services </span> <span class=\\\"basic-txtinfo\\\"> {{userselectedservices}} </span> </div> \\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t</div>\\t  \\r\\n\\t\\t</div>\\r\\n\\r\\n\\t</div>\\r\\n</div> \\r\\n\\r\\n\"","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { JobService } from './../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormArray,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { Title } from '@angular/platform-browser';\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\t\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'profile.component.html',\r\n  styleUrls : [ './profile.component.css' ]\r\n})\r\n\r\nexport class ProfileComponent implements OnInit {\r\n\tangForm: FormGroup;angPartnerForm: FormGroup;\r\n\ttitle = 'Login User';\r\n\t//error :any=\"\";\r\n\tresult :any =\"\";\r\n\tuser:any =\"\"; \r\n\tstates:any = '';\r\n\tcounties:any = '';jobservices:any = '';setusertype:any = '';\r\n\tcities:any = '';\r\n\tsubmitted = false;\r\n\tsubmittedpartner = false;showthis = false;\r\n\tservices:any='';\r\n\tstateName = '';\r\n\tstatename = '';countyName = '';currentState='';currentCounty='';userid='';\r\n\tselectedFile:any='';interests = []; userImage = [];\r\n\timage_url ='';partner_image_url =''; \r\n\tisChecked:any = '';userselectedservices:any=\"\";selectedState:any=\"\";\r\n\t\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private jobservice: JobService,\r\n\t\t private router: Router, private userservice: UserService, private fb: FormBuilder,private titleService: Title, private changeDetectionRef:ChangeDetectorRef){ \r\n\t\t\r\n\t\t//this.addCheckboxes();\r\n\t\tthis.titleService.setTitle( 'Profile | MoveLaunch' );\r\n\t\t  \r\n\t}\r\n\r\n\r\n\tngOnDestroy(){\r\n      this.changeDetectionRef.detach();\r\n    }\r\n\r\n\tgetCounties(event){\r\n\t\tthis.stateName = event.target.value;\r\n\t\tthis.userservice.getCounties(this.stateName).subscribe(result => {\r\n\t\t\tthis.counties = result;\r\n\t\t});\r\n\t\t\r\n\t}  \r\n\tgetCities(event){\r\n\t\tthis.countyName = event.target.value;\r\n\t\t\r\n\t\tthis.statename = this.angForm.value.state;\r\n\t\t this.userservice.getCities(this.countyName,this.statename).subscribe(result => {\r\n\t\t\tthis.cities = result;\r\n\t\t}); \r\n\r\n\t}  \r\n\tgetServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t}); \r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tif (!this.changeDetectionRef['destroyed']) {\r\n\t\t\tthis.changeDetectionRef.detectChanges();\r\n\t\t}\r\n\r\n\r\n\t\tthis.setusertype =  localStorage.getItem('user_role');\r\n\t\tthis.isChecked = true;\r\n\t\t\r\n\t\tif(this.setusertype == 'user'){\r\n\t\t\tthis.userservice.getUsers().subscribe(result => {\r\n\t\t\t\tconsole.log('i got it ', result);\r\n\r\n\t\t\t\tthis.user = result[0]; \r\n\t\t\t\tvar currentState = this.user.state;\r\n\t\t\t\tvar currentCounty = this.user.county;\r\n\t\t\t\tvar user_pic = this.user.profile_pic;\r\n\t\t\t\tvar user_id = this.user._id;\r\n\t\t\t\t\r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t\t//console.log(this.states);\r\n\t\t\t\t\tthis.states.forEach((x,key) => {\r\n\t\t\t\t\t\tif(currentState == x.abbv){\r\n\t\t\t\t\t\t\tconsole.log(x);\r\n\t\t\t\t\t\t\tthis.selectedState = x.name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(currentState != undefined || currentState != 'undefined') {\r\n\t\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.userservice.getCounties(this.states).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(currentCounty != undefined || currentCounty != 'undefined') {\r\n\t\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.userservice.getCities(this.counties, this.states).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t \r\n\t\t\t\tthis.userImage['src'] = environment.image_url+user_id+'/'+user_pic;\r\n\t\t\t\tthis.selectedFile = this.userImage;\r\n\t\t\t\treturn this.user;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif(this.setusertype == 'partner'){\r\n\t\t\tvar _user_id = localStorage.getItem('userid')\r\n\t\t\tthis.userservice.getPartner(_user_id).subscribe(result => {\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.user = result.user; \r\n\t\t\t\tconsole.log(this.jobservices);\r\n\t\t\t\tvar setApp = [];\r\n\t\t\t\tfor(var i=0;i<this.jobservices.length;i++ ){\r\n\t\t\t\t\tvar servic = this.user.services;\r\n\t\t\t\t\tvar _id = this.jobservices[i]._id;\r\n\t\t\t\t\tvar _name = this.jobservices[i].name;\r\n\t\t\t\t\t$.each(servic,function(index,value){\r\n\t\t\t\t\t\t if(value == _id){\r\n\t\t\t\t\t\t\t var item = _name;\r\n\t\t\t\t\t\t\t setApp[i] = item;\r\n\t\t\t\t\t\t }\r\n\t\t\t\t\t });  \t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tif(this.user.customer_id){\r\n\t\t\t\t\tthis.showthis = false;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.showthis = true;\r\n\t\t\t\t}\r\n\t\t\t\tvar currentState = this.user.state;\r\n\t\t\t\tvar currentCounty = this.user.county;\r\n\t\t\t\tvar user_pic = this.user.profile_pic;\r\n\t\t\t\tvar user_id = this.user._id;\r\n\t\t\t\t\r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t\tthis.states.forEach((x,key) => {\r\n\t\t\t\t\t\tif(currentState == x.abbv){\r\n\t\t\t\t\t\t\tconsole.log(x);\r\n\t\t\t\t\t\t\tthis.selectedState = x.name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif(currentState != undefined || currentState != 'undefined') {\r\n\t\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.userservice.getCounties(this.states).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(currentCounty != undefined || currentCounty != 'undefined') {\r\n\t\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.userservice.getCities(this.counties, this.states).subscribe(result => {\r\n\t\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t\t}); \r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.userselectedservices = setApp;\r\n\t\t\t\tconsole.log(this.userselectedservices);\r\n\t\t\t\tif(user_pic){\r\n\t\t\t\t\tthis.userImage['src'] = environment.partner_image_url+user_id+'/'+user_pic;\r\n\t\t\t\t\tthis.selectedFile = this.userImage;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\treturn this.user;\r\n\t\t\t});\r\n\t\t} \r\n\t\t\r\n\t\t\r\n\t\tthis.getServices();\r\n\t}\r\n}\r\n","module.exports = \":host /deep/ .mat-c%heckbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#1691be !important}\\r\\n:host /deep/ .mat-checkbox-checked.mat-accent .mat-checkbox-background, .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background{background-color:#1691be !important}\\r\\n.mat-checkbox{display:block}\\r\\nbody{ background-color: #eef8fc !important}\\r\\n:root {\\r\\n    background-color: #eef8fc !important\\r\\n}\\r\\n.content_wrapper{height: calc(100vh - 180px);}\\r\\n:host /deep/ .mat-checkbox-layout{display:block !important;width: 100%;}\\r\\n.signup-form .invalid-feedback {\\r\\n    position: absolute;\\r\\n    bottom: -19px;\\r\\n    font-size: 12px;\\r\\n    margin: 0;\\r\\n}\\r\\n.signup-form .form-group {\\r\\n    position: relative;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.second_form{width:95%}\\r\\nlabel{float:left}\\r\\n.signup-form .form-main .form-control, .signin-form .form-main .form-control{margin-bottom:0}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0R0FBNEcsbUNBQW1DO0FBQy9JLHdJQUF3SSxtQ0FBbUM7QUFDM0ssY0FBYyxhQUFhO0FBQzNCLE1BQU0sb0NBQW9DO0FBQzFDO0lBQ0k7QUFDSjtBQUNBLGlCQUFpQiwyQkFBMkIsQ0FBQztBQUk3QyxrQ0FBa0Msd0JBQXdCLENBQUMsV0FBVyxDQUFDO0FBRXZFO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixlQUFlO0lBQ2YsU0FBUztBQUNiO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCLE1BQU0sVUFBVTtBQUNoQiw2RUFBNkUsZUFBZSIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL3VzZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCAvZGVlcC8gLm1hdC1jJWhlY2tib3g6bm90KC5tYXQtY2hlY2tib3gtZGlzYWJsZWQpLm1hdC1hY2NlbnQgLm1hdC1jaGVja2JveC1yaXBwbGUgLm1hdC1yaXBwbGUtZWxlbWVudHtiYWNrZ3JvdW5kLWNvbG9yOiMxNjkxYmUgIWltcG9ydGFudH1cclxuOmhvc3QgL2RlZXAvIC5tYXQtY2hlY2tib3gtY2hlY2tlZC5tYXQtYWNjZW50IC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCwgLm1hdC1jaGVja2JveC1pbmRldGVybWluYXRlLm1hdC1hY2NlbnQgLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5ke2JhY2tncm91bmQtY29sb3I6IzE2OTFiZSAhaW1wb3J0YW50fVxyXG4ubWF0LWNoZWNrYm94e2Rpc3BsYXk6YmxvY2t9XHJcbmJvZHl7IGJhY2tncm91bmQtY29sb3I6ICNlZWY4ZmMgIWltcG9ydGFudH1cclxuOnJvb3Qge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZjhmYyAhaW1wb3J0YW50XHJcbn1cclxuLmNvbnRlbnRfd3JhcHBlcntoZWlnaHQ6IGNhbGMoMTAwdmggLSAxODBweCk7fVxyXG5cclxuXHJcblxyXG46aG9zdCAvZGVlcC8gLm1hdC1jaGVja2JveC1sYXlvdXR7ZGlzcGxheTpibG9jayAhaW1wb3J0YW50O3dpZHRoOiAxMDAlO31cclxuXHJcbi5zaWdudXAtZm9ybSAuaW52YWxpZC1mZWVkYmFjayB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IC0xOXB4O1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcbi5zaWdudXAtZm9ybSAuZm9ybS1ncm91cCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbi5zZWNvbmRfZm9ybXt3aWR0aDo5NSV9XHJcbmxhYmVse2Zsb2F0OmxlZnR9XHJcbi5zaWdudXAtZm9ybSAuZm9ybS1tYWluIC5mb3JtLWNvbnRyb2wsIC5zaWduaW4tZm9ybSAuZm9ybS1tYWluIC5mb3JtLWNvbnRyb2x7bWFyZ2luLWJvdHRvbTowfSJdfQ== */\"","module.exports = \"<div class=\\\"form-wrapper signup-form \\\">\\r\\n\\t<div class=\\\"form-inner\\\">\\r\\n\\t\\t<div class=\\\"form-header\\\">Sign up</div> \\r\\n               \\r\\n\\t\\t<div class=\\\"signup-partner\\\">\\r\\n\\t\\t\\t<img class=\\\"logo-icon\\\" src=\\\"../../../assets/images/logo-icon.png\\\">\\r\\n\\t\\t\\t<h1>Sign up <span>here</span></h1>\\r\\n\\t\\t\\t<ul class=\\\"nav nav-pills mb-3\\\" id=\\\"pills-tab\\\" role=\\\"tablist\\\" >\\r\\n\\t\\t\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t\\t<a class=\\\"nav-link\\\" (click)= \\\"set_user_role('user')\\\" [ngClass]=\\\"(setusertype=='user')?'active':''\\\" id=\\\"customer\\\" data-toggle=\\\"pill\\\" href=\\\"#pill-customer\\\" role=\\\"tab\\\" aria-controls=\\\"pills-home\\\" aria-selected=\\\"true\\\">As a Customer</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t\\t<a class=\\\"nav-link\\\" (click)= \\\"set_user_role('partner')\\\" [ngClass]=\\\"(setusertype=='partner')?'active':''\\\" id=\\\"partner\\\" data-toggle=\\\"pill\\\" href=\\\"#pill-partner\\\" role=\\\"tab\\\" aria-controls=\\\"pills-profile\\\" aria-selected=\\\"false\\\">As a Partner</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t<flash-messages></flash-messages>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"tab-content second_form\\\" id=\\\"pills-tabContent\\\" style=\\\"border:none\\\" >\\r\\n\\t\\t\\t\\r\\n\\t\\t  <div class=\\\"tab-pane fade show\\\" [ngClass]=\\\"(setusertype=='user')?'active':''\\\" id=\\\"pill-customer\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"pills-home-tab\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<form [formGroup]=\\\"angForm\\\" class=\\\"form-main\\\" >\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div id=\\\"step1\\\" class=\\\"col-sm-12 first_form\\\" *ngIf=\\\"first_show\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" #email placeholder=\\\"Email address\\\" (keyup)=\\\"emailAlready(email.value)\\\" [ngClass]=\\\"{ 'is-invalid': first_submitted && f.email.errors }\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"first_submitted && f.email.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tEmail is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['email'].errors.pattern\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease enter Valid Email .\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"  [ngClass]=\\\"{ 'is-invalid': first_submitted && f.password.errors }\\\"  placeholder=\\\"Password\\\" #password />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"first_submitted && f.password.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['password'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tPassword is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['password'].errors.minlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tName must be at least 5 characters long.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['password'].errors.maxlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tName can be max 10 characters long.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<button (click)=\\\"check()\\\" class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\">Next</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div id=\\\"step2\\\" class=\\\"col-sm-12 second_form\\\" *ngIf=\\\"show\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>First Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail4\\\" placeholder=\\\"First Name*\\\" formControlName=\\\"firstName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.firstName.errors.required\\\">Firstname is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Last Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\" placeholder=\\\"Last name*\\\" formControlName=\\\"lastName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.lastName.errors.required\\\">Lastname is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select  id=\\\"inputState\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"state\\\" (change)= \\\"getCounties($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.state.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.state.errors.required\\\">State is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>County</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select  id=\\\"inputCounty\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"county\\\" (change)= \\\"getCities($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select County</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.county.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.county.errors.required\\\">County is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>City</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select  id=\\\"inputCity\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"city\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.city.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.city.errors.required\\\">City is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Street Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" placeholder=\\\"Street Address\\\"  formControlName=\\\"address\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.address.errors.required\\\">Street Address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" class=\\\"form-control\\\" id=\\\"inputEmail5\\\" placeholder=\\\"Zip*\\\"  formControlName=\\\"zip\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.zip.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.zip.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.zip.errors.required\\\">Zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.zip.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Phone</label>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\" placeholder=\\\"Phone*\\\"  formControlName=\\\"phone\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.phone.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.phone.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.phone.errors.required\\\">Phone is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.phone.errors.pattern\\\">Invlid Format EX:(123)465-7890</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\"  (ngSubmit)=\\\"onSubmit()\\\">Submit</button> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>  \\r\\n\\t\\t\\t \\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  \\r\\n\\t\\t\\t<div class=\\\"tab-pane fade \\\"  [ngClass]=\\\"(setusertype=='partner')?'active show':''\\\" id=\\\"pill-partner\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"pills-profile-tab\\\">\\r\\n\\t\\t\\t\\t<form [formGroup]=\\\"angPartnerForm\\\" class=\\\"form-main\\\" >\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div id=\\\"step1\\\" class=\\\"col-sm-12 first_form\\\" *ngIf=\\\"first_show_partner\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" #email placeholder=\\\"Email address\\\" (keyup)=\\\"emailAlready(email.value)\\\" [ngClass]=\\\"{ 'is-invalid': third_submitted && f1.email.errors }\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"third_submitted && f1.email.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.email.errors.required\\\">Email is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angPartnerForm.controls['email'].invalid && (angPartnerForm.controls['email'].dirty || angPartnerForm.controls['email'].touched)\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angPartnerForm.controls['email'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tEmail is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angPartnerForm.controls['email'].errors.pattern\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease enter Valid Email .\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t <div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"  [ngClass]=\\\"{ 'is-invalid': third_submitted && f.password.errors }\\\"  placeholder=\\\"Password\\\" #password />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"third_submitted && f1.password.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.password.errors.required\\\">Password is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angPartnerForm.controls['password'].invalid && (angPartnerForm.controls['password'].dirty || angPartnerForm.controls['password'].touched)\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angPartnerForm.controls['password'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tPassword is required.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angPartnerForm.controls['password'].errors.minlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tName must be at least 5 characters long.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angPartnerForm.controls['password'].errors.maxlength\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tName can be max 10 characters long.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<button (click)=\\\"checkpartner()\\\" class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\">Next</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div id=\\\"step2\\\" class=\\\"col-sm-12 second_form\\\" *ngIf=\\\"showpartner\\\" >\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>First Name</label>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail4\\\" placeholder=\\\"First Name*\\\" formControlName=\\\"firstName\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.firstName.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted4 && f1.firstName.errors\\\" class=\\\"invalid-feedback  text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.firstName.errors.required\\\">First Name is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Last Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\" placeholder=\\\"Last name*\\\" formControlName=\\\"lastName\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.lastName.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted4 && f1.lastName.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.lastName.errors.required\\\">Last Name is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Company Name</label>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail41\\\" placeholder=\\\"Company Name*\\\" formControlName=\\\"companyName\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.companyName.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted4 && f1.companyName.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.companyName.errors.required\\\">Company Name is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>State</label>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select  id=\\\"inputState\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"state\\\" (change)= \\\"getCounties($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.state.errors }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select State</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of states\\\" title=\\\"{{ state.abbv }}\\\" value=\\\"{{ state.abbv }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ state.name }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted4 && f1.state.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.state.errors.required\\\">State is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Counties</label>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"clearfix\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select  id=\\\"inputCounty\\\" multiple class=\\\"form-control getstate\\\" formControlName=\\\"county\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.county.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select Counties</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let county of counties\\\" title=\\\"{{ county }}\\\" value=\\\"{{ county }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  {{ county | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted4 && f1.county.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.county.errors.required\\\">Counties are required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t \\r\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<select  id=\\\"inputCity\\\"  class=\\\"form-control getstate\\\" formControlName=\\\"city\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.city.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\">Select City</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let city of cities\\\" title=\\\"{{ city }}\\\" value=\\\"{{ city }}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ city | titlecase }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>  -->\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6 text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>What services do you provide ?</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6 text-left service_label\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-checkbox *ngFor=\\\"let services of jobservices; let i=index\\\" type=\\\"checkbox\\\" id=\\\"services_checkbox_{{i}}\\\"  formControlName=\\\"services\\\"  (change)=\\\"onCheckboxChagen($event, services._id)\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.services.errors }\\\"> {{services.name}}</mat-checkbox>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted4 && f1.services.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.services.errors.required\\\">Services are required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Street Address</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" placeholder=\\\"Street Address\\\"  formControlName=\\\"address\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.address.errors }\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted4 && f1.address.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.address.errors.required\\\">Address is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Zipcode</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" maxlength=\\\"5\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" class=\\\"form-control\\\" id=\\\"inputEmail5\\\" placeholder=\\\"Zip*\\\"  formControlName=\\\"zip\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.zip.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted4 && f.zip.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.zip.errors.required\\\">Zipcode is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.zip.errors.maxLength\\\">5 Digits are allowed in zipcode</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>Phone</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\" placeholder=\\\"Phone*\\\"  formControlName=\\\"phone\\\" [ngClass]=\\\"{ 'is-invalid': submitted4 && f1.phone.errors }\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted4 && f1.phone.errors\\\" class=\\\"invalid-feedback text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f1.phone.errors.required\\\">Phone is required</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.phone.errors.pattern\\\">Invlid Format EX:(123)465-7890</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-row\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmitPartner()\\\"  (ngSubmit)=\\\"onSubmitPartner()\\\">Submit</button> \\r\\n\\t\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t\\t</div> \\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t  \\r\\n\\t\\t</div> \\r\\n\\t</div>\\r\\n </div>\"","import { Component, OnInit,Input, Output, EventEmitter,Inject  } from '@angular/core';\r\nimport { UserService } from '../../../../services/user.service';\r\nimport { ActivatedRoute, Router,NavigationEnd } from '@angular/router';\r\nimport { JobService } from '../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: 'register.component.html',\r\n  styleUrls : [ './register.component.css' ]\r\n})\r\nexport class RegisterComponent implements OnInit{\r\n\r\n\ttitle = 'SignUp';\r\n\tresult:any = '';\r\n\tresponse :any=\"\";jobservices:any=\"\";\r\n\tstates:any = '';\r\n\tcounties:any = '';\r\n\troles:any = '';\r\n\tcities:any = '';\r\n\t\r\n\tangForm: FormGroup;\r\n\tangPartnerForm : FormGroup;\r\n\tfirst_show = false;first_show_partner = false;\r\n\tshow = false;showpartner = false;\r\n\tstateName = '';\r\n\tstatename = '';countyName = '';setusertype = '';\r\n\t\r\n\tsubmitted = false;submitted4 = false;\r\n\tfirst_submitted = false;third_submitted = false;\r\n\tinterests = []; Checked_0;Checked_1;Checked_2;\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private router: Router,private userservice: UserService,private jobservice: JobService, private fb: FormBuilder,private titleService: Title) {\r\n\t\tthis.createForm();\r\n\t\tthis.titleService.setTitle( 'Create Account | MoveLaunch' );\r\n\t\tthis.router.routeReuseStrategy.shouldReuseRoute = function(){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n    /* Signup Form validation */ \r\n   createForm() {\r\n\t   \r\n\t   this.setusertype =  localStorage.getItem('usertype');\r\n\t   \r\n\t   this.getSate();\r\n\t   if( this.setusertype == 'user'){\r\n\t\t    this.getRoles('user');\r\n\t   }\r\n\t   if( this.setusertype == 'partner'){\r\n\t\t   this.getRoles('partner');\r\n\t   }\r\n\t  \r\n\t   \r\n\t   \r\n\t   /* this.passwordFormGroup = this.fb.group({\r\n\t\t   password:['',  Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(10)])], \r\n\t\t}); */\r\n\t\t\r\n\t\t\r\n\t\t/* Signup Form field for user validation */ \r\n\t\tthis.angForm = this.fb.group({\r\n\t\t\t // name: ['',  Validators.required ],\r\n\t\t\t  state: ['', Validators.required ],\r\n\t\t\t  firstName: ['', Validators.required ],\r\n\t\t\t  lastName: ['', Validators.required ],\r\n\t\t\t  county: ['', Validators.required ],\r\n\t\t\t  city: ['', Validators.required ],\r\n\t\t\t  zip: ['', Validators.required ],\r\n\t\t\t  phone: ['', Validators.compose([Validators.required,Validators.pattern('^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')])],\r\n\t\t\t  address: ['', Validators.required ],\r\n\t\t\t  email: new FormControl('', Validators.compose([\r\n\t\t\t  Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])),\r\n\t\t\t  password:['',  Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(10)])] \r\n\t\t}); \r\n\t\t\r\n\t\t\t/* Signup Form field for partner validation */ \r\n\t\tthis.angPartnerForm = this.fb.group({\r\n\t\t\t // name: ['',  Validators.required ],\r\n\t\t\t  state: ['', Validators.required ],\r\n\t\t\t  firstName: ['', Validators.required ],\r\n\t\t\t  lastName: ['', Validators.required ],\r\n\t\t\t  companyName: ['', Validators.required ],\r\n\t\t\t  county: ['', Validators.required ],\r\n\t\t\t  services: ['', Validators.required ],\r\n\t\t\t  zip: ['', Validators.required ],\r\n\t\t\t  phone: ['', Validators.compose([Validators.required,Validators.pattern('^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')])],\r\n\t\t\t  address: ['', Validators.required ],\r\n\t\t\t  email: new FormControl('', Validators.compose([\r\n\t\t\t  Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])),\r\n\t\t\t  password:['',  Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(10)])] \r\n\t\t}); \r\n   }\r\n   \r\n //  check if user has entered username and email in first step\r\n   check(){\r\n\t   \r\n\t   this.first_submitted = true;\r\n\t   \r\n\t\tif(this.angForm.controls['email'].invalid || this.angForm.controls['password'].invalid){\r\n\t\t\tthis.show = false;\r\n\t\t\tthis.first_show = true;\r\n\t\t\treturn this.angForm.controls;\r\n\t\t}else{\r\n\t\t\tthis.show = true;\r\n\t\t\tthis.first_show = false;\r\n\t\t\treturn this.angForm.controls;\r\n\t\t}\r\n   }\r\n   getServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t}); \r\n\t}\r\n    //  check if partner has entered username and email in first step\r\n    checkpartner(){\r\n\t   \r\n\t   this.third_submitted = true;\r\n\t   \r\n\t\tif(this.angPartnerForm.controls['email'].invalid || this.angPartnerForm.controls['password'].invalid){\r\n\t\t\tthis.showpartner = false;\r\n\t\t\tthis.first_show_partner = true;\r\n\t\t\treturn this.angPartnerForm.controls;\r\n\t\t}else{\r\n\t\t\tthis.showpartner = true;\r\n\t\t\tthis.first_show_partner = false;\r\n\t\t\treturn this.angPartnerForm.controls;\r\n\t\t}\r\n   }\r\n   \r\n    //  get all the state from database\r\n   getSate(){\r\n  \r\n\t    this.userservice.getStates().subscribe(result => {\r\n\t\t  this.states = result;\r\n\t\t});\r\n\t   \r\n   }\r\n\t//  get user roles from database\r\n   getRoles(usertype){\r\n  \r\n\t    this.userservice.getUserRoles(usertype).subscribe(result => {\r\n\t\t\tthis.roles = result;\r\n\t\t\tconsole.log(this.roles);\r\n\t\t\t\r\n\t\t});\r\n\t   \r\n   }\r\n   \r\n   //  get counties on change of states\r\n\tgetCounties(event){\r\n\t\tthis.stateName = event.target.value;\r\n\t\tthis.userservice.getCounties(this.stateName).subscribe(result => {\r\n\t\t\tthis.counties = result;\r\n\t\t});\r\n\t\t\r\n\t}  \r\n\t//  get counties on change of county\r\n\tgetCities(event){\r\n\t\tthis.countyName = event.target.value;\r\n\t\t\r\n\t\tthis.statename = this.angForm.value.state;\r\n\t\t this.userservice.getCities(this.countyName,this.statename).subscribe(result => {\r\n\t\t\tthis.cities = result;\r\n\t\t}); \r\n\t}  \r\n  \r\n   /* *** add user ** */\r\n  emailAlready(email) {\r\n      this.userservice.emailAlready(email).subscribe(result => {\r\n\t\t\tthis.response = result;\r\n      });\r\n  }\r\n  get f() { return this.angForm.controls; }\r\n  get f1() { return this.angPartnerForm.controls; }\r\n   \r\n  onSubmit() {\r\n        this.submitted = true;\r\n\t\r\n        // stop here if form is invalid\r\n        if(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\tvar user = this.angForm.value;\r\n\t\t\tvar userRole = this.roles[0]._id;\r\n\t\t\tthis.userservice.addUser(user,userRole).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\tthis.submitted = false;\r\n\t\t\t\tthis.show = false;\r\n\t\t\t\tthis.first_show = true;\r\n\t\t\t\tthis.first_submitted = false;\r\n\t\t\t\t\r\n\t\t\t\t if(result.success){\r\n\t\t\t\t\tthis._flashMessagesService.show('Thank you for the registration. Please check your email to confirm your account.', { cssClass: 'alert-success',timeout:10000}); \r\n\t\t\t\t\t\r\n\t\t\t\t\t//this.angForm.reset();\r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t  }  \r\n\t\t\t   \r\n\t\t\t});\r\n\t\t\t \r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n    }\r\n\r\n\tonSubmitPartner() {\r\n\t\t\r\n        this.submitted4 = true;\r\n\t\r\n        // stop here if form is invalid\r\n        if(this.angPartnerForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\tvar user = this.angPartnerForm.value;\r\n\t\t\tthis.angPartnerForm.value.services = this.interests;\r\n\t\t\t\r\n\t\t\tvar userRole = this.roles[0]._id;\r\n\t\t\t\r\n\t\t\tthis.userservice.addPartner(user,userRole).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tthis.submitted4 = false;\r\n\t\t\t\tthis.showpartner = false;\r\n\t\t\t\tthis.first_show_partner = true;\r\n\t\t\t\tthis.third_submitted = false; \r\n\t\t\t\t\r\n\t\t\t  if(result.success){\r\n\t\t\t\t\tthis._flashMessagesService.show('Thanks for registration Please check your email to confirm your account.', { cssClass: 'alert-success',timeout:10000}); \r\n\t\t\t\t\t\r\n\t\t\t\t\t//this.angForm.reset();\r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});\r\n\t\t\t\t  } \r\n\t\t\t   \r\n\t\t\t}); \r\n\t\t\t \r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n    }\r\n\tonCheckboxChagen(event, value) {\r\n\t\t\r\n\t\tif (event.checked) {\r\n\r\n\t\t  this.interests.push(value);\r\n\t\t} \r\n\r\n\t\tif (!event.checked) {\r\n\r\n\t\t\tlet index = this.interests.indexOf(value);\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tthis.interests.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n  \r\n  /* *** Add User ** */\r\n\t\r\n\tset_user_role(type){\r\n\t\tthis.getRoles(type);\r\n\t\tlocalStorage.setItem('usertype',type);\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.first_show = true;\r\n\t\tthis.first_show_partner = true;\r\n\t\tthis.getServices();\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n","module.exports = \"<div class=\\\"container joblisting-panel-wrap\\\">\\r\\n<div class=\\\"joblisting-panel text-center verify\\\">\\r\\n\\t<div class=\\\"col-12\\\">\\r\\n\\t<i class=\\\"fas fa-check\\\"></i>\\r\\n\\t<h3 class=\\\"title\\\">Thank you for verified your account</h3>\\r\\n\\t<br> \\r\\n\\t<h2 class=\\\"desc\\\">Please click here to <a routerLink=\\\"/login\\\">login</a> to your account and create jobs.</h2>\\r\\n\\t</div>\\r\\n </div>\\t\\r\\n</div>\\t\\t\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../../services/user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators ,FormControl} from '@angular/forms';\r\n//import { PasswordValidator } from '../../../validator/password.validator';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n@Component({\r\n selector: 'app-register',\r\n  templateUrl: 'verify.component.html'\r\n})\r\nexport class VerifyComponent implements OnInit{\r\n\tverifycode ='';\r\n  constructor(private _flashMessagesService: FlashMessagesService,private userservice: UserService,private router: Router,  private fb: FormBuilder,private route: ActivatedRoute,private titleService: Title) {\r\n\t\tthis.titleService.setTitle( 'Verify | MoveLaunch' );\r\n\t\t\r\n   }\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.verifycode = this.route.snapshot.paramMap.get('verifycode');\r\n\t\tthis.userservice.getUserVerified(this.verifycode).subscribe(result => {\r\n\t\t\tconsole.log(result);\r\n\t\t\tif(result.success){\r\n\t\t\t\tthis._flashMessagesService.show('Account Has been Verified successfully. Thanks!', { cssClass: 'alert-success',timeout:2000});\r\n\t\t\t\tthis.router.navigate(['/login']);\r\n\t\t\t}else{\r\n\t\t\t\tthis._flashMessagesService.show('Wrong Code or invalid account.', { cssClass: 'alert-danger',timeout:2000});\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t});\r\n\t\t  \r\n    }\r\n   \r\n\t\r\n\t\t\r\n\t\r\n\t\r\n}\r\n","module.exports = \"<div class=\\\"form-wrapper signin-form\\\">\\r\\n<div class=\\\"form-inner\\\">\\r\\n<div class=\\\"form-header\\\">Reset Password</div> \\r\\n           <form class=\\\"form-main\\\" [formGroup]=\\\"angForm\\\" novalidate>\\r\\n\\t\\t    <div class=\\\"first_form\\\">\\r\\n\\t\\t    <img class=\\\"logo-icon\\\" src=\\\"../../../../assets/images/logo-icon.png\\\">\\r\\n\\t\\t\\t <h1>Reset <span>Password</span></h1>\\r\\n\\t\\t\\t <flash-messages></flash-messages>   \\r\\n\\t\\t\\t  <div class=\\\"input-group mb-3\\\">\\r\\n\\t\\t\\t\\t   <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"  placeholder=\\\"Password\\\" #password />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t  <div *ngIf=\\\"angForm.controls['password'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\tPassword is required.\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t  <div *ngIf=\\\"angForm.controls['password'].errors.minlength\\\">\\r\\n\\t\\t\\t\\t\\t\\tName must be at least 5 characters long.\\r\\n\\t\\t\\t\\t  </div> \\r\\n\\t\\t\\t\\t   <div *ngIf=\\\"angForm.controls['password'].errors.maxlength\\\">\\r\\n\\t\\t\\t\\t\\t\\tName can be max 10 characters long.\\r\\n\\t\\t\\t\\t   </div> \\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t  <button (click)=\\\"onSubmit()\\\"  (ngSubmit)=\\\"onSubmit()\\\" class=\\\"btn btn-lg btn-primary\\\">Submit</button><br />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t</form>\\r\\n     </div>\\r\\n </div>\\r\\n \\r\\n \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'resetpassword.component.html'\r\n})\r\nexport class ResetpasswordComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  title = 'Login User';\r\n  //error :any=\"\";\r\n  result :any =\"\";  \r\n   submitted = false;\r\n  verifycode ='';\r\n  \r\n  constructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute, private router: Router, private userservice: UserService, private fb: FormBuilder,private titleService: Title\t) { \r\n    this.LoginForm();\r\n\tthis.titleService.setTitle( 'Reset Password | MoveLaunch' );\r\n   }\r\n\t\r\n  LoginForm() {\r\n    this.angForm = this.fb.group({ \r\n    password:['',  Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(10)])],\r\n   });\r\n  }\r\n get f() { return this.angForm.controls; }\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\t\r\n        // stop here if form is invalid\r\n        if(this.angForm.invalid){\r\n\t\t\t return;\r\n        }else{\r\n\t\t\tvar user = this.angForm.value;\r\n\t\t\tthis.verifycode = this.route.snapshot.paramMap.get('verifycode');\r\n\t\t\tconsole.log(user.password);\r\n\t\t\tthis.userservice.resetPassword(user.password,this.verifycode).subscribe(result =>\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t if(result.success){\r\n\t\t\t\t\tthis._flashMessagesService.show(result.message, { cssClass: 'alert-success',timeout:5000});\r\n\t\t\t\t\tthis.router.navigate(['/login']);\r\n\t\t\t\t  }else{\r\n\t\t\t\t\t  this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:10000}); \r\n\t\t\t\t  \r\n\t\t\t\t  }  \r\n\t\t\t   \r\n\t\t\t}); \r\n\t\t\t \r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n    }\r\n\t\r\n\r\n  ngOnInit() {\r\n\tthis.verifycode = this.route.snapshot.paramMap.get('verifycode');\r\n\tthis.userservice.password_code(this.verifycode).subscribe(result => {\r\n\t\tif(!result.success){\r\n\t\t\tthis._flashMessagesService.show(\"This code has been expired.\", { cssClass: 'alert-danger',timeout:2000});\r\n\t\t} \t\r\n\t\t\r\n\t});\r\n\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \".img-view img{\\r\\nwidth: 136px;\\r\\nheight: 136px;\\r\\n-o-object-fit: cover;\\r\\n   object-fit: cover;\\r\\nborder-radius: 50%;\\r\\n}\\r\\n.reviews_desc a{color:#203464}\\r\\n/* .desc .loc_lable{display:block} */\\r\\n.desc .loc_lable{width:115px;float: left;font-weight:bold}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.job-info .title{margin-bottom:15px}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.fa-quote-left,.fa-quote-right{   \\r\\n\\t\\tpadding: 0 4px;\\r\\n\\t\\tfont-size: 12px;\\r\\n\\t\\tvertical-align: super;\\r\\n\\t}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.job-info {\\r\\n    background: #ecf7fb;\\r\\n    padding: 2px 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.compleated{    font-size: 11px;\\r\\n    display: block;\\r\\n    float: left;\\r\\n    width: 100%;\\r\\n    margin: 10px 0;\\r\\n\\t}\\r\\n.reviews_desc{font-size:16px;font-style:italic}\\r\\n.name{font-size:18px}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvdmlld2FsbG5vdGlmaWNhdGlvbnMvdmlld2FsbG5vdGlmaWNhdGlvbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFlBQVk7QUFDWixhQUFhO0FBQ2Isb0JBQWlCO0dBQWpCLGlCQUFpQjtBQUNqQixrQkFBa0I7QUFDbEI7QUFDQSxnQkFBZ0IsYUFBYTtBQUM3QixvQ0FBb0M7QUFFcEMsaUJBQWlCLFdBQVcsQ0FBQyxXQUFXLENBQUMsZ0JBQWdCO0FBQ3pEO0lBQ0ksVUFBVTtBQUNkO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUNBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixxQkFBcUI7Q0FDdEI7QUFFRDtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCO0FBR0E7OztJQUdJLGNBQWM7QUFDbEI7QUFHQTtFQUNFLG9HQUFvRztFQUNwRyxZQUFZO0VBQ1osWUFBWTtFQUNaLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0VBQ1gsY0FBYztBQUNoQjtBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLG9HQUFvRztJQUNwRywyQkFBMkI7SUFDM0IsV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0VBQ2Y7QUFDQSxnQkFBZ0IsZUFBZTtJQUM3QixjQUFjO0lBQ2QsV0FBVztJQUNYLFdBQVc7SUFDWCxjQUFjO0NBQ2pCO0FBQ0MsY0FBYyxjQUFjLENBQUMsaUJBQWlCO0FBQzlDLE1BQU0sY0FBYyIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL3VzZXJzL3ZpZXdhbGxub3RpZmljYXRpb25zL3ZpZXdhbGxub3RpZmljYXRpb25zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nLXZpZXcgaW1ne1xyXG53aWR0aDogMTM2cHg7XHJcbmhlaWdodDogMTM2cHg7XHJcbm9iamVjdC1maXQ6IGNvdmVyO1xyXG5ib3JkZXItcmFkaXVzOiA1MCU7XHJcbn1cclxuLnJldmlld3NfZGVzYyBhe2NvbG9yOiMyMDM0NjR9XHJcbi8qIC5kZXNjIC5sb2NfbGFibGV7ZGlzcGxheTpibG9ja30gKi9cclxuXHJcbi5kZXNjIC5sb2NfbGFibGV7d2lkdGg6MTE1cHg7ZmxvYXQ6IGxlZnQ7Zm9udC13ZWlnaHQ6Ym9sZH1cclxuLnJhdGluZyB7XHJcbiAgICBmbG9hdDpsZWZ0O1xyXG59XHJcbi5qb2ItaW5mbyAudGl0bGV7bWFyZ2luLWJvdHRvbToxNXB4fVxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBpbnB1dCB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDotOTk5OXB4O1xyXG4gICAgY2xpcDpyZWN0KDAsMCwwLDApO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICAgIHdpZHRoOjFlbTtcclxuICAgIHBhZGRpbmc6MC4xZW07XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZToxMDAlO1xyXG4gICAgbGluZS1oZWlnaHQ6MS4yO1xyXG4gICAgY29sb3I6I2RkZDtcclxufVxyXG4uZmEtcXVvdGUtbGVmdCwuZmEtcXVvdGUtcmlnaHR7ICAgXHJcblx0XHRwYWRkaW5nOiAwIDRweDtcclxuXHRcdGZvbnQtc2l6ZTogMTJweDtcclxuXHRcdHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcclxuXHR9XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi5qb2ItaW5mbyB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZWNmN2ZiO1xyXG4gICAgcGFkZGluZzogMnB4IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9XHJcbiAgLmNvbXBsZWF0ZWR7ICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG5cdH1cclxuICAucmV2aWV3c19kZXNje2ZvbnQtc2l6ZToxNnB4O2ZvbnQtc3R5bGU6aXRhbGljfVxyXG4gIC5uYW1le2ZvbnQtc2l6ZToxOHB4fSJdfQ== */\"","module.exports = \"\\r\\n<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">Notifications</h3>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"container joblisting-panel-wrap\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-12\\\"  *ngIf=\\\"notifications && notifications.length > 0\\\" > \\r\\n\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let notification of notifications\\\" class=\\\"joblisting-panel\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"reviews_desc\\\">{{notification.notificationId.notification_message}} <b><i><a  routerLink=\\\"/detail-job/{{notification.jobId._id}}\\\">{{notification.service_name}} on {{notification.jobId.created_at | date:mediumDate}}</a></i></b> By <b><i>{{notification.senderId.firstname}} {{notification.senderId.lastname}}</i></b> On {{notification.created_at | date:mediumDate}}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { JobService } from './../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormArray,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { Title } from '@angular/platform-browser';\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\t\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'viewallnotifications.component.html',\r\n  styleUrls : [ './viewallnotifications.component.css' ]\r\n})\r\n\r\nexport class ViewAllNotificationsComponent implements OnInit {\r\n\tnotificationCount:any = '';  notifications:any = '';jobservices:any = '';userselectedservices:any = '';\r\n\t\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private jobservice: JobService, private router: Router, private userservice: UserService, private fb: FormBuilder,private titleService: Title){ \r\n\t\tthis.titleService.setTitle( 'Notifications | MoveLaunch' );\r\n\t}\r\n\tgetNotificationCount(){\r\n\t\t\r\n\t\tthis.userservice.getNotificationCountForUser().subscribe(result => {\r\n\t\t\tthis.notificationCount = result.count;\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tgetServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t}); \r\n\t}\r\n\t\r\n\tgetAllNotifications(){\r\n\t\t\r\n\t\tthis.userservice.getAllNotifications(0).subscribe(result => {\r\n\t\t\tthis.notifications = result.notfication;\r\n\t\t\tconsole.log(this.notifications);\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tthis.notifications.forEach((x,key) => {\r\n\t\t\t\tvar setApp = [];\r\n\t\t\t\tfor(var i=0;i<this.jobservices.length;i++ ){\r\n\t\t\t\t\tvar servic = x.jobId.serviceId;\r\n\t\t\t\t\tvar _id = this.jobservices[i]._id;\r\n\t\t\t\t\tvar _name = this.jobservices[i].name;\r\n\t\t\t\t\t$.each(servic,function(index,value){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(value != \"\" && value == _id){\r\n\t\t\t\t\t\t\t var item = _name;\r\n\t\t\t\t\t\t\t setApp[i] = item;\r\n\t\t\t\t\t\t } \r\n\t\t\t\t\t });  \t\t\r\n\t\t\t\t}\r\n\t\t\t\tvar filtered = setApp.filter(function (el) {\r\n\t\t\t\t  return el != null;\r\n\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\tthis.notifications[key].service_name = filtered.join(',');\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t}); \r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\r\n\tngOnInit() {\r\n\t\tthis.getServices();\r\n\t\tthis.getNotificationCount();\r\n\t\tthis.getAllNotifications();\r\n\t}\r\n}\r\n","module.exports = \".img-view img{\\r\\nwidth: 136px;\\r\\nheight: 136px;\\r\\n-o-object-fit: cover;\\r\\n   object-fit: cover;\\r\\nborder-radius: 50%;\\r\\n}\\r\\n/* .desc .loc_lable{display:block} */\\r\\n.desc .loc_lable{width:195px;float: left;font-weight:bold}\\r\\n.desc .loc_val{width:300px;}\\r\\n.title{\\r\\n\\tfont-size: 18px;\\r\\n    font-weight: 700;\\r\\n    margin: 10px 0;\\r\\n}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.job-info .title{margin-bottom:15px}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.fa-quote-left,.fa-quote-right{   \\r\\n\\t\\tpadding: 0 4px;\\r\\n\\t\\tfont-size: 12px;\\r\\n\\t\\tvertical-align: super;\\r\\n\\t}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.job-info {\\r\\n    background: #ecf7fb;\\r\\n    padding: 2px 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.compleated{    font-size: 11px;\\r\\n    display: block;\\r\\n    float: left;\\r\\n    width: 100%;\\r\\n    margin: 10px 0;\\r\\n\\t}\\r\\n.reviews_desc{font-size:16px;font-style:italic}\\r\\n.name{font-size:18px}\\r\\n.detail_class p{display:flex;margin-top:12px}\\r\\n@media (max-width: 575.98px){\\r\\n\\t.desc .loc_val{width:125px;float: left;font-weight:normal}\\r\\n\\t.desc .loc_val b{font-weight:normal}\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvdmlld3BhcnRuZXJwcm9maWxlL3ZpZXdwYXJ0bmVycHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaLGFBQWE7QUFDYixvQkFBaUI7R0FBakIsaUJBQWlCO0FBQ2pCLGtCQUFrQjtBQUNsQjtBQUNBLG9DQUFvQztBQUVwQyxpQkFBaUIsV0FBVyxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0I7QUFDekQsZUFBZSxXQUFXLENBQUM7QUFDM0I7Q0FDQyxlQUFlO0lBQ1osZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7QUFFQTtJQUNJLFVBQVU7QUFDZDtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFNBQVM7SUFDVCxhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFDZixVQUFVO0FBQ2Q7QUFDQTtFQUNFLGNBQWM7RUFDZCxlQUFlO0VBQ2YscUJBQXFCO0NBQ3RCO0FBRUQ7SUFDSSxhQUFhO0FBQ2pCO0FBRUE7SUFDSSxjQUFjO0FBQ2xCO0FBRUE7O0lBRUksY0FBYztBQUNsQjtBQUdBOzs7SUFHSSxjQUFjO0FBQ2xCO0FBR0E7RUFDRSxvR0FBb0c7RUFDcEcsWUFBWTtFQUNaLFlBQVk7RUFDWixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osV0FBVztFQUNYLGNBQWM7QUFDaEI7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmO0FBQ0EsZ0JBQWdCLGVBQWU7SUFDN0IsY0FBYztJQUNkLFdBQVc7SUFDWCxXQUFXO0lBQ1gsY0FBYztDQUNqQjtBQUNDLGNBQWMsY0FBYyxDQUFDLGlCQUFpQjtBQUM5QyxNQUFNLGNBQWM7QUFDckIsZ0JBQWdCLFlBQVksQ0FBQyxlQUFlO0FBQzNDO0NBQ0QsZUFBZSxXQUFXLENBQUMsV0FBVyxDQUFDLGtCQUFrQjtDQUN6RCxpQkFBaUIsa0JBQWtCO0FBQ3BDIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvdmlld3BhcnRuZXJwcm9maWxlL3ZpZXdwYXJ0bmVycHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmltZy12aWV3IGltZ3tcclxud2lkdGg6IDEzNnB4O1xyXG5oZWlnaHQ6IDEzNnB4O1xyXG5vYmplY3QtZml0OiBjb3ZlcjtcclxuYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcbi8qIC5kZXNjIC5sb2NfbGFibGV7ZGlzcGxheTpibG9ja30gKi9cclxuXHJcbi5kZXNjIC5sb2NfbGFibGV7d2lkdGg6MTk1cHg7ZmxvYXQ6IGxlZnQ7Zm9udC13ZWlnaHQ6Ym9sZH1cclxuLmRlc2MgLmxvY192YWx7d2lkdGg6MzAwcHg7fVxyXG4udGl0bGV7XHJcblx0Zm9udC1zaXplOiAxOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG59XHJcblxyXG4ucmF0aW5nIHtcclxuICAgIGZsb2F0OmxlZnQ7XHJcbn1cclxuLmpvYi1pbmZvIC50aXRsZXttYXJnaW4tYm90dG9tOjE1cHh9XHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGlucHV0IHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOi05OTk5cHg7XHJcbiAgICBjbGlwOnJlY3QoMCwwLDAsMCk7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsIHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6MWVtO1xyXG4gICAgcGFkZGluZzowLjFlbTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDoxLjI7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcbi5mYS1xdW90ZS1sZWZ0LC5mYS1xdW90ZS1yaWdodHsgICBcclxuXHRcdHBhZGRpbmc6IDAgNHB4O1xyXG5cdFx0Zm9udC1zaXplOiAxMnB4O1xyXG5cdFx0dmVydGljYWwtYWxpZ246IHN1cGVyO1xyXG5cdH1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlciB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjMTY5MWJlO1xyXG59XHJcblxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlcixcclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlciB+IGxhYmVsLFxyXG4ucmF0aW5nID4gbGFiZWw6aG92ZXIgfiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDIxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLmpvYi1pbmZvIHtcclxuICAgIGJhY2tncm91bmQ6ICNlY2Y3ZmI7XHJcbiAgICBwYWRkaW5nOiAycHggMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUtcmF0aW5ne1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBoZWlnaHQ6IDIxcHg7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gIH1cclxuICAuY29tcGxlYXRlZHsgICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luOiAxMHB4IDA7XHJcblx0fVxyXG4gIC5yZXZpZXdzX2Rlc2N7Zm9udC1zaXplOjE2cHg7Zm9udC1zdHlsZTppdGFsaWN9XHJcbiAgLm5hbWV7Zm9udC1zaXplOjE4cHh9XHJcbiAuZGV0YWlsX2NsYXNzIHB7ZGlzcGxheTpmbGV4O21hcmdpbi10b3A6MTJweH1cclxuICBAbWVkaWEgKG1heC13aWR0aDogNTc1Ljk4cHgpe1xyXG5cdC5kZXNjIC5sb2NfdmFse3dpZHRoOjEyNXB4O2Zsb2F0OiBsZWZ0O2ZvbnQtd2VpZ2h0Om5vcm1hbH1cclxuXHQuZGVzYyAubG9jX3ZhbCBie2ZvbnQtd2VpZ2h0Om5vcm1hbH1cclxufVxyXG4iXX0= */\"","module.exports = \"\\r\\n<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">User Details</h3>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">{{user.firstname}} {{user.lastname}} </div>\\r\\n\\t\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLocation\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc detail_class\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">State </span><span class=\\\"loc_val\\\">{{ user.state }} </span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Counties </span><span class=\\\"loc_val\\\"><b *ngFor=\\\"let county of user.county\\\">{{county | titlecase }}, </b></span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Address </span><span class=\\\"loc_val\\\">{{user.address}}</span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Zipcode </span><span class=\\\"loc_val\\\">{{user.zipcode}}</span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Phone </span><span class=\\\"loc_val\\\">{{user.phone}}</span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Services</span><span class=\\\"loc_val\\\"><span *ngFor=\\\"let service of jobservices\\\"><b *ngFor=\\\"let userservice of user.services\\\"> <i *ngIf=\\\"userservice == service._id\\\">{{service.name}},</i></b></span></span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tEstimates Profile\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Total Estimates </span><span class=\\\"loc_val\\\">{{partnerprofiledata.totalJobs}}</span></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Estimate Completed </span><span class=\\\"loc_val\\\">{{partnerprofiledata.Totalcompleted}}</span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Estimate In Progress </span><span class=\\\"loc_val\\\">{{partnerprofiledata.Totalprocessing}}</span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"loc_lable\\\">Ratings </span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"partnerprofiledata.width\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\"  *ngIf=\\\"reviewData && reviewData.length > 0\\\" > \\r\\n\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let review of reviewData\\\" class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-9\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{review.serviceName}} On {{review.created_at | date:mediumDate}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\" > \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"star-ratings-sprite\\\"><span [style.width.%]=\\\"(review.rating)*20\\\" class=\\\"star-ratings-sprite-rating\\\"></span></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"compleated\\\">Completed On {{review.completedAt | date:mediumDate}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"reviews_desc\\\"><i class=\\\"fa fa-quote-left\\\" aria-hidden=\\\"true\\\"></i>{{review.feedback}}<i class=\\\"fa fa-quote-right\\\" aria-hidden=\\\"true\\\"></i></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"reviews_desc\\\">~By <i>{{review.firstname}} {{review.lastname}}</i> on <i>{{review.completedAt | date:mediumDate}}</i></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> \"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { JobService } from './../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormArray,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { Title } from '@angular/platform-browser';\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\t\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'viewpartnerprofile.component.html',\r\n  styleUrls : [ './viewpartnerprofile.component.css' ]\r\n})\r\n\r\nexport class PartnerProfileComponent implements OnInit {\r\n\tangForm: FormGroup;angPartnerForm: FormGroup;\r\n\ttitle = 'Login User';\r\n\t//error :any=\"\";\r\n\tresult :any =\"\";\r\n\tuser:any =\"\"; \r\n\tpartnerprofiledata:any =\"\"; reviewData:any =\"\"; \r\n\tstates:any = '';\r\n\tcounties:any = '';jobservices:any = '';setusertype:any = '';\r\n\tcities:any = '';\r\n\tsubmitted = false;\r\n\tsubmittedpartner = false;showthis = false;\r\n\tservices:any='';\r\n\tstateName = '';\r\n\tstatename = '';countyName = '';currentState='';currentCounty='';userid='';\r\n\tselectedFile:any='';interests = []; userImage = [];\r\n\timage_url ='';partner_image_url =''; \r\n\tisChecked:any = '';userselectedservices:any=\"\";\r\n\t\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private jobservice: JobService, private router: Router, private userservice: UserService, private fb: FormBuilder,private titleService: Title){ \r\n\t\tthis.getServices();\r\n\t\tthis.titleService.setTitle( 'Profile | MoveLaunch' );\r\n\t}\r\n\tgetServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t\t\r\n\t\t}); \r\n\t}\r\n\tngOnInit() {\r\n\t\t\r\n\t\t\tvar _user_id = this.route.snapshot.paramMap.get('id');\r\n\t\t\tthis.userservice.getPartner(_user_id).subscribe(result => {\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.user = result.user; \r\n\t\t\t\t\r\n\t\t\t\tvar setApp = [];\r\n\t\t\t\tfor(var i=0;i<this.services.length;i++ ){\r\n\t\t\t\t\tvar servic = this.user.services;\r\n\t\t\t\t\tvar _id = this.services[i]._id;\r\n\t\t\t\t\t$.each(servic,function(index,value){\r\n\t\t\t\t\t\t if(value == _id){\r\n\t\t\t\t\t\t\t var item = value;\r\n\t\t\t\t\t\t\t setApp[i] = item;\r\n\t\t\t\t\t\t }\r\n\t\t\t\t\t });  \t\t\r\n\t\t\t\t}\t\r\n\t\t\t\tif(this.user.customer_id){\r\n\t\t\t\t\tthis.showthis = false;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.showthis = true;\r\n\t\t\t\t}\r\n\t\t\t\tvar currentState = this.user.state;\r\n\t\t\t\tvar currentCounty = this.user.county;\r\n\t\t\t\tvar user_pic = this.user.profile_pic;\r\n\t\t\t\tvar user_id = this.user._id;\r\n\t\t\t\t\r\n\t\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\t\tthis.states = result;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\t\tthis.counties = result;\r\n\t\t\t\t}); \r\n\t\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\t\tthis.cities = result; \r\n\t\t\t\t});\r\n\t\t\t\tthis.userselectedservices = setApp;\r\n\t\t\t\tif(user_pic){\r\n\t\t\t\t\tthis.userImage['src'] = environment.partner_image_url+user_id+'/'+user_pic;\r\n\t\t\t\t\tthis.selectedFile = this.userImage;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.user;\r\n\t\t\t});\r\n\t\t\tthis.userservice.getPartnerJobProfile(_user_id).subscribe(result => {\r\n\t\t\t\t\r\n\t\t\t\tthis.partnerprofiledata = result.data;\r\n\t\t\t\tthis.partnerprofiledata.totalJobs = result.data.Totalcompleted + result.data.Totalprocessing;\r\n\t\t\t\tthis.partnerprofiledata.width = result.data.Totalrating*20;\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.userservice.getPartnerCompletedJobsAndReviews(_user_id).subscribe(result => {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tthis.reviewData = result.data;\r\n\t\t\t});\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n}\r\n","module.exports = \".img-view img{\\r\\nwidth: 136px;\\r\\nheight: 136px;\\r\\n-o-object-fit: cover;\\r\\n   object-fit: cover;\\r\\nborder-radius: 50%;\\r\\n}\\r\\n/* .desc .loc_lable{display:block} */\\r\\n.desc .loc_lable{width:165px;float: left;font-weight:bold}\\r\\n.rating {\\r\\n    float:left;\\r\\n}\\r\\n.job-info .title{margin-bottom:15px}\\r\\n.rating:not(:checked) > input {\\r\\n    position:absolute;\\r\\n    top:-9999px;\\r\\n    clip:rect(0,0,0,0);\\r\\n}\\r\\n.rating:not(:checked) > label {\\r\\n    float:right;\\r\\n    width:1em;\\r\\n    padding:0.1em;\\r\\n    overflow:hidden;\\r\\n    white-space:nowrap;\\r\\n    cursor:pointer;\\r\\n    font-size:100%;\\r\\n    line-height:1.2;\\r\\n    color:#ddd;\\r\\n}\\r\\n.fa-quote-left,.fa-quote-right{   \\r\\n\\t\\tpadding: 0 4px;\\r\\n\\t\\tfont-size: 12px;\\r\\n\\t\\tvertical-align: super;\\r\\n\\t}\\r\\n.rating:not(:checked) > label:before {\\r\\n    content: '★ ';\\r\\n}\\r\\n.rating > input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.rating:not(:checked) > label:hover,\\r\\n.rating:not(:checked) > label:hover ~ label {\\r\\n    color: #1691be;\\r\\n}\\r\\n.rating > input:checked ~ label:hover,\\r\\n.rating > input:checked ~ label:hover ~ label,\\r\\n.rating > label:hover ~ input:checked ~ label {\\r\\n    color: #51b608;\\r\\n}\\r\\n.star-ratings-sprite {\\r\\n  background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n  font-size: 0;\\r\\n  height: 21px;\\r\\n  line-height: 0;\\r\\n  overflow: hidden;\\r\\n  text-indent: -999em;\\r\\n  width: 110px;\\r\\n  float: left;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.job-info {\\r\\n    background: #ecf7fb;\\r\\n    padding: 2px 20px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.star-ratings-sprite-rating{\\r\\n    background: url(\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\\\") repeat-x;\\r\\n    background-position: 0 100%;\\r\\n    float: left;\\r\\n    height: 21px;\\r\\n    display:block;\\r\\n  }\\r\\n.compleated{    font-size: 11px;\\r\\n    display: block;\\r\\n    float: left;\\r\\n    width: 100%;\\r\\n    margin: 10px 0;\\r\\n\\t}\\r\\n.reviews_desc{font-size:16px;font-style:italic}\\r\\n.name{font-size:18px}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvdmlld3VzZXJwcm9maWxlL3ZpZXd1c2VycHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaLGFBQWE7QUFDYixvQkFBaUI7R0FBakIsaUJBQWlCO0FBQ2pCLGtCQUFrQjtBQUNsQjtBQUNBLG9DQUFvQztBQUVwQyxpQkFBaUIsV0FBVyxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0I7QUFDekQ7SUFDSSxVQUFVO0FBQ2Q7QUFDQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0lBQ0ksaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7QUFFQTtJQUNJLFdBQVc7SUFDWCxTQUFTO0lBQ1QsYUFBYTtJQUNiLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGNBQWM7SUFDZCxlQUFlO0lBQ2YsVUFBVTtBQUNkO0FBQ0E7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLHFCQUFxQjtDQUN0QjtBQUVEO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksb0dBQW9HO0lBQ3BHLDJCQUEyQjtJQUMzQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7RUFDZjtBQUNBLGdCQUFnQixlQUFlO0lBQzdCLGNBQWM7SUFDZCxXQUFXO0lBQ1gsV0FBVztJQUNYLGNBQWM7Q0FDakI7QUFDQyxjQUFjLGNBQWMsQ0FBQyxpQkFBaUI7QUFDOUMsTUFBTSxjQUFjIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3MvdXNlcnMvdmlld3VzZXJwcm9maWxlL3ZpZXd1c2VycHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmltZy12aWV3IGltZ3tcclxud2lkdGg6IDEzNnB4O1xyXG5oZWlnaHQ6IDEzNnB4O1xyXG5vYmplY3QtZml0OiBjb3ZlcjtcclxuYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcbi8qIC5kZXNjIC5sb2NfbGFibGV7ZGlzcGxheTpibG9ja30gKi9cclxuXHJcbi5kZXNjIC5sb2NfbGFibGV7d2lkdGg6MTY1cHg7ZmxvYXQ6IGxlZnQ7Zm9udC13ZWlnaHQ6Ym9sZH1cclxuLnJhdGluZyB7XHJcbiAgICBmbG9hdDpsZWZ0O1xyXG59XHJcbi5qb2ItaW5mbyAudGl0bGV7bWFyZ2luLWJvdHRvbToxNXB4fVxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBpbnB1dCB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDotOTk5OXB4O1xyXG4gICAgY2xpcDpyZWN0KDAsMCwwLDApO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICAgIHdpZHRoOjFlbTtcclxuICAgIHBhZGRpbmc6MC4xZW07XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZToxMDAlO1xyXG4gICAgbGluZS1oZWlnaHQ6MS4yO1xyXG4gICAgY29sb3I6I2RkZDtcclxufVxyXG4uZmEtcXVvdGUtbGVmdCwuZmEtcXVvdGUtcmlnaHR7ICAgXHJcblx0XHRwYWRkaW5nOiAwIDRweDtcclxuXHRcdGZvbnQtc2l6ZTogMTJweDtcclxuXHRcdHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcclxuXHR9XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi5qb2ItaW5mbyB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZWNmN2ZiO1xyXG4gICAgcGFkZGluZzogMnB4IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9XHJcbiAgLmNvbXBsZWF0ZWR7ICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG5cdH1cclxuICAucmV2aWV3c19kZXNje2ZvbnQtc2l6ZToxNnB4O2ZvbnQtc3R5bGU6aXRhbGljfVxyXG4gIC5uYW1le2ZvbnQtc2l6ZToxOHB4fSJdfQ== */\"","module.exports = \"\\r\\n<div class=\\\"container job_dashboard\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col\\\"> \\r\\n\\r\\n\\t\\t\\t<h3 class=\\\"mb-4\\\">User Details</h3>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"tc-wrap\\\">{{user.firstname}} {{user.lastname}} </div>\\r\\n\\t\\t\\t</div>\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t<div class=\\\"container title-icon-bar\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"job-info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLocation\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">State </span><span class=\\\"loc_val\\\">{{ user.state }} </span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">County </span><span class=\\\"loc_val\\\" *ngFor=\\\"let county of user.county\\\">{{county}}</span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Address </span><span class=\\\"loc_val\\\">{{user.address}}</span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Zipcode </span><span class=\\\"loc_val\\\">{{user.zipcode}}</span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\"  *ngIf=\\\"show_data\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPersonal Info\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"desc\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Phone </span><span class=\\\"loc_val\\\">{{user.phone}}</span> </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p><span class=\\\"loc_lable\\\">Email</span><span class=\\\"loc_val\\\">{{user.email}}</span></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div> \"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from './../../../../services/user.service';\r\nimport { JobService } from './../../../../services/job.service';\r\nimport { FormGroup,  FormBuilder,  Validators,FormArray,FormControl } from '@angular/forms';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { Title } from '@angular/platform-browser';\r\nclass ImageSnippet {\r\n\tpending: boolean = false;\r\n\tstatus: string = 'init';\r\n\t\r\n\tconstructor(public src: string, public file: File) {\r\n\t\t\r\n\t}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: 'viewuserprofile.component.html',\r\n  styleUrls : [ './viewuserprofile.component.css' ]\r\n})\r\n\r\nexport class UserProfileComponent implements OnInit {\r\n\tangForm: FormGroup;angPartnerForm: FormGroup;\r\n\ttitle = 'Login User';\r\n\t//error :any=\"\";\r\n\tresult :any =\"\";\r\n\tuser:any =\"\"; \r\n\tpartnerprofiledata:any =\"\"; reviewData:any =\"\"; \r\n\tstates:any = '';\r\n\tcounties:any = '';jobservices:any = '';setusertype:any = '';\r\n\tcities:any = '';\r\n\tsubmitted = false;\r\n\tsubmittedpartner = false;showthis = false;show_data = false;\r\n\tservices:any='';\r\n\tstateName = '';\r\n\tstatename = '';countyName = '';currentState='';currentCounty='';userid='';\r\n\tselectedFile:any='';interests = []; userImage = [];\r\n\timage_url ='';partner_image_url =''; \r\n\tisChecked:any = '';userselectedservices:any=\"\";\r\n\t\r\n\tconstructor(private _flashMessagesService: FlashMessagesService,private route: ActivatedRoute,private jobservice: JobService, private router: Router, private userservice: UserService, private fb: FormBuilder,private titleService: Title){ \r\n\t\tthis.getServices();\r\n\t\tthis.titleService.setTitle( 'Profile | MoveLaunch' );\r\n\t}\r\n\tgetServices(){\r\n\t\tthis.jobservice.getServices().subscribe(result => {\r\n\t\t\tthis.jobservices =  result.data;\r\n\t\t\t\r\n\t\t}); \r\n\t}\r\n\tngOnInit() {\r\n\t\t\r\n\t\tvar _user_id = this.route.snapshot.paramMap.get('id');\r\n\t\tvar _jobId = this.route.snapshot.paramMap.get('jobId');\r\n\t\tthis.userservice.getPartner(_user_id).subscribe(result => {\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tthis.user = result.user; \r\n\t\t\t\r\n\t\t\tvar setApp = [];\r\n\t\t\tfor(var i=0;i<this.services.length;i++ ){\r\n\t\t\t\tvar servic = this.user.services;\r\n\t\t\t\tvar _id = this.services[i]._id;\r\n\t\t\t\t$.each(servic,function(index,value){\r\n\t\t\t\t\t if(value == _id){\r\n\t\t\t\t\t\t var item = value;\r\n\t\t\t\t\t\t setApp[i] = item;\r\n\t\t\t\t\t }\r\n\t\t\t\t });  \t\t\r\n\t\t\t}\t\r\n\t\t\tif(this.user.customer_id){\r\n\t\t\t\tthis.showthis = false;\r\n\t\t\t}else{\r\n\t\t\t\tthis.showthis = true;\r\n\t\t\t}\r\n\t\t\tvar currentState = this.user.state;\r\n\t\t\tvar currentCounty = this.user.county;\r\n\t\t\tvar user_pic = this.user.profile_pic;\r\n\t\t\tvar user_id = this.user._id;\r\n\t\t\t\r\n\t\t\tthis.userservice.getStates().subscribe(result => {\r\n\t\t\t\tthis.states = result;\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.userservice.getCounties(currentState).subscribe(result => {\r\n\t\t\t\tthis.counties = result;\r\n\t\t\t}); \r\n\t\t\tthis.userservice.getCities(currentCounty,currentState).subscribe(result => {\r\n\t\t\t\tthis.cities = result; \r\n\t\t\t});\r\n\t\t\tthis.userselectedservices = setApp;\r\n\t\t\t\r\n\t\t\tthis.userImage['src'] = environment.image_url+user_id+'/'+user_pic;\r\n\t\t\tthis.selectedFile = this.userImage;\r\n\t\t\t\r\n\t\t\treturn this.user;\r\n\t\t});\r\n\t\t\r\n\t\tthis.jobservice.getBidsOnJob(_jobId).subscribe(result1 =>\r\n\t\t{\r\n\t\t\tif(result1.data.bidStatus  == 0){\r\n\t\t\t\tthis.show_data = false;\r\n\t\t\t}\r\n\t\t\tif(result1.data.bidStatus  == 1){\r\n\t\t\t\tthis.show_data = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { UserService } from './services/user.service';\r\n\r\n\r\n@Injectable()\r\nexport class Globals {\r\n\trole: string = 'test';\r\n\tnotifications:any = ''; notificationCount:any = ''; \r\n\tconstructor(private router: Router,private userservice: UserService) { \r\n\t\t\r\n\t\tthis.router.events.subscribe((event) => {\r\n\t\t\tif (event instanceof NavigationEnd) {\r\n\t\t\t\tthis.getAllNotifications();\r\n\t\t\t\tthis.getNotificationCount();\r\n\t\t\t};\r\n\t\t}); \r\n\t\t\r\n\t}\r\n\tgetAllNotifications(){\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\tthis.userservice.getAllNotifications(5).subscribe(result => {\r\n\t\t\t\tthis.notifications = result.notfication;\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tgetNotificationCount(){\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tif(token){\r\n\t\t\tthis.userservice.getNotificationCountForUser().subscribe(result => {\r\n\t\t\t\tthis.notificationCount = result.count;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tngOnInit() {\r\n\t\t\r\n\t}\t\t\r\n}","import { Injectable } from '@angular/core';\r\nimport { \r\n  ActivatedRouteSnapshot, \r\n  CanActivate, \r\n  Router, \r\n  RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) {}\r\n\t\r\n\t\r\n\t\r\n\t/* canActivate(next: ActivatedRouteSnapshot,state: RouterStateSnapshot): Observable<boolean> {\r\n    let token = localStorage.getItem('login_token');\r\n\tif(!token){\r\n\t\t return Observable.of(false);\r\n\t\tthis.router.navigate(['/login']); \r\n\t}\r\n\t return Observable.of(true);\r\n\t\r\n  } */\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.userService.isLoggedIn.pipe(\r\n      take(1),\r\n      map((isLoggedIn: boolean) => {\r\n        if (!isLoggedIn) {\r\n          this.router.navigate(['/login']);\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n  \r\n}","import { Injectable } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { HttpClient,HttpHeaders  } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map,take } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class AdminService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //  Add User  \r\n/*  public addUser(name,email,phone,password): any {\r\n    const uri = environment.apiUrl+'user/add';  //API\r\n    const obj = {\r\n      name: name,\r\n      phone: phone,\r\n\t  email :email,\r\n\t  password :password\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj);\r\n  }\r\n   */\r\n    // Call Email Already exist API   \r\n /*  public emailAlready(email): any {\r\n    const uri = environment.apiUrl+'user/user_email'; //API \r\n    const obj = {\r\n\t  email :email\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj);\r\n  } */\r\n  \r\n  //  Call Login API   \r\n  login_user(email,password): Observable<any> {\r\n\r\n    const uri = environment.apiUrl+'admin/login';\r\n    const obj = {\r\n\t  email :email,\r\n\t  password :password,\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj);\r\n  }\r\n \r\n //  Get Current logged in user data\r\n  public getUsers(user): Observable<any> {\r\n\tlet token = localStorage.getItem('admin_token');\r\n\tlet headers = new HttpHeaders();\r\n    headers = headers.append('token', token); \r\n\tif(user=='user')\r\n    var uri = environment.apiUrl+'admin/users';\r\n\r\n    if(user=='partner')\r\n    var uri = environment.apiUrl+'admin/partners';\r\n\r\n    return this\r\n            .http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n  }\r\n\r\n // Get user data and return to Edit conponent\r\n  public editUser(id): any {\r\n    const uri = environment.apiUrl+'user/edit/' + id;\r\n    return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n  }\r\n // Call user profile update API \r\n public updateUser(id,status): any {\r\n\t \r\n\tlet token = localStorage.getItem('admin_token');\r\n\tlet headers = new HttpHeaders({\r\n\t 'Content-Type': 'application/json',\r\n     'token': token \r\n\t});\r\n    let options = { headers: headers };\r\n    const uri = environment.apiUrl+'admin/updatestatus/' + id;\r\n    const obj = {\r\n      status: status\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj,options);\r\n  }\r\n \r\n  // Call verify user account API  \r\n  public verify_code(id): any {\r\n    const uri = environment.apiUrl+'user/verify/' + id;\r\n    return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n  }\r\n  \r\n   public forgot_password(email): any {\r\n    const uri = environment.apiUrl+'user/forgotpassword';\r\n    const obj = {\r\n      email: email\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj);\r\n  \r\n  }\r\n  // Request node to check password code \r\n   public password_code(id): any {\r\n    const uri = environment.apiUrl+'user/check_passcode/'+id;\r\n     return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n   }\r\n   \r\n  // Reset passwrd \r\n  public resetPassword(password,id): any {\r\n    const uri = environment.apiUrl+'user/resetpassword/'+id;;\r\n    const obj = {\r\n      password: password\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj);\r\n  }\r\n  \r\n\tpublic deleteUser(id): any {\r\n\t\tconst uri = environment.apiUrl+'user/delete/' + id;\r\n        return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n    } \r\n\r\n\tpublic getPlans(): Observable<any> {\r\n\t\tlet token = localStorage.getItem('admin_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\tvar uri = environment.apiUrl+'plans';\r\n\r\n\t\treturn this\r\n\t\t\t\t.http\r\n\t\t\t\t.get(uri,{headers:headers})\r\n\t\t\t\t.pipe(map(res => {\r\n\t\t\t\t  return res;\r\n\t\t\t\t}));\r\n  }\r\n  \r\n\tpublic getServices(): Observable<any> { \r\n\t\tlet token = localStorage.getItem('admin_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\tvar uri = environment.apiUrl+'services/';\r\n\r\n\t\treturn this\r\n\t\t\t\t.http\r\n\t\t\t\t.get(uri,{headers:headers})\r\n\t\t\t\t.pipe(map(res => {\r\n\t\t\t\t  return res;\r\n\t\t\t\t}));\r\n  }\r\n  \r\n\t//http://13.58.114.48:3001/api/admin/editServices/5c544a8515f5bb0c908b3014\r\n\tpublic getServiceById(serviceId): Observable<any> { \r\n\t\tconsole.log(serviceId);\r\n\t\tlet token = localStorage.getItem('admin_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\tvar uri = environment.apiUrl+'admin/editServices/'+serviceId;\r\n\r\n\t\treturn this\r\n\t\t\t\t.http\r\n\t\t\t\t.get(uri,{headers:headers})\r\n\t\t\t\t.pipe(map(res => {\r\n\t\t\t\t  return res;\r\n\t\t\t\t}));\r\n\t}\r\n   \r\n  /* My work Start from here */\r\n   \r\n  /*Update the service by id */\r\n  public updateservicebyid(serviceId, value): any { \r\n    let token = localStorage.getItem('admin_token');\r\n    let headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\tvar uri = environment.apiUrl+'admin/updateServices/'+serviceId;\r\n    const obj = {\r\n      \"name\":\"\"+value+\"\"\r\n    }\r\n    console.log(obj);\r\n    return this\r\n        .http\r\n        .post(uri, obj);\r\n\t}\r\n   \r\n  /* Users Edit section work */\r\n\r\n  public userseditservicecall(serviceId):Observable<any> {\r\n\t\tlet token = localStorage.getItem('admin_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\tvar uri = environment.apiUrl+'admin/user/edit/'+serviceId;\r\n    \r\n\t\treturn this\r\n\t\t\t\t.http\r\n\t\t\t\t.get(uri,{headers:headers})\r\n\t\t\t\t.pipe(map(res => {\r\n\t\t\t\t  return res;\r\n\t\t\t\t}));\r\n  }\r\n  \r\n  /* Update users service by id */\r\n  public updateusersbyid(serviceId, value ):Observable<any> {\r\n    let token = localStorage.getItem('admin_token');\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('token', token); \r\n    let options = { headers: headers };\r\n    var uri = environment.apiUrl+'admin/user/update/'+serviceId;\r\n    //http://13.58.114.48:3001/api/admin/user/update/5cdd632e88039718bb777469\r\n    return this\r\n        .http\r\n        .post(uri, value, options);\r\n  }\r\n\r\n  /* Getting the JObs*/\r\n  public getjobs():Observable<any> {\r\n    let token = localStorage.getItem('admin_token');\r\n    console.log(token);\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('token', token);\r\n    let head = { headers: headers };\r\n    var uri = environment.apiUrl+'admin/getalljobs';\r\n    return this.http.get(uri, head);\r\n  }\r\n\r\n  /*Getting specific jobs */\r\n  public getspecificjobs(number):Observable<any> {\r\n    let token = localStorage.getItem('admin_token');\r\n    console.log(token);\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('token', token);\r\n    let head = { headers: headers };\r\n    var uri = environment.apiUrl+'/admin/userCompletedProcessingJobs';\r\n    let ne = {\"jobStatus\":number};\r\n    console.log(ne);\r\n    return this.http.post(uri, ne, head);\r\n  }\r\n\r\n  /*Get particular jobs*/\r\n  public getparticularjobs(jobId):any {\r\n    let token = localStorage.getItem('admin_token');\r\n    console.log(token);\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('token', token); \r\n\t\t\r\n\t\tconst uri = environment.apiUrl+'user/editjobs/'+jobId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\r\n  }\r\n\r\n  /* Getting the dashboard stats*/\r\n\r\n  public getdashboardstats():any {\r\n    let token = localStorage.getItem('admin_token');\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('token', token);\r\n    let head = { headers: headers };\r\n    var uri = environment.apiUrl+'admin/dashboard';\r\n    return this\r\n              .http\r\n                .get(uri, head);\r\n  }\r\n\r\n  /* GET invoice service */\r\n  public getinvoices(user_id): any {\r\n    let token = localStorage.getItem('admin_token');\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('token', token);\r\n    let head = { headers: headers };\r\n    var uri = environment.apiUrl+'admin/userAllInvoices/'+user_id;\r\n    return this\r\n              .http\r\n                .get(uri, head);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { HttpClient,HttpHeaders  } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map,take } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable()\r\nexport class JobService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\t\r\n\tpublic addJob(basic_info,serviceId): any {\r\n\t\tconsole.log(basic_info);\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'user/createjobTemp';  //API\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t  firstname: basic_info.firstname,\r\n\t\t  lastname: basic_info.lastname,\r\n\t\t  phone: basic_info.phone,\r\n\t\t  state :basic_info.state,\r\n\t\t  county :basic_info.county[0],\r\n\t\t  city :basic_info.city,\r\n\t\t  address1 :basic_info.address,\r\n\t\t  zipcode :basic_info.zipcode,\r\n\t\t  serviceId:serviceId,\r\n\t\t  jobStart:basic_info.job_start_date,\r\n\t\t  moving:[]\r\n\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t}\r\n\t\r\n\t\r\n\tpublic updateServicesInJobTemp(jobID,basic_info,type): any {\r\n\t\t\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'user/updatejobTemp/';  //API\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tvar obj = {};\r\n\t\t\r\n\t\tif(type == 'moving'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  moving:basic_info.moving,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(type == 'packing'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  packing:basic_info.packing,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(type == 'unpacking'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  unpacking:basic_info.unpacking,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(type == 'loading'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  loading:basic_info.loading,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(type == 'unloading'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  unloading:basic_info.unloading,\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t}\r\n\t\r\n\tpublic updateServicesInJob(jobID,basic_info,type): any {\r\n\t\t\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'user/updatejob/'+jobID;  //API\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tvar obj = {};\r\n\t\t\r\n\t\tif(type == 'moving'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  moving:basic_info.moving,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(type == 'packing'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  packing:basic_info.packing,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(type == 'unpacking'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  unpacking:basic_info.unpacking,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(type == 'loading'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  loading:basic_info.loading,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(type == 'unloading'){\r\n\t\t\tobj = {\r\n\t\t\t  step : 1,\r\n\t\t\t  unloading:basic_info.unloading,\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t}\r\n\t\r\n\t\r\n\tpublic submitJob(): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'user/createjob';  //API\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\t/*Get all jobs for user */\r\n\t\r\n\tpublic getAllJobs(): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'user/getjobs';  //API\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/*Get all jobs for user */\r\n\tpublic getAllJobsWithBids(): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'user/getjobswithbids';  //API\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\tpublic updateJob(basic_info,step,jobID,serviceType): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'user/updatejobTemp';  //API\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tif(step == 'step1'){\r\n\t\t\t const obj = {\r\n\t\t\t\t\t  step:0,\r\n\t\t\t\t\t  firstname: basic_info.job_basic_info.firstname,\r\n\t\t\t\t\t  lastname: basic_info.job_basic_info.lastname,\r\n\t\t\t\t\t  phone: basic_info.job_basic_info.phone,\r\n\t\t\t\t\t  state :basic_info.job_basic_info.state,\r\n\t\t\t\t\t  county :basic_info.job_basic_info.county[0],\r\n\t\t\t\t\t  city :basic_info.job_basic_info.city,\r\n\t\t\t\t\t  address1 :basic_info.job_basic_info.address,\r\n\t\t\t\t\t  zipcode :basic_info.job_basic_info.zipcode,\r\n\t\t\t\t\t  serviceId:basic_info.serviceId,\r\n\t\t\t\t\t//  jobStart:basic_info.job_basic_info.job_start_date,\r\n\t\t\t\t};\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t\r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});\r\n\t\t} \r\n\t\t\r\n\t\t/* if(step == 'step2'){\r\n\t\t\t const obj = {\r\n\t\t\t\t\tstep:2,\r\n\t\t\t\t\tjobTitle:basic_info.job_title,\r\n\t\t\t\t\tjobDescription:basic_info.job_description,\r\n\t\t\t\t\tjobStart:basic_info.job_start_date,\r\n\t\t\t\t\tjobEnd:basic_info.job_end_date\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});\r\n\t\t} */\r\n\t\t\t\r\n\t\tif(step == 'step3'){\r\n\t\t\tconst itemrow = [];\r\n\t\t\t\r\n\t\t\t$.each(basic_info.itemRows, function(index, value) { \r\n\t\t\t\tvar move_data = {\r\n\t\t\t\t  movingType: value.moving_from,\r\n\t\t\t\t  floor: value.moving_from_floor,\r\n\t\t\t\t  address1: value.moving_from_address,\r\n\t\t\t\t  state :value.moving_from_state,\r\n\t\t\t\t  county :value.moving_from_county,\r\n\t\t\t\t  city :value.moving_from_city,\r\n\t\t\t\t  zipcode :value.moving_from_zipcode\r\n\t\t\t\t}\r\n\t\t\t\titemrow.push(move_data);\r\n\t\t\t}); \r\n\t\t\tconsole.log('thisone+'+serviceType);\r\n\t\t\tvar obj = {};\r\n\t\t\t//const obj = {step:3,moving:{moving_from:itemrow}};\r\n\t\t\tif(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:3,moving:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:3,packing:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:3,unpacking:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:3,loading:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:3,unloading:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t\r\n\t\t\tconsole.log('this+'+obj);\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t  return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t}\r\n\t\t\r\n\t\tif(step == 'step4'){\r\n\t\t\tconst itemrow = [];\r\n\t\t\t\r\n\t\t\t$.each(basic_info.itemRowsTo, function(index, value) { \r\n\t\t\t\tvar move_data = {\r\n\t\t\t\t  movingType: value.moving_to,\r\n\t\t\t\t  floor: value.moving_to_floor,\r\n\t\t\t\t  address1: value.moving_to_address,\r\n\t\t\t\t  state :value.moving_to_state,\r\n\t\t\t\t  county :value.moving_to_county,\r\n\t\t\t\t  city :value.moving_to_city,\r\n\t\t\t\t  zipcode :value.moving_to_zipcode\r\n\t\t\t\t}\r\n\t\t\t\titemrow.push(move_data);\r\n\t\t\t}); \r\n\t\t\t\r\n\r\n\t\t\t var obj = {};\r\n\t\t\t//const obj = {step:3,moving:{moving_from:itemrow}};\r\n\t\t\tif(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:4,moving:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:4,packing:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:4,unpacking:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:4,loading:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:4,unloading:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});\r\n\t\t}\r\n\t\r\n\t\tif(step == 'step5'){\r\n\t\t\t\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:5,moving:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc,appliances_assembly:basic_info.appliances_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:5,packing:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:5,unpacking:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:5,loading:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:5,unloading:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc}};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t   headers = headers.append('token', token); \r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t}\r\n\t\tif(step == 'step6'){\r\n\t\t\t\t\r\n\t\t\t\t var obj = {};\r\n\t\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:6,moving:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc,bedrooms_assembly:basic_info.bedrooms_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:6,packing:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:6,unpacking:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:6,loading:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:6,unloading:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step7'){\r\n\t\t\t\tvar obj = {};\r\n\t\t\t\tif(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:7,moving:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc,livingRooms_assembly:basic_info.livingRooms_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:7,packing:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:7,unpacking:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:7,loading:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:7,unloading:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step8'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:8,moving:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc,familyRooms_assembly:basic_info.familyRooms_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:8,packing:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:8,unpacking:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:8,loading:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:8,unloading:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step9'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:9,moving:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc,dininRooms_assembly:basic_info.dininRooms_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:9,packing:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:9,unpacking:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:9,loading:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:9,unloading:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step10'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:10,moving:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc,kitchen_assembly:basic_info.kitchen_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:10,packing:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:10,unpacking:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:10,loading:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:10,unloading:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step11'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:11,moving:{basement:basic_info.basement,basement_misc:basic_info.basement_misc,appliances_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:11,packing:{basement:basic_info.basement,basement_misc:basic_info.basement_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:11,unpacking:{basement:basic_info.basement,basement_misc:basic_info.basement_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:11,loading:{basement:basic_info.basement,basement_misc:basic_info.basement_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:11,unloading:{basement:basic_info.basement,basement_misc:basic_info.basement_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step12'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:12,moving:{garage:basic_info.garage,garage_misc:basic_info.garage_misc,appliances_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:12,packing:{garage:basic_info.garage,garage_misc:basic_info.garage_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:12,unpacking:{garage:basic_info.garage,garage_misc:basic_info.garage_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:12,loading:{garage:basic_info.garage,garage_misc:basic_info.garage_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:12,unloading:{garage:basic_info.garage,garage_misc:basic_info.garage_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step13'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:13,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc,appliances_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:13,packing:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:13,unpacking:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:13,loading:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:13,unloading:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step14'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:14,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc,appliances_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:14,packing:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:14,unpacking:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:14,loading:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:14,unloading:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t\t/* const obj = {step:14,roomNeeedPacked:basic_info[0]};\r\n\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\treturn this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});  */\r\n\t\t}\r\n\t\tif(step == 'step15'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:15,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc,patioYard_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:15,packing:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:15,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:15,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:15,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t\t/* const obj = {step:14,roomNeeedPacked:basic_info[0]};\r\n\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\treturn this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});  */\r\n\t\t}\r\n\t\r\n\t\t\r\n\t\r\n\t\t\r\n\t\t \r\n\t}\r\n\t\r\n\tpublic updateEditedJobServices(selectedOrderIds,jobID): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'user/updatejobFirstStep/'+jobID;  //API\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {\r\n\t\t\t\t\t\tserviceId:selectedOrderIds,\r\n\t\t\t\t\t};\r\n\t\t\t\t\theaders = headers.append('token', token); \r\n\t\t\t\t\treturn this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});\r\n\t\t\t  \r\n\t}\r\n\t\r\n\tpublic submitEditJob(jobID): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t//const obj = {};\r\n\t\tconst uri = environment.apiUrl+'user/updateEditjob/'+jobID;  //API\r\n\t\theaders = headers.append('token', token); \r\n\t\tconst obj = {};\r\n\t\treturn this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t  \r\n\t\t  \r\n\t\t/* return this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            })); */\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic updateEditedJob(basic_info,step,jobID,serviceType): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'user/updatejob/'+jobID;  //API\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\t/* if(step == 'step1'){\r\n\t\t\t const obj = {\r\n\t\t\t\t\t  step:1,\r\n\t\t\t\t\t  firstname: basic_info.job_basic_info.firstname,\r\n\t\t\t\t\t  lastname: basic_info.job_basic_info.lastname,\r\n\t\t\t\t\t  phone: basic_info.job_basic_info.phone,\r\n\t\t\t\t\t  state :basic_info.job_basic_info.state,\r\n\t\t\t\t\t  county :basic_info.job_basic_info.county,\r\n\t\t\t\t\t  city :basic_info.job_basic_info.city,\r\n\t\t\t\t\t  address1 :basic_info.job_basic_info.address,\r\n\t\t\t\t\t  zipcode :basic_info.job_basic_info.zipcode,\r\n\t\t\t\t\t  serviceId:basic_info.serviceId,\r\n\t\t\t\t\t  jobStart:basic_info.job_basic_info.job_start_date\r\n\t\t\t\t};\r\n\t\t\t\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t  \r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});\r\n\t\t}\r\n\t\t\r\n\t\tif(step == 'step2'){\r\n\t\t\t const obj = {\r\n\t\t\t\t\tstep:2,\r\n\t\t\t\t\tjobTitle:basic_info.job_title,\r\n\t\t\t\t\tjobDescription:basic_info.job_description,\r\n\t\t\t\t\tjobStart:basic_info.job_start_date,\r\n\t\t\t\t\tjobEnd:basic_info.job_end_date\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});\r\n\t\t} */\r\n\t\tif(step == 'step3'){\r\n\t\t\tconst itemrow = [];\r\n\t\t\t\r\n\t\t\t$.each(basic_info.itemRows, function(index, value) { \r\n\t\t\t\tvar move_data = {\r\n\t\t\t\t  movingType: value.moving_from,\r\n\t\t\t\t  floor: value.moving_from_floor,\r\n\t\t\t\t  address1: value.moving_from_address,\r\n\t\t\t\t  state :value.moving_from_state,\r\n\t\t\t\t  county :value.moving_from_county,\r\n\t\t\t\t  city :value.moving_from_city,\r\n\t\t\t\t  zipcode :value.moving_from_zipcode\r\n\t\t\t\t}\r\n\t\t\t\titemrow.push(move_data);\r\n\t\t\t}); \r\n\t\t\t\r\n\t\t\tvar obj = {};\r\n\t\t\t//const obj = {step:3,moving:{moving_from:itemrow}};\r\n\t\t\tif(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:3,moving:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:3,packing:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:3,unpacking:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:3,loading:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:3,unloading:{moving_from:itemrow}};\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t\r\n\t\t\t\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t  return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t}\r\n\t\t\r\n\t\tif(step == 'step4'){\r\n\t\t\tconst itemrow = [];\r\n\t\t\t\r\n\t\t\t$.each(basic_info.itemRowsTo, function(index, value) { \r\n\t\t\t\tvar move_data = {\r\n\t\t\t\t  movingType: value.moving_to,\r\n\t\t\t\t  floor: value.moving_to_floor,\r\n\t\t\t\t  address1: value.moving_to_address,\r\n\t\t\t\t  state :value.moving_to_state,\r\n\t\t\t\t  county :value.moving_to_county,\r\n\t\t\t\t  city :value.moving_to_city,\r\n\t\t\t\t  zipcode :value.moving_to_zipcode\r\n\t\t\t\t}\r\n\t\t\t\titemrow.push(move_data);\r\n\t\t\t}); \r\n\t\t\t\r\n\t\t\tconsole.log('thisone+'+serviceType);\r\n\t\t\t var obj = {};\r\n\t\t\t//const obj = {step:3,moving:{moving_from:itemrow}};\r\n\t\t\tif(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:4,moving:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:4,packing:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:4,unpacking:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:4,loading:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:4,unloading:{moving_to:itemrow}};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconsole.log('hh');\r\n\t\t\tconsole.log(obj);\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});\r\n\t\t}\r\n\t\r\n\t\tif(step == 'step5'){\r\n\t\t\t\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:5,moving:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc,appliances_assembly:basic_info.appliances_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:5,packing:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:5,unpacking:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:5,loading:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:5,unloading:{appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc}};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t   headers = headers.append('token', token); \r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t}\r\n\t\tif(step == 'step6'){\r\n\t\t\t\t\r\n\t\t\t\t var obj = {};\r\n\t\t\tif(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:6,moving:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc,bedrooms_assembly:basic_info.bedrooms_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:6,packing:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:6,unpacking:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:6,loading:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:6,unloading:{bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step7'){\r\n\t\t\t\tvar obj = {};\r\n\t\t\t\tif(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:7,moving:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc,livingRooms_assembly:basic_info.livingRooms_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:7,packing:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:7,unpacking:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:7,loading:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:7,unloading:{livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step8'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:8,moving:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc,familyRooms_assembly:basic_info.familyRooms_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:8,packing:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:8,unpacking:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:8,loading:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:8,unloading:{familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step9'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:9,moving:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc,dininRooms_assembly:basic_info.dininRooms_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:9,packing:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:9,unpacking:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:9,loading:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:9,unloading:{diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step10'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:10,moving:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc,kitchen_assembly:basic_info.kitchen_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:10,packing:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:10,unpacking:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:10,loading:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:10,unloading:{kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step11'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:11,moving:{basement:basic_info.basement,basement_misc:basic_info.basement_misc,appliances_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:11,packing:{basement:basic_info.basement,basement_misc:basic_info.basement_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:11,unpacking:{basement:basic_info.basement,basement_misc:basic_info.basement_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:11,loading:{basement:basic_info.basement,basement_misc:basic_info.basement_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:11,unloading:{basement:basic_info.basement,basement_misc:basic_info.basement_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step12'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:12,moving:{garage:basic_info.garage,garage_misc:basic_info.garage_misc,appliances_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:12,packing:{garage:basic_info.garage,garage_misc:basic_info.garage_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:12,unpacking:{garage:basic_info.garage,garage_misc:basic_info.garage_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:12,loading:{garage:basic_info.garage,garage_misc:basic_info.garage_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:12,unloading:{garage:basic_info.garage,garage_misc:basic_info.garage_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step13'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:13,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc,appliances_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:13,packing:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:13,unpacking:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:13,loading:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:13,unloading:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step14'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:14,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc,appliances_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:14,packing:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:14,unpacking:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:14,loading:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:14,unloading:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t\t/* const obj = {step:14,roomNeeedPacked:basic_info[0]};\r\n\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\treturn this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});  */\r\n\t\t}\r\n\t\tif(step == 'step15'){\r\n\t\t\t var obj = {};\r\n\t\t\t if(serviceType == 'moving'){\r\n\t\t\t\t obj = {step:15,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc,patioYard_assembly:basic_info.patioYard_assembly}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'packing'){\r\n\t\t\t\t obj = {step:15,packing:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unpacking'){\r\n\t\t\t\t obj = {step:15,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'loading'){\r\n\t\t\t\t obj = {step:15,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\tif(serviceType == 'unloading'){\r\n\t\t\t\t obj = {step:15,moving:{patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc}};\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t\t/* const obj = {step:14,roomNeeedPacked:basic_info[0]};\r\n\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\treturn this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});  */\r\n\t\t}\r\n\t\t\r\n\t\t/* if(step == 'step3'){\r\n\t\t\tconst itemrow = [];\r\n\t\t\t\r\n\t\t\t$.each(basic_info.itemRows, function(index, value) { \r\n\t\t\t\tvar move_data = {\r\n\t\t\t\t  movingType: value.moving_from,\r\n\t\t\t\t  floor: value.moving_from_floor,\r\n\t\t\t\t  address1: value.moving_from_address,\r\n\t\t\t\t  state :value.moving_from_state,\r\n\t\t\t\t  county :value.moving_from_county,\r\n\t\t\t\t  city :value.moving_from_city,\r\n\t\t\t\t  zipcode :value.moving_from_zipcode\r\n\t\t\t\t}\r\n\t\t\t\titemrow.push(move_data);\r\n\t\t\t}); \r\n\t\t\t\r\n\t\t\t const obj = {step:3,moving_from:itemrow};\r\n\t\t\t\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t  return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t}\r\n\t\t\r\n\t\tif(step == 'step4'){\r\n\t\t\tconst itemrow = [];\r\n\t\t\t\r\n\t\t\t$.each(basic_info.itemRowsTo, function(index, value) { \r\n\t\t\t\tvar move_data = {\r\n\t\t\t\t  movingType: value.moving_to,\r\n\t\t\t\t  floor: value.moving_to_floor,\r\n\t\t\t\t  address1: value.moving_to_address,\r\n\t\t\t\t  state :value.moving_to_state,\r\n\t\t\t\t  county :value.moving_to_county,\r\n\t\t\t\t  city :value.moving_to_city,\r\n\t\t\t\t  zipcode :value.moving_to_zipcode\r\n\t\t\t\t}\r\n\t\t\t\titemrow.push(move_data);\r\n\t\t\t}); \r\n\t\t\t\r\n\t\t\t const obj = {step:4,moving_to:itemrow};\r\n\t\t\t \r\n\t\t\t\r\n\t\t\t  headers = headers.append('token', token); \r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers});\r\n\t\t}\r\n\t\r\n\t\tif(step == 'step5'){\r\n\t\t\t\r\n\t\t\tconst obj = {step:5,appliances:basic_info.appliances,appliances_misc:basic_info.appliances_misc};\r\n\t\t\t\r\n\t\t\t   headers = headers.append('token', token); \r\n\t\t\t return this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t}\r\n\t\tif(step == 'step6'){\r\n\t\t\t\t\r\n\t\t\t\tconst obj = {step:6,bedRooms:basic_info.bedRooms,bedrooms_misc:basic_info.bedrooms_misc};\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step7'){\r\n\t\t\t\tconst obj = {step:7,livingRooms:basic_info.livingRooms,livingRooms_misc:basic_info.livingRooms_misc};\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step8'){\r\n\t\t\t\tconst obj = {step:8,familyRooms:basic_info.familyRooms,familyRooms_misc:basic_info.familyRooms_misc};\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step9'){\r\n\t\t\t\tconst obj = {step:9,diningRooms:basic_info.diningRooms,diningRooms_misc:basic_info.dininRooms_misc};\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step10'){\r\n\t\t\t\tconst obj = {step:10,kitchen:basic_info.kitchen,kitchen_misc:basic_info.kitchen_misc};\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step11'){\r\n\t\t\t\tconst obj = {step:11,basement:basic_info.basement,basement_misc:basic_info.basement_misc};\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step12'){\r\n\t\t\t\tconst obj = {step:12,garage:basic_info.garage,garage_misc:basic_info.garage_misc};\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step13'){\r\n\t\t\t\tconst obj = {step:13,patioYard:basic_info.patioYard,patioYard_misc:basic_info.patioYard_misc};\r\n\t\t\t\t\r\n\t\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\t return this\r\n\t\t\t\t  .http\r\n\t\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t\t}\r\n\t\tif(step == 'step14'){\r\n\t\t\t\tconst obj = {step:14,roomNeeedPacked:basic_info[0]};\r\n\t\t\t\t\r\n\t\t\t   headers = headers.append('token', token); \r\n\t\t\t\treturn this\r\n\t\t\t  .http\r\n\t\t\t  .post(uri, obj,{headers:headers}); \r\n\t\t} */\r\n\t\r\n\t\t\r\n\t\r\n\t\t\r\n\t\t \r\n\t}\r\n\t\r\n\tpublic makePayment(stripetoken,planId,_user_id): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'partner/payment/'+_user_id;  //API partner/payment/5c90a8ac95339c2310392ac1\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t  stripeToken: stripetoken,\r\n\t\t  planId: planId,\r\n\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t  }\r\n\t\r\n\tpublic updatePayment(stripetoken,planId,_user_id): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'partner/changeplan/'+_user_id;  //API partner/payment/5c90a8ac95339c2310392ac1\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t  stripeToken: stripetoken,\r\n\t\t  planId: planId,\r\n\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t  }\r\n\t\r\n\t\r\n\t// Get state API   \r\n\tpublic getSavedJob(): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\t\r\n\t\tconst uri = environment.apiUrl+'user/getjobTemp'; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t} \r\n\t//http://localhost:3001/api/job/delete/5c9a0c509b7238289d9f8432\r\n\tpublic deleteJob(jobID): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\t\r\n\t\tconst uri = environment.apiUrl+'job/delete/'+jobID; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t} \r\n\t\r\n\t// Get job by ID  \r\n\tpublic getEditJob(jobID): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\t\r\n\t\tconst uri = environment.apiUrl+'user/editjobs/'+jobID; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t} \r\n\t/*-----------Get all jobs for partner based on county----api/partner/jobs------*/ \r\n\tpublic getAllJobsForPartner(): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\t\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'partner/jobs';  //API bidsOnJob/5ccc14ef20102023b236c3fc\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/*-----------Get feedback for a particular job for user getJobFeedbackForUser------*/ \r\n\tpublic getJobFeedbackForUser(jobID): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'ShowFeedbacktoUser/'+jobID;  //API bidsOnJob/5ccc14ef20102023b236c3fc\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/*-----------Get service name by service ID- http://18.221.79.87:3001/api/getServiceName/5c544a8515f5bb0c908b3014 -----*/ \r\n\tpublic getServiceName(serviceID): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'getServiceName/'+serviceID;  //API bidsOnJob/5ccc14ef20102023b236c3fc\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\t/*-----------Get feedback for a particular job for partner getJobFeedbackForPartner------*/ \r\n\tpublic getJobFeedbackForPartner(jobID): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\t\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'ShowFeedbacktoPartner/'+jobID;  //API bidsOnJob/5ccc14ef20102023b236c3fc\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\t/*------------------------------Get all completed jobs,won bids,lost bids,opwn bids for user ---------------------------------*/\r\n\tpublic getFilteredJobsForUser(jobStatus): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'userCompletedJobs/';  //API partner/payment/5c90a8ac95339c2310392ac1\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t  jobStatus:jobStatus,\r\n\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t}\r\n\t/*------------------------------Get all completed jobs,won bids,lost bids,opwn bids for user ---------------------------------*/\r\n\tpublic getFilteredJobsForUserDashboard(jobStatus): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'userCompletedJobsDashboard/';  //API partner/payment/5c90a8ac95339c2310392ac1\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t  jobStatus:jobStatus,\r\n\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t}\r\n\t\t/*------------------------------Get all completed jobs,won bids,lost bids,opwn bids for partner ---------------------------------*/\r\n\tpublic getFilteredJobsForPartner(bidStatus,jobStatus): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'partner/bidWonLostComplete/';  //API partner/payment/5c90a8ac95339c2310392ac1\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t  bidStatus:bidStatus,\r\n\t\t  jobStatus:jobStatus,\r\n\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t}\r\n\t\r\n\t/*--------------Check user has applied on a job or not---------------------------------------*/\r\n\tpublic getBidsOnJob(job_id): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'partner/bidsOnJob/'+job_id;  //API bidsOnJob/5ccc14ef20102023b236c3fc\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/*--------------Check user has applied on a job or not---------------------------------------*/\r\n\tpublic getBidsOnJobUser(job_id): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'getHiredDate/'+job_id;  //API bidsOnJob/5ccc14ef20102023b236c3fc\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\t/*--------------Hire or decline a job----------------------------------api/jobHiredDecline/5cb701d1dc705b16225770ce/5ccc14ef20102023b236c3fc-----*/\r\n\tpublic hireDecline(type,job_id,user_id): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'jobHiredDecline/'+user_id+'/'+job_id;  //API partner/payment/5c90a8ac95339c2310392ac1\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {bidStatus:type};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t.post(uri, obj,{headers:headers}); \r\n\t}\r\n\t/*--------------post a review on completing a job------------------------savereviews/5c9a290b9b7238289d9f848f-----*/\r\n\tpublic sendReviews(rating_info,sender_id,jobid,partnerid): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'savereviews/'+jobid;  //API partner/payment/5c90a8ac95339c2310392ac1\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t\t\t\t\trating:rating_info.ratingSelected,\r\n\t\t\t\t\t\tfeedback:rating_info.jobFeedback,\r\n\t\t\t\t\t\tsenderUserId:sender_id,\r\n\t\t\t\t\t\trecieverUserId:partnerid,\r\n\t\t\t\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t.post(uri, obj,{headers:headers}); \r\n\t}\r\n\t/*--------------update a review on completing a job------------------------savereviews/5c9a290b9b7238289d9f848f-----*/\r\n\tpublic updateReviews(rating_info,reviewid): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'updatereviews/'+reviewid;  //API partner/payment/5c90a8ac95339c2310392ac1\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t\t\t\t\trating:rating_info.ratingSelected,\r\n\t\t\t\t\t\tfeedback:rating_info.jobFeedback,\r\n\t\t\t\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t.post(uri, obj,{headers:headers}); \r\n\t}\r\n\t/*---------------------------------- Edit bid for view -----------------------------*/\r\n\tpublic editJobBids(job_id): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst obj = {};\r\n\t\tconst uri = environment.apiUrl+'partner/editbid/'+job_id;  //API api/partner/editbid/5cd518c538bc5c24ab886e43\r\n\t\theaders = headers.append('token', token); \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/*------------------Make bid ----------------------- partner/createbid/5c9a290b9b7238289d9f848f */\r\n\t\r\n\tpublic addbid(bid_info,jobId,_userid): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'partner/createbid/'+jobId;  //API\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t\tbid_price: bid_info.bidAmount,\r\n\t\t\tbid_proposal: bid_info.bidProposal,\r\n\t\t\tattachment_pic : \"\"\r\n\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t}\r\n\t\r\n\t/*------------------update bid ----------------------- api/partner/updatebid/5cd518c538bc5c24ab886e43 */\r\n\tpublic updateBid(bid_info,bidId,_userid): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'partner/updatebid/'+bidId;  //API\r\n\t\tlet headers = new HttpHeaders();\r\n\t\t\r\n\t\tconst obj = {\r\n\t\t\tbid_price: bid_info.bidAmount,\r\n\t\t\tbid_proposal: bid_info.bidProposal,\r\n\t\t\tattachment_pic : \"\"\r\n\t\t};\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, obj,{headers:headers}); \r\n\t}\r\n\t  \r\n\tpublic addbidWithFile(bid_info,jobId,_userid,image: File): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tconst uri = environment.apiUrl+'partner/createbid/'+jobId;  //API\r\n\t\tlet headers = new HttpHeaders();\r\n\t\tconst formData = new FormData();\r\n\t\t\r\n\t\tformData.append('bid_price',  bid_info.bidAmount);\r\n\t\tformData.append('bid_proposal',  bid_info.bidProposal);\r\n\t\tif(image !== undefined){\r\n\t\t\tformData.append('attachment_pic',  image);\r\n\t\t}\r\n\t\theaders = headers.append('token', token); \r\n\t\t return this\r\n\t\t  .http\r\n\t\t  .post(uri, formData,{headers:headers}); \r\n\t}\r\n\t  \r\n\t\r\n\t/*-------------- Get list of bids on a job --------------------------*/\r\n\tpublic getJobBids(jobID): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\t\r\n\t\tconst uri = environment.apiUrl+'jobBidUsers/'+jobID; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t} \r\n\t\r\n\t/*-------------- Get review on a completed job --------------------------*/\r\n\tpublic getUserFeedback(reviewID): any {\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n\t\t\r\n\t\tconst uri = environment.apiUrl+'editreviews/'+reviewID; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n\t} \r\n\t\r\n\tpublic getAllPlans(): any {\r\n\t\tconst uri = environment.apiUrl+'plans'; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\tpublic getAppliances(serviceId): any {\r\n\t\tconst uri = environment.apiUrl+'appliaces/'+serviceId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\tpublic getBasement(serviceId): any {\r\n\t\tconst uri = environment.apiUrl+'basement/'+serviceId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\tpublic getBedrooms(serviceId): any {\r\n\t\tconst uri = environment.apiUrl+'bedrooms/'+serviceId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\tpublic getDiningrooms(serviceId): any {\r\n\t\tconst uri = environment.apiUrl+'diningrooms/'+serviceId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\tpublic getFamilyrooms(serviceId): any {\r\n\t\tconst uri = environment.apiUrl+'familyrooms/'+serviceId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\t\r\n\tpublic getServices(): any {\r\n\t\tconst uri = environment.apiUrl+'services'; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\tpublic getGarages(serviceId): any {\r\n\t\tconst uri = environment.apiUrl+'garages/'+serviceId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\tpublic getKitchen(serviceId): any {\r\n\t\tconst uri = environment.apiUrl+'kitchen/'+serviceId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\tpublic getLivingrooms(serviceId): any {\r\n\t\tconst uri = environment.apiUrl+'livingrooms/'+serviceId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\tpublic getPatioyard(serviceId): any {\r\n\t\tconst uri = environment.apiUrl+'patioyard/'+serviceId; //API \r\n\t\treturn this\r\n\t\t\t.http\r\n\t\t\t.get(uri);\r\n\t} \r\n\r\n\t\r\n\t\r\n   \r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { HttpClient,HttpHeaders  } from '@angular/common/http';\r\nimport { Observable, Subject,BehaviorSubject } from 'rxjs';\r\nimport { map,take } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n private loggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  //  Add User  \r\n  get isLoggedIn(){\r\n\t  let token = localStorage.getItem('login_token');\r\n\t\tif (token ) {\r\n\t\t\tthis.loggedIn.next(true);\r\n\t\t}else{\r\n\t\t\tthis.loggedIn.next(false);\r\n\t\t}\r\n\t  return this.loggedIn.asObservable();\r\n  }\r\n  public addUser(user,userRole): any {\r\n\t \r\n    const uri = environment.apiUrl+'user/add';  //API\r\n    const obj = {\r\n      firstname: user.firstName,\r\n      lastname: user.lastName,\r\n      phone: user.phone,\r\n\t  email :user.email,\r\n\t  state :user.state,\r\n\t  county :user.county,\r\n\t  city :user.city,\r\n\t  password :user.password,\r\n\t  address :user.address,\r\n\t  zipcode :user.zip,\r\n\t  userRole :userRole\r\n    };\r\n\t\r\n\t\r\n     return this\r\n      .http\r\n      .post(uri, obj); \r\n  }\r\n   \r\n\r\n   //  Add partner  \r\n  public addPartner(user,userRole): any {\r\n\t \r\n    const uri = environment.apiUrl+'partner/add';  //API\r\n    const obj = {\r\n      firstname: user.firstName,\r\n      lastname: user.lastName,\r\n      companyName: user.companyName,\r\n      phone: user.phone,\r\n\t  email :user.email,\r\n\t  state :user.state,\r\n\t  county :user.county,\r\n\t  password :user.password,\r\n\t  address :user.address,\r\n\t  services :user.services,\r\n\t  userRole :userRole\r\n    };\r\n\tconsole.log(obj);\r\n\t\r\n     return this\r\n      .http\r\n      .post(uri, obj); \r\n  }\r\n   \r\n    // Call Email Already exist API   \r\n   public emailAlready(email): any {\r\n    const uri = environment.apiUrl+'user/user_email'; //API \r\n    const obj = {\r\n\t  email :email\r\n    };\r\n\t\r\n    return this\r\n      .http\r\n      .post(uri, obj);\r\n  } \r\n  \r\n   \r\n  \r\n  // Get state API   \r\n   public getStates(): any {\r\n    const uri = environment.apiUrl+'user/states'; //API \r\n    /* const obj = {\r\n\t  email :email\r\n    }; */\r\n    return this\r\n      .http\r\n      .get(uri);\r\n   } \r\n   \r\n    //  Call User role API   \r\n   public getUserRoles(usertype): any {\r\n    const uri = environment.apiUrl+'user/roles/'+usertype; //API \r\n\t\r\n    return this\r\n      .http\r\n      .get(uri);\r\n   } \r\n  \r\n  //  Call Login API   \r\n  login_user(email,password): Observable<any> {\r\n\r\n    const uri = environment.apiUrl+'user/userlogin';\r\n    const obj = {\r\n\t  email :email,\r\n\t  password :password,\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj);\r\n  }\r\n \r\n //  Get Current logged in user data\r\n  public getUsers(): any {\r\n\tlet token = localStorage.getItem('login_token');\r\n\tlet headers = new HttpHeaders();\r\n    headers = headers.append('token', token); \r\n\theaders = headers.append('Access-Control-Allow-Origin', '*');\r\n    const uri = environment.apiUrl+'user';\r\n\t\r\n    return this\r\n            .http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n  }\r\n  \r\n  //  Get Current logged in user data\r\n  public getPartner(id): any {\r\n\tlet token = localStorage.getItem('login_token');\r\n\tlet headers = new HttpHeaders();\r\n    headers = headers.append('token', token); \r\n    const uri = environment.apiUrl+'partner/edit/'+id;\r\n\tconsole.log(uri);\r\n    return this\r\n            .http\r\n            .get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n  }\r\n // Get user data and return to Edit conponent\r\n  public editUser(id): any {\r\n    const uri = environment.apiUrl+'user/edit/' + id;\r\n    return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n  }\r\n // Call user profile update API \r\n public updateUser(user, id,image: File): any {\r\n    const uri = environment.apiUrl+'user/update/' + id;\r\n\t\r\n\tconst formData = new FormData();\r\n\r\n\t\r\n\tformData.append('firstname',  user.firstName);\r\n\tformData.append('lastname',  user.lastName);\r\n\tformData.append('phone',  user.phone);\r\n\tformData.append('state',  user.state);\r\n\tformData.append('county',  user.county);\r\n\tformData.append('city',  user.city);\r\n\tformData.append('address',  user.address);\r\n\tformData.append('zipcode',  user.zip);\r\n\tif(image !== undefined){\r\n\t\tformData.append('profile_pic',  image);\r\n\t}\r\n\t\r\n\r\n\r\n    console.log(formData);\r\n    return this\r\n      .http\r\n      .post(uri, formData); \r\n  }\r\n  \r\n  public updateUserWithoutFIle(user, id): any {\r\n    const uri = environment.apiUrl+'user/update/' + id;\r\n\t\r\n\tconst formData = new FormData();\r\n\t\r\n\tformData.append('firstname',  user.firstName);\r\n\tformData.append('lastname',  user.lastName);\r\n\tformData.append('phone',  user.phone);\r\n\tformData.append('state',  user.state);\r\n\tformData.append('county',  user.county);\r\n\tformData.append('city',  user.city);\r\n\tformData.append('address',  user.address);\r\n\tformData.append('zipcode',  user.zip);\r\n\tconsole.log(formData);\r\n    return this\r\n      .http\r\n      .post(uri, formData); \r\n  }\r\n  \r\n  \r\n  public updatePartner(user, id,image: File): any {\r\n\t  \r\n    const uri = environment.apiUrl+'partner/update/' + id;\r\n\t\r\n\tconst formData = new FormData();\r\n\r\n\t\r\n\tformData.append('firstname',  user.firstName);\r\n\tformData.append('lastname',  user.lastName);\r\n\tformData.append('companyName',  user.companyName);\r\n\tformData.append('phone',  user.phone);\r\n\tformData.append('state',  user.state);\r\n\t/* formData.append('county',  user.county);\r\n\tformData.append('services',  user.services); */\r\n\tfor (var i = 0; i < user.county.length; i++) {\r\n\t\tformData.append('county[]', user.county[i]);\r\n\t}\r\n\tfor (var i = 0; i < user.services.length; i++) {\r\n\t\tformData.append('services[]', user.services[i]);\r\n\t}\r\n\tformData.append('address',  user.address);\r\n\tformData.append('zipcode',  user.zip);\r\n\tif(image !== undefined){\r\n\t\tformData.append('profile_pic',  image);\r\n\t}\r\n\t\r\n    console.log(formData);\r\n    return this\r\n      .http\r\n      .post(uri, formData); \r\n  }\r\n  \r\n  public updatePartnerWithoutFIle(user, id): any {\r\n    const uri = environment.apiUrl+'partner/update/' + id;\r\n\t\r\n\tconst formData = new FormData();\r\n\r\n\tconsole.log(user.county);\r\n\tconsole.log(user.services);\r\n\tformData.append('firstname',  user.firstName);\r\n\tformData.append('lastname',  user.lastName);\r\n\tformData.append('companyName',  user.companyName);\r\n\tformData.append('phone',  user.phone);\r\n\tformData.append('state',  user.state);\r\n\tfor (var i = 0; i < user.county.length; i++) {\r\n\t\tformData.append('county[]', user.county[i]);\r\n\t}\r\n\tfor (var i = 0; i < user.services.length; i++) {\r\n\t\tformData.append('services[]', user.services[i]);\r\n\t}\r\n\t/* formData.append('county',  user.county);\r\n\tformData.append('services',  user.services); */\r\n\tformData.append('address',  user.address);\r\n\tformData.append('zipcode',  user.zip);\r\n\tconsole.log(formData);\r\n    return this\r\n      .http\r\n      .post(uri, formData); \r\n  }\r\n \r\n  // Call verify user account API  \r\n  public getUserVerified(id): any {\r\n    const uri = environment.apiUrl+'user/verify/' + id;\r\n    return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n  }\r\n  \r\n   public forgot_password(email): any {\r\n    const uri = environment.apiUrl+'user/forgotpassword';\r\n    const obj = {\r\n      email: email\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj);\r\n  \r\n  }\r\n  // Request node to check password code \r\n   public password_code(id): any {\r\n    const uri = environment.apiUrl+'user/resetpassword/'+id;\r\n     return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n   }\r\n   \r\n  // Reset passwrd \r\n  public resetPassword(password,id): any {\r\n    const uri = environment.apiUrl+'user/updatepassword/'+id;\r\n    const obj = {\r\n      password: password\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj);\r\n  }\r\n   public updatePassword(password): any {\r\n\tlet token = localStorage.getItem('login_token');\r\n\tlet headers = new HttpHeaders();\r\n    headers = headers.append('token', token); \r\n\t\r\n    const uri = environment.apiUrl+'user/changepassword/';\r\n    const obj = {\r\n      password: password\r\n    };\r\n    return this\r\n      .http\r\n      .post(uri, obj,{headers:headers});\r\n  }\r\n  \r\n  \r\n\r\n \r\n  public deleteUser(id): any {\r\n    const uri = environment.apiUrl+'user/delete/' + id;\r\n        return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n     } \r\n\t \r\n\t/*----------------------- getPartnerJobProfile - get parter completed job, in processing job rating and reviews -http://18.191.219.125:3001/api/partner/RatingReviewJobs/5cb701d1dc705b16225770ce\r\n\t----------------------*/\r\n\tpublic getPartnerJobProfile(id): any {\r\n\t\tconst uri = environment.apiUrl+'partner/RatingReviewJobs/' + id;\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n        return this\r\n            .http\r\n\t\t\t.get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n     } \r\n\t/*----------------------- getPartnerCompletedJobsAndReviews - get parter completed job, in processing job rating and reviews -http://18.191.219.125:3001/api/partner/RatingReviewJobs/5cb701d1dc705b16225770ce\r\n\t----------------------*/\r\n\tpublic getPartnerCompletedJobsAndReviews(id): any {\r\n\t\tconst uri = environment.apiUrl+'partner/allreviews/' + id;\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n        return this\r\n            .http\r\n\t\t\t.get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n     } \r\n\t /*-------------------- getNotificationCountForUser ------------------------*/\r\n\tpublic getNotificationCountForUser(): any {\r\n\t\tconst uri = environment.apiUrl+'allnotificationsCount';\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n        return this\r\n            .http\r\n\t\t\t.get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n     } \r\n\t /*-------------------- get all notifications ----------- http://18.191.219.125:3001/api/shownotifications-------------*/\r\n\tpublic getAllNotifications(number): any {\r\n\t\tconst uri = environment.apiUrl+'shownotifications/'+number;\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n        return this\r\n            .http\r\n\t\t\t.get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n     } \r\n\t /*-------------------- read all notifications ----------- http://18.191.219.125:3001/api/readAllNotification-------------*/\r\n\tpublic readAllNotifications(): any {\r\n\t\tconst uri = environment.apiUrl+'readAllNotification/';\r\n\t\tlet token = localStorage.getItem('login_token');\r\n\t\tlet headers = new HttpHeaders();\r\n\t\theaders = headers.append('token', token); \r\n        return this\r\n            .http\r\n\t\t\t.get(uri,{headers:headers})\r\n            .pipe(map(res => {\r\n              return res;\r\n            }));\r\n     } \r\n\t \r\n\tpublic getCounties(state): any {\r\n\t\tconst uri = environment.apiUrl+'user/counties'; //API \r\n\t\tconst obj = {\r\n\t\t  state :state\r\n\t\t};\r\n\t\t\r\n\t\treturn this\r\n\t\t  .http\r\n\t\t  .post(uri, obj);\r\n\t }\r\n\t public getCities(county,state): any {\r\n\t\tconst uri = environment.apiUrl+'user/cities'; //API \r\n\t\tconst obj = {\r\n\t\t  state :state,\r\n\t\t  county :county\r\n\t\t};\r\n\t\t\r\n\t\treturn this\r\n\t\t  .http\r\n\t\t  .post(uri, obj);\r\n\t }\r\n\t \r\n}\r\n\r\n\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\n\r\nexport const environment = {\r\n  /*  production: false,\r\n  apiUrl: 'http://www.movelaunch.com/api/',\r\n  server_url: 'http://www.movelaunch.com/' ,\r\n  image_url: 'http://www.movelaunch.com/uploads/user/',\r\n  partner_image_url: 'http://www.movelaunch.com/uploads/partner/',\r\n  bid_document_url: 'http://www.movelaunch.com/uploads/bids/'  */\r\n\tproduction: false,\r\n\tapiUrl: 'http://23.251.151.250:5555/api/',\r\n\tserver_url: 'http://23.251.151.250:5555/' ,\r\n\timage_url: 'http://23.251.151.250:5555/uploads/user/',\r\n\tpartner_image_url: 'http://23.251.151.250:5555/uploads/partner/',\r\n\tbid_document_url: 'http://23.251.151.250:5555/uploads/bids/' \r\n  \r\n  /* apiUrl: 'http://localhost:3001/api/',\r\n  server_url: 'http://localhost:3001' */\r\n  //3.13.230.48\r\n  \r\n};\r\n ","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n    preserveWhitespaces: true\r\n})\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}