{"version":3,"sources":["webpack:///src/assets/js/jquery.sticky.js","webpack:///src/assets/js/custom.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,sCAAsC;AACtC,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,OAAO;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA,+BAA+B,sEAAsE;AACrG;;AAEA;AACA,+BAA+B,eAAe,gBAAgB,gBAAgB;AAC9E;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,mDAAmD,+BAA+B;AAClF,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;CC/RD;AACA;;;AAGA;AACA,+BAA+B,oBAAoB;;;;AAInD,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,E;AACD,G","file":"scripts.js","sourcesContent":["// Sticky Plugin v1.0.4 for jQuery\r\n// =============\r\n// Author: Anthony Garand\r\n// Improvements by German M. Bravo (Kronuz) and Ruud Kamphuis (ruudk)\r\n// Improvements by Leonardo C. Daronco (daronco)\r\n// Created: 02/14/2011\r\n// Date: 07/20/2015\r\n// Website: http://stickyjs.com/\r\n// Description: Makes an element on the page stick on the screen as you scroll\r\n//              It will only set the 'top' and 'position' of your element, you\r\n//              might need to adjust the width in some cases.\r\n\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(['jquery'], factory);\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        // Node/CommonJS\r\n        module.exports = factory(require('jquery'));\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n    var slice = Array.prototype.slice; // save ref to original slice()\r\n    var splice = Array.prototype.splice; // save ref to original slice()\r\n\r\n  var defaults = {\r\n      topSpacing: 0,\r\n      bottomSpacing: 0,\r\n      className: 'is-sticky',\r\n      wrapperClassName: 'sticky-wrapper',\r\n      center: false,\r\n      getWidthFrom: '',\r\n      widthFromWrapper: true, // works only when .getWidthFrom is empty\r\n      responsiveWidth: false,\r\n      zIndex: 'inherit'\r\n    },\r\n    $window = $(window),\r\n    $document = $(document),\r\n    sticked = [],\r\n    windowHeight = $window.height(),\r\n    scroller = function() {\r\n      var scrollTop = $window.scrollTop(),\r\n        documentHeight = $document.height(),\r\n        dwh = documentHeight - windowHeight,\r\n        extra = (scrollTop > dwh) ? dwh - scrollTop : 0;\r\n\r\n      for (var i = 0, l = sticked.length; i < l; i++) {\r\n        var s = sticked[i],\r\n          elementTop = s.stickyWrapper.offset().top,\r\n          etse = elementTop - s.topSpacing - extra;\r\n\r\n        //update height in case of dynamic content\r\n        s.stickyWrapper.css('height', s.stickyElement.outerHeight());\r\n\r\n        if (scrollTop <= etse) {\r\n          if (s.currentTop !== null) {\r\n            s.stickyElement\r\n              .css({\r\n                'width': '',\r\n                'position': '',\r\n                'top': '',\r\n                'z-index': ''\r\n              });\r\n            s.stickyElement.parent().removeClass(s.className);\r\n            s.stickyElement.trigger('sticky-end', [s]);\r\n            s.currentTop = null;\r\n          }\r\n        }\r\n        else {\r\n          var newTop = documentHeight - s.stickyElement.outerHeight()\r\n            - s.topSpacing - s.bottomSpacing - scrollTop - extra;\r\n          if (newTop < 0) {\r\n            newTop = newTop + s.topSpacing;\r\n          } else {\r\n            newTop = s.topSpacing;\r\n          }\r\n          if (s.currentTop !== newTop) {\r\n            var newWidth;\r\n            if (s.getWidthFrom) {\r\n                padding =  s.stickyElement.innerWidth() - s.stickyElement.width();\r\n                newWidth = $(s.getWidthFrom).width() - padding || null;\r\n            } else if (s.widthFromWrapper) {\r\n                newWidth = s.stickyWrapper.width();\r\n            }\r\n            if (newWidth == null) {\r\n                newWidth = s.stickyElement.width();\r\n            }\r\n            s.stickyElement\r\n              .css('width', newWidth)\r\n              .css('position', 'fixed')\r\n              .css('top', newTop)\r\n              .css('z-index', s.zIndex);\r\n\r\n            s.stickyElement.parent().addClass(s.className);\r\n\r\n            if (s.currentTop === null) {\r\n              s.stickyElement.trigger('sticky-start', [s]);\r\n            } else {\r\n              // sticky is started but it have to be repositioned\r\n              s.stickyElement.trigger('sticky-update', [s]);\r\n            }\r\n\r\n            if (s.currentTop === s.topSpacing && s.currentTop > newTop || s.currentTop === null && newTop < s.topSpacing) {\r\n              // just reached bottom || just started to stick but bottom is already reached\r\n              s.stickyElement.trigger('sticky-bottom-reached', [s]);\r\n            } else if(s.currentTop !== null && newTop === s.topSpacing && s.currentTop < newTop) {\r\n              // sticky is started && sticked at topSpacing && overflowing from top just finished\r\n              s.stickyElement.trigger('sticky-bottom-unreached', [s]);\r\n            }\r\n\r\n            s.currentTop = newTop;\r\n          }\r\n\r\n          // Check if sticky has reached end of container and stop sticking\r\n          var stickyWrapperContainer = s.stickyWrapper.parent();\r\n          var unstick = (s.stickyElement.offset().top + s.stickyElement.outerHeight() >= stickyWrapperContainer.offset().top + stickyWrapperContainer.outerHeight()) && (s.stickyElement.offset().top <= s.topSpacing);\r\n\r\n          if( unstick ) {\r\n            s.stickyElement\r\n              .css('position', 'absolute')\r\n              .css('top', '')\r\n              .css('bottom', 0)\r\n              .css('z-index', '');\r\n          } else {\r\n            s.stickyElement\r\n              .css('position', 'fixed')\r\n              .css('top', newTop)\r\n              .css('bottom', '')\r\n              .css('z-index', s.zIndex);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    resizer = function() {\r\n      windowHeight = $window.height();\r\n\r\n      for (var i = 0, l = sticked.length; i < l; i++) {\r\n        var s = sticked[i];\r\n        var newWidth = null;\r\n        if (s.getWidthFrom) {\r\n            if (s.responsiveWidth) {\r\n                newWidth = $(s.getWidthFrom).width();\r\n            }\r\n        } else if(s.widthFromWrapper) {\r\n            newWidth = s.stickyWrapper.width();\r\n        }\r\n        if (newWidth != null) {\r\n            s.stickyElement.css('width', newWidth);\r\n        }\r\n      }\r\n    },\r\n    methods = {\r\n      init: function(options) {\r\n        return this.each(function() {\r\n          var o = $.extend({}, defaults, options);\r\n          var stickyElement = $(this);\r\n\r\n          var stickyId = stickyElement.attr('id');\r\n          var wrapperId = stickyId ? stickyId + '-' + defaults.wrapperClassName : defaults.wrapperClassName;\r\n          var wrapper = $('<div></div>')\r\n            .attr('id', wrapperId)\r\n            .addClass(o.wrapperClassName);\r\n\r\n          stickyElement.wrapAll(function() {\r\n            if ($(this).parent(\"#\" + wrapperId).length == 0) {\r\n                    return wrapper;\r\n            }\r\n});\r\n\r\n          var stickyWrapper = stickyElement.parent();\r\n\r\n          if (o.center) {\r\n            stickyWrapper.css({width:stickyElement.outerWidth(),marginLeft:\"auto\",marginRight:\"auto\"});\r\n          }\r\n\r\n          if (stickyElement.css(\"float\") === \"right\") {\r\n            stickyElement.css({\"float\":\"none\"}).parent().css({\"float\":\"right\"});\r\n          }\r\n\r\n          o.stickyElement = stickyElement;\r\n          o.stickyWrapper = stickyWrapper;\r\n          o.currentTop    = null;\r\n\r\n          sticked.push(o);\r\n\r\n          methods.setWrapperHeight(this);\r\n          methods.setupChangeListeners(this);\r\n        });\r\n      },\r\n\r\n      setWrapperHeight: function(stickyElement) {\r\n        var element = $(stickyElement);\r\n        var stickyWrapper = element.parent();\r\n        if (stickyWrapper) {\r\n          stickyWrapper.css('height', element.outerHeight());\r\n        }\r\n      },\r\n\r\n      setupChangeListeners: function(stickyElement) {\r\n        if (window.MutationObserver) {\r\n          var mutationObserver = new window.MutationObserver(function(mutations) {\r\n            if (mutations[0].addedNodes.length || mutations[0].removedNodes.length) {\r\n              methods.setWrapperHeight(stickyElement);\r\n            }\r\n          });\r\n          mutationObserver.observe(stickyElement, {subtree: true, childList: true});\r\n        } else {\r\n          if (window.addEventListener) {\r\n            stickyElement.addEventListener('DOMNodeInserted', function() {\r\n              methods.setWrapperHeight(stickyElement);\r\n            }, false);\r\n            stickyElement.addEventListener('DOMNodeRemoved', function() {\r\n              methods.setWrapperHeight(stickyElement);\r\n            }, false);\r\n          } else if (window.attachEvent) {\r\n            stickyElement.attachEvent('onDOMNodeInserted', function() {\r\n              methods.setWrapperHeight(stickyElement);\r\n            });\r\n            stickyElement.attachEvent('onDOMNodeRemoved', function() {\r\n              methods.setWrapperHeight(stickyElement);\r\n            });\r\n          }\r\n        }\r\n      },\r\n      update: scroller,\r\n      unstick: function(options) {\r\n        return this.each(function() {\r\n          var that = this;\r\n          var unstickyElement = $(that);\r\n\r\n          var removeIdx = -1;\r\n          var i = sticked.length;\r\n          while (i-- > 0) {\r\n            if (sticked[i].stickyElement.get(0) === that) {\r\n                splice.call(sticked,i,1);\r\n                removeIdx = i;\r\n            }\r\n          }\r\n          if(removeIdx !== -1) {\r\n            unstickyElement.unwrap();\r\n            unstickyElement\r\n              .css({\r\n                'width': '',\r\n                'position': '',\r\n                'top': '',\r\n                'float': '',\r\n                'z-index': ''\r\n              })\r\n            ;\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n  // should be more efficient than using $window.scroll(scroller) and $window.resize(resizer):\r\n  if (window.addEventListener) {\r\n    window.addEventListener('scroll', scroller, false);\r\n    window.addEventListener('resize', resizer, false);\r\n  } else if (window.attachEvent) {\r\n    window.attachEvent('onscroll', scroller);\r\n    window.attachEvent('onresize', resizer);\r\n  }\r\n\r\n  $.fn.sticky = function(method) {\r\n    if (methods[method]) {\r\n      return methods[method].apply(this, slice.call(arguments, 1));\r\n    } else if (typeof method === 'object' || !method ) {\r\n      return methods.init.apply( this, arguments );\r\n    } else {\r\n      $.error('Method ' + method + ' does not exist on jQuery.sticky');\r\n    }\r\n  };\r\n\r\n  $.fn.unstick = function(method) {\r\n    if (methods[method]) {\r\n      return methods[method].apply(this, slice.call(arguments, 1));\r\n    } else if (typeof method === 'object' || !method ) {\r\n      return methods.unstick.apply( this, arguments );\r\n    } else {\r\n      $.error('Method ' + method + ' does not exist on jQuery.sticky');\r\n    }\r\n  };\r\n  $(function() {\r\n    setTimeout(scroller, 0);\r\n  });\r\n}));\r\n","$(document).ready(function(){\r\n/*================== Sticky-header =====================*/\t\r\n\t\r\n\r\n/*================== File-Upload =====================*/\t\r\n//jQuery(\"div#myId\").dropzone({ url: \"/file/post\" });\r\n\r\n\r\n\t\r\n\t});\r\n\r\n/*================== Dynamic-height =====================*/\t\t\r\n/* \t\r\n  $(document).ready(function(){\r\n       \r\n        var    dheight = $('html').height(),\r\n            cbody = $('.form-wrapper').height(),\r\n            wheight = $(window).height(),\r\n            cheight = wheight - dheight + cbody;\r\n           \r\n        if (wheight > dheight){\r\n            $('.form-wrapper').height(cheight);\r\n        }\r\n       \r\n        $(window).resize(function(){\r\n            wheight = $(window).height();\r\n            noscroll();\r\n            changepush();\r\n        });\r\n\r\n        function noscroll(){\r\n           if (wheight > dheight) {\r\n                $('html').addClass('noscroll');\r\n           }\r\n\r\n            else if (wheight <= dheight) {\r\n                $('html').removeClass('noscroll');\r\n            }\r\n           \r\n            else {}\r\n\r\n        }\r\n\r\n        function changepush(){\r\n           if (wheight > dheight) {\r\n                   $('.form-wrapper').height(wheight-dheight+cbody);\r\n           }\r\n           \r\n        }\r\n\r\n});\t\t\r\n */"],"sourceRoot":""}