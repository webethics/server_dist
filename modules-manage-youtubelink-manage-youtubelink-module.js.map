{"version":3,"sources":["webpack:///./src/app/admin/modules/manage-youtubelink/add-youtubelink/add-youtubelink.component.css","webpack:///./src/app/admin/modules/manage-youtubelink/add-youtubelink/add-youtubelink.component.html","webpack:///./src/app/admin/modules/manage-youtubelink/add-youtubelink/add-youtubelink.component.ts","webpack:///./src/app/admin/modules/manage-youtubelink/edit-youtubelink/edit-youtubelink.component.css","webpack:///./src/app/admin/modules/manage-youtubelink/edit-youtubelink/edit-youtubelink.component.html","webpack:///./src/app/admin/modules/manage-youtubelink/edit-youtubelink/edit-youtubelink.component.ts","webpack:///./src/app/admin/modules/manage-youtubelink/list-youtubelink/list-youtubelink.component.css","webpack:///./src/app/admin/modules/manage-youtubelink/list-youtubelink/list-youtubelink.component.html","webpack:///./src/app/admin/modules/manage-youtubelink/list-youtubelink/list-youtubelink.component.ts","webpack:///./src/app/admin/modules/manage-youtubelink/manage-youtubelink-routing.module.ts","webpack:///./src/app/admin/modules/manage-youtubelink/manage-youtubelink.module.ts"],"names":[],"mappings":"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","file":"modules-manage-youtubelink-manage-youtubelink-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"an-page-content\\\">\\n  <div class=\\\"an-content-body manage-price\\\">\\n      <div class=\\\"an-body-topbar wow fadeIn\\\">\\n          <div class=\\\"an-page-title\\\">\\n              <h2>Add YouTube Link</h2>\\n          </div>\\n      </div>\\n      <form [formGroup]=\\\"addYoutubeForm\\\" novalidate (ngSubmit)=\\\"onAdd()\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <div class=\\\"\\\">\\n                          <input type=\\\"text\\\" formControlName=\\\"youtube_url\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"YouTube Url\\\">\\n                          <!-- <v360-form-error [control]=\\\"addLocationForm.controls.location\\\" [msg]=\\\"'location'\\\"></v360-form-error> -->\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <div class=\\\"\\\">\\n                          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"Title\\\">\\n                          <!-- <v360-form-error [control]=\\\"addLocationForm.controls.price_of_video\\\" [msg]=\\\"'price'\\\"></v360-form-error> -->\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-md-12\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"\\\">\\n                        <input type=\\\"text\\\" formControlName=\\\"subtitle\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"SubTitle\\\">\\n                        <!-- <v360-form-error [control]=\\\"addLocationForm.controls.price_of_video\\\" [msg]=\\\"'price'\\\"></v360-form-error> -->\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"\\\">\\n                        <input type=\\\"text\\\" formControlName=\\\"category\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"Category\\\">\\n                        <!-- <v360-form-error [control]=\\\"addLocationForm.controls.price_of_video\\\" [msg]=\\\"'price'\\\"></v360-form-error> -->\\n                    </div>\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"\\\">\\n              <div class=\\\"form-group\\\">\\n                  <div class=\\\"\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary \\\">ADD</button>\\n                  </div>\\n              </div>\\n          </div>\\n      </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AdminService } from '../../../admin.service';\n\n@Component({\n  selector: 'app-add-youtubelink',\n  templateUrl: './add-youtubelink.component.html',\n  styleUrls: ['./add-youtubelink.component.css']\n})\nexport class AddYoutubelinkComponent implements OnInit {\n\n  addYoutubeForm: FormGroup\n\n  constructor(private adminService: AdminService) { }\n\n  ngOnInit() {\n    this.addYoutubeForm = new FormGroup({\n      youtube_url: new FormControl('', [\n        Validators.required,\n        // this.tnFormErrorService.stringValidator\n      ]),\n      title: new FormControl('', [\n        Validators.required,\n        // this.tnFormErrorService.priceValidator\n      ]),\n      subtitle: new FormControl('', [\n        Validators.required,\n        // this.tnFormErrorService.priceValidator\n      ]),\n      category: new FormControl('', [\n        Validators.required,\n        // this.tnFormErrorService.priceValidator\n      ])\n    });\n  }\n\n  onAdd() {\n    if (this.addYoutubeForm.valid) {\n      this.adminService.addYouTubeLink(this.addYoutubeForm.value).subscribe(res => {\n        console.log('response', res)\n      })\n    } else {\n\n    }\n  }\n  \n\n}\n","module.exports = \".box-video {\\n    display: block;\\n    padding: 16px 48px 16px 28px;\\n    width: 100%\\n}\\n\\n.box-video__item {\\n    position: relative;\\n    display: flex;\\n    align-items: center;\\n    height: auto;\\n    padding: 16px 30px 16px 0\\n}\\n\\n.box-video__item:not(:last-child) {\\n    border-bottom: 1px solid rgba(29, 0, 51, .1)\\n}\\n\\n.box-video__thumb {\\n    display: inline-block;\\n    vertical-align: middle;\\n    width: 130px;\\n    height: 90px;\\n    margin: 0 15px;\\n    border-radius: 5px;\\n    background-repeat: no-repeat;\\n    background-position: center;\\n    background-size: cover\\n}\\n\\n.box-video__title {\\n    margin: 10px 0;\\n    font-family: Roboto, sans-serif;\\n    font-size: 15px;\\n    color: #1d0033\\n}\\n\\n.box-video__meta {\\n    display: flex;\\n    opacity: .5\\n}\\n\"","module.exports = \"<div class=\\\"wrapper dashboard\\\">\\n    <div class=\\\"admin-main-container\\\">\\n        <header class=\\\"admin-main-header\\\">\\n            <a  class=\\\"page-title\\\">\\n                <span class=\\\"sh-icon fa fa-youtube-play\\\"></span> Daily Report</a>\\n        </header>\\n\\t\\t\\n        <input type=\\\"date\\\" [(ngModel)]=\\\"createDate\\\">\\n        <button type=\\\"submit\\\" (click)=\\\"search(createDate)\\\">Search</button>\\n\\t\\t<button class=\\\"export_button\\\" (click)=\\\"exportAsXLSXReports()\\\">Export As XLSX Reports</button>\\n        <!-- <div *ngIf=\\\"currentDateDataNotAvailable;else dataAvailable\\\">\\n            Current Date data is not available please select date from calender\\n        </div> -->\\n        <div class=\\\"admin-main-content\\\">\\n\\n            <!-- <div *ngIf=\\\"dailyLogs.length\\\">\\n                    <h3> Users who had a video call </h3>\\n                    <div class=\\\"admin-box\\\">\\n                        <div class=\\\"admin-box-item box-video\\\">\\n\\n                            <div class=\\\"box-video__item\\\">\\n                                <div class=\\\"box-video__content\\\">\\n                                    <table class=\\\"table NoTopBorder custom-table\\\">\\n                                        <tr>\\n                                            <th>Name</th>\\n                                            <th>Age</th>\\n                                            <th>Gender</th>\\n                                            <th>Online Time</th>\\n                                            <th>Offline Time</th>\\n                                            <th>Date</th>\\n                                            <th>Date With</th>\\n                                            <th>Age</th>\\n                                            <th>Gender</th>\\n\\n                                        </tr>\\n                                        <tr *ngFor=\\\"let dailyLog of dailyLogs;let i = index\\\">\\n\\n                                            <td class=\\\"h3 box-video__title\\\" [routerLink]=\\\"['/admin/user/video-log/',dailyLog.userInfo1._id]\\\">\\n                                                {{dailyLog.userInfo1.firstName}}\\n                                            </td>\\n                                            <td>\\n                                                {{dailyLog.userInfo1.age }}\\n\\n                                            </td>\\n                                            <td *ngIf=\\\"!dailyLog.userInfo2.gender;else other1\\\">\\n                                                Male\\n                                            </td>\\n                                            <td class=\\\"h3 box-video__title\\\">\\n                                                <select>\\n                                                    <option *ngFor=\\\"let onlineTime of dailyLog.onlineTimeHistory;let i = index\\\" value=\\\"volvo\\\"> {{onlineTime }}</option>\\n\\n                                                </select>\\n                                            </td>\\n                                            <td class=\\\"h3 box-video__title\\\">\\n                                                <select>\\n                                                    <option *ngFor=\\\"let offlineTime of dailyLog.offlineTimeHistory;let i = index\\\" value=\\\"volvo\\\"> {{offlineTime }}</option>\\n\\n                                                </select>\\n\\n                                            </td>\\n                                            <td>\\n                                                {{dailyLog.createdDateWithoutOffest| date: 'dd/MM/yyyy' }}\\n                                            </td>\\n                                            <td class=\\\"h3 box-video__title\\\">\\n                                                {{dailyLog.userInfo2.firstName}}\\n                                            </td>\\n                                            <td>\\n                                                {{dailyLog.userInfo2.age }}\\n\\n                                            </td>\\n                                            <td *ngIf=\\\"!dailyLog.userInfo2.gender;else other\\\">\\n                                                Male\\n                                            </td>\\n\\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                <div class=\\\"box-video__meta\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n            <!-- <div *ngIf=\\\"dailyLogs2.length\\\">\\n                    <h3> Users who did   not have a video call </h3>\\n\\n                    <div class=\\\"admin-box\\\">\\n                        <div class=\\\"admin-box-item box-video\\\">\\n\\n                            <div class=\\\"box-video__item\\\">\\n                                <div class=\\\"box-video__content\\\">\\n                                    <table class=\\\"table NoTopBorder custom-table\\\">\\n                                        <tr>\\n                                            <th>Name</th>\\n                                            <th>Email</th>\\n                                            <th>Gender</th>\\n                                            <th>Age</th>\\n                                            <th>Online Time</th>\\n                                            <th>Offline Time</th>\\n                                            <th>Date</th>\\n                                        </tr>\\n                                        <tr *ngFor=\\\"let dailyLog of dailyLogs2;let i = index\\\">\\n\\n                                            <td class=\\\"h3 box-video__title\\\" [routerLink]=\\\"['/admin/user/video-log/',dailyLog.userInfo1._id]\\\">\\n                                                {{dailyLog.userInfo1.firstName}}\\n                                            </td>\\n                                            <td>\\n                                                {{dailyLog.userInfo1.email}}\\n\\n                                            </td>\\n                                            <td *ngIf=\\\"!dailyLog.userInfo1.gender;else other\\\">\\n                                                Male\\n                                            </td>\\n                                            <td>\\n                                                {{dailyLog.userInfo1.age }}\\n\\n                                            </td>\\n                                            <td class=\\\"h3 box-video__title\\\">\\n                                                <select>\\n                                                    <option *ngFor=\\\"let onlineTime of dailyLog.onlineTimeHistory;let i = index\\\" value=\\\"volvo\\\"> {{onlineTime }}</option>\\n\\n                                                </select>\\n\\n                                            </td>\\n                                            <td class=\\\"h3 box-video__title\\\">\\n                                                <select>\\n                                                    <option *ngFor=\\\"let offlineTime of dailyLog.offlineTimeHistory;let i = index\\\" value=\\\"volvo\\\"> {{offlineTime }}</option>\\n\\n                                                </select>\\n\\n                                            </td>\\n                                            <td>\\n                                                {{dailyLog.createdWithTZ | dateWithTimezone:'America/New_York':'ll'}}\\n\\n                                            </td>\\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                <div class=\\\"box-video__meta\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> -->\\n\\n            <div *ngIf=\\\"useractivity && useractivity.length\\\">\\n                <table class=\\\"table NoTopBorder custom-table\\\">\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Email</th>\\n                        <th>Gender</th>\\n                        <th>Age</th>\\n                        <th>Online Time</th>\\n                        <th>Offline Time</th>\\n                        <th>Date</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let useractiv of useractivity;let i = index\\\">\\n\\n                        <td class=\\\"h3 box-video__title\\\">\\n                            {{useractiv?._id.name[0]}}\\n                        </td>\\n                        <td>\\n                            {{useractiv?._id.email[0]}}\\n\\n                        </td>\\n                        <td *ngIf=\\\"!useractiv?._id.gender[0];else other\\\">\\n                            Male\\n                        </td>\\n                        <td>\\n                            {{useractiv?._id.age[0] }}\\n\\n                        </td>\\n                        <td class=\\\"h3 box-video__title\\\">\\n                            <select>\\n                                <option *ngFor=\\\"let onlineTime of useractiv?.onlinehistory;let i = index\\\"> {{onlineTime.time?onlineTime.time:'' }}</option>\\n\\n                            </select>\\n\\n                        </td>\\n                        <td class=\\\"h3 box-video__title\\\">\\n                            <select>\\n                                <option *ngFor=\\\"let offlinetime of useractiv?.onlinehistory;let i = index\\\"> {{offlinetime.offlineTime }}</option>\\n\\n                            </select>\\n\\n                        </td>\\n                        <td class=\\\"h3 box-video__title\\\">\\n                            <select>\\n                                <option *ngFor=\\\"let onlineDate of useractiv?.onlinehistory;let i = index\\\" > {{onlineDate.date |dateWithTimezone:'America/New_York':'ll'}} </option>\\n\\n                            </select>\\n\\n                        </td>\\n                        <!-- <td>\\n                                        {{dailyLog.createdWithTZ | dateWithTimezone:'America/New_York':'ll'}}\\n\\n                                    </td> -->\\n                    </tr>\\n                </table>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n</div>\\n\\n<ng-template #other>\\n    <td>Female</td>\\n</ng-template>\\n<ng-template #other1>\\n    <td>Female</td>\\n</ng-template>\\n<ngx-spinner bdOpacity=0.1 size=\\\"medium\\\" color=\\\"#50008e\\\" type=\\\"line-scale\\\" [fullScreen]=\\\"true\\\">\\n    <p style=\\\"color: white\\\"> Loading... </p>\\n  </ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminService } from '../../../admin.service';\nimport { StringConst } from '../../../../shared/utils/string-constants';\nimport { MAX_LENGTH_VALIDATOR } from '@angular/forms/src/directives/validators';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ExportXlxsService } from '../../../../shared/service/export-xlxs.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-youtubelink',\n  templateUrl: './edit-youtubelink.component.html',\n  styleUrls: ['./edit-youtubelink.component.css']\n})\nexport class EditYoutubelinkComponent implements OnInit {\n  updateYoutubeForm: FormGroup\n  dailyLogs2: any;\n  showtable: any;\n  showTable: any;\n  createDate: any\n  currentDateDataNotAvailable: Boolean\n  useractivity: any;\n  constructor(private route: ActivatedRoute,\n    private admin: AdminService,\n\t private excelService: ExportXlxsService,\n    private spinner: NgxSpinnerService,\n\t private toastr: ToastrService,\n    private router: Router) { }\n  dailyLogs: any\n  ngOnInit() {\n\n\n    const date = {\n      date: ''\n    }\n    this.search('2020-04-02')\n  }\n\n\n  list() {\n    const date = {\n      date: ''\n    }\n    this.admin.dailyLogs(date).subscribe(res => {\n      console.log('fgdfgdfgdfgsdfg useractivity', res.data.useractivity)\n      this.spinner.show()\n      if (res.code == 200) {\n        this.spinner.hide()\n        this.dailyLogs = res.data.goneOnDate,\n          this.dailyLogs2 = res.data.notGoneOnDate,\n          this.useractivity = res.data.useractivity\n\n        /* if (res.data.goneOnDate.length != 0) {\n          this.showtable == true\n        }\n        if (res.data.notGoneOnDate.length != 0) {\n          this.showTable == true\n        } */\n      }\n\n    })\n  }\n\n\n  search(createDate) {\n    console.log(createDate)\n    const date = {\n      date: createDate\n    }\n    this.admin.dailyLogs(date).subscribe(res => {\n      console.log('sdsdsdsadasdsadas coming here', res)\n      if (res.code == 200) {\n        this.dailyLogs = res.data.goneOnDate;\n        this.dailyLogs2 = res.data.notGoneOnDate;\n        this.useractivity = res.data.useractivity;\n\t\t\n        console.log( this.useractivity[0],' this.useractivity')\n        if (res.data.goneOnDate.length != 0) {\n          this.showtable == true\n        } else {\n          // this.currentDateDataNotAvailable=false\n        }\n        if (res.data.notGoneOnDate.length != 0) {\n          this.showTable == true\n        } else {\n          // this.currentDateDataNotAvailable=false\n        }\n\n        if (res.data.goneOnDate.length == 0 && res.data.notGoneOnDate.length == 0) {\n          this.currentDateDataNotAvailable = true\n        } else {\n\n          this.currentDateDataNotAvailable = false\n        }\n      }\n\n    })\n  }\n  \n  exportAsXLSXReports(): void {\n    let reportArr = []\n\tlet onlineArr = [];\n\tlet i=1;\n    this.useractivity.forEach((element,index) => {\n\t\t\n\t\t\n\t\treportArr.push({\n\t\t\tSNo:i++,\n\t\t\tName:element._id.name[0],\n\t\t\tEmail:element._id.email[0],\n\t\t\tAge:element._id.age[0],\n\t\t\tGender:element._id.gender[0] ? 'Female' : 'Male',\n\t\t\t//OnlineTime:onlineArr.toString(),\n\t\t}) \n    });\n\tconsole.log(this.useractivity);\n\n    if (reportArr.length) {\n      this.excelService.exportAsExcelFile(reportArr, 'sample');\n    } else {\n\t\tthis.toastr.info('No data available to export');\n    }\n  }\n  \n  \n  /* exportAsXLSXReports(): void {\n\t\tconst reportArr = [\n\t\t\t\t\t\t\t[\"S.No.\", \"Name\",\"Email\", \"Age\",\"Gender\",\"Date\"]\n\t\t\t\t\t\t  ];\n\t\tif(this.useractivity && this.useractivity.length){\n\t\t\tlet i=1;\n\t\t\t\n\t\t\t this.useractivity.forEach(element => {\n\t\t\t\t console.log(element);\n\t\t\t\treportArr.push([\n\t\t\t\t\ti++,\n\t\t\t\t\telement._id.name[0],\n\t\t\t\t\telement._id.email[0],\n\t\t\t\t\telement._id.age[0],\n\t\t\t\t\telement._id.gender[0] ? 'Female' : 'Male'\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t])\n\t\t\t});\t \n\t\t}\n\t\tif (reportArr.length) {\n\t\t\tthis.excelService.exportAsExcelFileAsWorkbook(reportArr, 'sample');\n\t\t} else {\n\t\t \tthis.toastr.info('No data available to export');\n\n\t\t} \n  } */\n}\n","module.exports = \".box-video {\\n    display: block;\\n    padding: 16px 48px 16px 28px;\\n    width: 100%\\n}\\n\\n.box-video__item {\\n    position: relative;\\n    display: flex;\\n    align-items: center;\\n    height: auto;\\n    padding: 16px 30px 16px 0\\n}\\n\\n.box-video__item:not(:last-child) {\\n    border-bottom: 1px solid rgba(29, 0, 51, .1)\\n}\\n\\n.box-video__thumb {\\n    display: inline-block;\\n    vertical-align: middle;\\n    width: 130px;\\n    height: 90px;\\n    margin: 0 15px;\\n    border-radius: 5px;\\n    background-repeat: no-repeat;\\n    background-position: center;\\n    background-size: cover\\n}\\n\\n.box-video__title {\\n    margin: 10px 0;\\n    font-family: Roboto, sans-serif;\\n    font-size: 15px;\\n    color: #1d0033\\n}\\n\\n.box-video__meta {\\n    display: flex;\\n    opacity: .5\\n}\\n\\n.error{\\n  color: red;\\n  padding-left:20%;\\n  }\\n\\n/*# sourceMappingURL=yt-video.min.css.map */\\n\\n\"","module.exports = \"<header class=\\\"admin-main-header\\\">\\n\\n\\n</header>\\n<div class=\\\"admin-main-content\\\">\\n    <a href=\\\"youtube-video.html\\\" class=\\\"page-title\\\">\\n        <span class=\\\"sh-icon fa fa-youtube-play\\\"></span> Youtube video</a>\\n\\n    <div class=\\\"admin-box-controls\\\">\\n        <div class=\\\"add-element\\\">\\n            <a class=\\\"add-element__link\\\" (click)=\\\"openModal()\\\">\\n                <i class=\\\"fa fa-plus-circle\\\"></i>\\n            </a>\\n        </div>\\n        <div class=\\\"clear-trash\\\">\\n            <a class=\\\"clear-trash-wrap\\\" (click)=\\\"deleteMultiple()\\\">\\n                <span class=\\\"clear-trash__icon fa fa-trash\\\"></span>\\n                <!-- <span class=\\\"clear-trash__count\\\">8</span> -->\\n            </a>\\n        </div>\\n    </div>\\n\\n\\n    <!-- <div class=\\\"admin-box\\\"> -->\\n    <div class=\\\"admin-box-item user-control\\\">\\n        <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table NoTopBorder custom-table\\\">\\n                        <tr>\\n                            <th align=\\\"center\\\">Select</th>\\n                            <th>Thumbnail</th>\\n                            <th>Title</th>\\n                            <th>Subtitle</th>\\n                            <th>Video ID</th>\\n                            <!-- <th>Category</th> -->\\n                            <th>Action</th>\\n                        </tr>\\n                        <tr *ngFor=\\\"let youtubeAr of youtubeArr;let i = index\\\">\\n                            <!-- <tr *ngFor=\\\"let youtubeAr of youtubeArr| paginate:{itemsPerPage: 5, currentPage:p} ;let i = index\\\"> -->\\n                            <td align=\\\"center\\\">\\n                                    <form [formGroup]=\\\"checkBoxForm\\\">\\n                                        <input type=\\\"checkbox\\\"\\n                                            (change)=\\\"onCheckboxChagen(youtubeAr._id, $event.target.checked)\\\">\\n                                    </form>\\n                            </td>\\n                            <td class=\\\"h3 box-video__title\\\">\\n                                <img src=\\\"{{youtubeAr.thumbnail_url}}\\\"\\n                                    onerror=\\\"this.onerror=null;this.src='../../../../../assets/img/image-not-found.jpg';\\\"\\n                                    class=\\\"rounded-circle thumb-lg img-thumbnail m-b-10\\\" alt=\\\"video-image\\\" height=\\\"60px\\\"\\n                                    width=\\\"60px\\\">\\n                            </td>\\n                            <td class=\\\"h3 box-video__title\\\">\\n                                {{youtubeAr.title}}\\n                            </td>\\n                            <td class=\\\"h3 box-video__title\\\">\\n                                {{youtubeAr.subtitle}}\\n                            </td>\\n                            <td class=\\\"h3 box-video__title\\\">\\n                                {{youtubeAr.videoId}}\\n                            </td>\\n                            <!-- <td class=\\\"h3 box-video__title\\\">\\n                                            {{youtubeAr.category}}\\n                                        </td> -->\\n                            <td>\\n                                <div class=\\\"dropdown options-dropdown\\\">\\n                                    <a class=\\\"dropdown-item view-item\\\" title=\\\"edit\\\"\\n                                        (click)=\\\"openEditModal(youtubeAr._id,youtubeAr.youtube_url,youtubeAr.title,youtubeAr.subtitle)\\\">\\n                                        <i class=\\\"fa fa-eye\\\"></i> </a>\\n                                    <a class=\\\"dropdown-item del-item\\\" title=\\\"delete\\\"\\n                                        (click)=\\\"deleteYouTubeInfo(youtubeAr._id)\\\">\\n                                        <i class=\\\"fa fa-trash-o\\\"></i> </a>\\n                                </div>\\n                            </td>\\n                        </tr>\\n                    </table>\\n                    <p-paginator [rows]=\\\"20\\\" [totalRecords]=\\\"15\\\"></p-paginator>\\n\\n            <!-- </div> -->\\n            <!-- <pagination-controls (pageChange)=\\\"p=$event\\\"class=\\\"pagination-item pagination-prev\\\" ></pagination-controls> -->\\n            <!-- <div class=\\\"admin-box\\\">\\n                <ul class=\\\"pagination\\\">\\n                    <li class=\\\"pagination-item pagination-prev\\\">\\n\\n                        <a href=\\\"\\\">\\n                            <span>1</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"pagination-item\\\">\\n                        <a href=\\\"\\\">\\n                            <span>2</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"pagination-item\\\">\\n                        <a href=\\\"\\\">\\n                            <span>3</span>\\n                        </a>\\n                    </li>\\n\\n                    <li class=\\\"pagination-item pagination-current\\\">\\n                        <a href=\\\"\\\">\\n                            <span>4</span>\\n                        </a>\\n                    </li>\\n\\n                    <li class=\\\"pagination-item\\\">\\n                        <a href=\\\"\\\">\\n                            <span>5</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"pagination-item\\\">\\n                        <a href=\\\"\\\">\\n                            <span>6</span>\\n                        </a>\\n                    </li>\\n\\n                </ul>\\n            </div> -->\\n        </div>\\n\\n\\n        <div class=\\\"modal\\\" id=\\\"myModal\\\">\\n            <div class=\\\"modal-box\\\">\\n                <button title=\\\"Close (Esc)\\\" class=\\\"modal-close\\\" (click)=\\\"closeModal()\\\">×</button>\\n                <form [formGroup]=\\\"addYoutubeForm\\\" novalidate (ngSubmit)=\\\"onAdd()\\\" class=\\\"form-default\\\">\\n                    <div class=\\\"modal-header__title\\\">\\n                        <span class=\\\"modal-header__icon\\\">\\n                            <i class=\\\"fa fa-plus-circle\\\"></i>\\n                        </span>\\n                        Add Youtube Links\\n                    </div>\\n                    <div class=\\\"modal-form-body\\\">\\n                        <label class=\\\"form__label\\\">\\n                            <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"youtube_url\\\"\\n                                placeholder=\\\"Enter the youtube video code...\\\" required>\\n                        </label>\\n                        <div *ngIf=\\\"addYoutubeForm.controls['youtube_url'].touched\\\">\\n                            <span *ngIf=\\\"addYoutubeForm.controls['youtube_url'].hasError('required')\\\" class=\\\"error\\\">\\n                                youtube_url is required\\n                            </span>\\n                        </div>\\n                        <label class=\\\"form__label\\\">\\n                            <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"title\\\"\\n                                placeholder=\\\"Enter the title...\\\" required>\\n                        </label>\\n                        <div *ngIf=\\\"addYoutubeForm.controls['title'].touched\\\">\\n                            <span *ngIf=\\\"addYoutubeForm.controls['title'].hasError('required')\\\" class=\\\"error\\\">\\n                                title is required\\n                            </span>\\n                        </div>\\n\\n                        <label class=\\\"form__label\\\">\\n                            <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"subtitle\\\"\\n                                placeholder=\\\"Enter the sub-title...\\\" required>\\n                        </label>\\n                        <div *ngIf=\\\"addYoutubeForm.controls['subtitle'].touched\\\">\\n                            <span *ngIf=\\\"addYoutubeForm.controls['subtitle'].hasError('required')\\\" class=\\\"error\\\">\\n                                subtitle is required\\n                            </span>\\n                        </div>\\n                        <!-- <label class=\\\"form__label\\\">\\n                    <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"category\\\" placeholder=\\\"Enter the Category...\\\" required>\\n                </label>\\n\\n                <div *ngIf=\\\"addYoutubeForm.controls['category'].touched\\\">\\n                    <span *ngIf=\\\"addYoutubeForm.controls['category'].hasError('required')\\\" class=\\\"error\\\">  \\n                        category is required\\n                      </span>\\n                    </div> -->\\n                        <div class=\\\"btn-group btn-group--c\\\">\\n                            <button type=\\\"submit\\\" [disabled]='!addYoutubeForm.valid'\\n                                class=\\\"btn btn--orange\\\">submit</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n\\n        </div>\\n\\n\\n        <div class=\\\"modal\\\" id=\\\"myModalEdit\\\">\\n            <div class=\\\"modal-box\\\">\\n                <button title=\\\"Close (Esc)\\\" class=\\\"modal-close\\\" (click)=\\\"closeEditModal()\\\">×</button>\\n                <form [formGroup]=\\\"editYoutubeForm\\\" novalidate (ngSubmit)=\\\"onEdit()\\\" class=\\\"form-default\\\">\\n                    <div class=\\\"modal-header__title\\\">\\n                        <span class=\\\"modal-header__icon\\\">\\n                            <i class=\\\"fa fa-plus-circle\\\"></i>\\n                        </span>\\n                        Edit Youtube Links\\n                    </div>\\n                    <div class=\\\"modal-form-body\\\">\\n                        <label class=\\\"form__label\\\">\\n                            <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"yId\\\"\\n                                placeholder=\\\"Enter the youtube video code...\\\" style=\\\"display: none;\\\">\\n                        </label>\\n\\n                        <div *ngIf=\\\"editYoutubeForm.controls['yId'].touched\\\">\\n                            <span *ngIf=\\\"editYoutubeForm.controls['yId'].hasError('required')\\\" class=\\\"error\\\">\\n                                id is required\\n                            </span>\\n                        </div>\\n                        <label class=\\\"form__label\\\">\\n                            <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"youtube_url\\\"\\n                                placeholder=\\\"Enter the youtube video code...\\\" required>\\n                        </label>\\n\\n                        <div *ngIf=\\\"editYoutubeForm.controls['youtube_url'].touched\\\">\\n                            <span *ngIf=\\\"editYoutubeForm.controls['youtube_url'].hasError('required')\\\" class=\\\"error\\\">\\n                                url is required\\n                            </span>\\n                        </div>\\n                        <label class=\\\"form__label\\\">\\n                            <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"title\\\"\\n                                placeholder=\\\"Enter the title...\\\" required>\\n                        </label>\\n\\n                        <div *ngIf=\\\"editYoutubeForm.controls['title'].touched\\\">\\n                            <span *ngIf=\\\"editYoutubeForm.controls['title'].hasError('required')\\\" class=\\\"error\\\">\\n                                title is required\\n                            </span>\\n                        </div>\\n                        <label class=\\\"form__label\\\">\\n                            <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"subtitle\\\"\\n                                placeholder=\\\"Enter the sub-title...\\\" required>\\n                        </label>\\n\\n                        <div *ngIf=\\\"editYoutubeForm.controls['subtitle'].touched\\\">\\n                            <span *ngIf=\\\"editYoutubeForm.controls['subtitle'].hasError('required')\\\" class=\\\"error\\\">\\n                                subtitle is required\\n                            </span>\\n                        </div>\\n                        <!-- <label class=\\\"form__label\\\">\\n                    <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"category\\\" placeholder=\\\"Enter the Category...\\\" required>\\n                </label>\\n\\n                <div *ngIf=\\\"editYoutubeForm.controls['category'].touched\\\">\\n                    <span *ngIf=\\\"editYoutubeForm.controls['category'].hasError('required')\\\" class=\\\"error\\\">  \\n                        category is required\\n                      </span>\\n                    </div> -->\\n                        <div class=\\\"btn-group btn-group--c\\\">\\n                            <button type=\\\"submit\\\" [disabled]='!editYoutubeForm.valid'\\n                                class=\\\"btn btn--orange\\\">submit</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../admin.service';\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { NotificationService } from '../../../../shared/service/notifiation.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-list-youtubelink',\n  templateUrl: './list-youtubelink.component.html',\n  styleUrls: ['./list-youtubelink.component.css']\n})\nexport class ListYoutubelinkComponent implements OnInit {\n\t\n  checkBoxForm: FormGroup;\n\n  constructor(private adminService: AdminService,\n    private notification: NotificationService,\n    private fb: FormBuilder\n\n  ) { }\n  youtubeArr: any\n  addYoutubeForm: FormGroup\n  editYoutubeForm: FormGroup\n  ngOnInit() {\n\t  \n    this.checkBoxForm = this.fb.group({\n      yId: this.fb.array([])\n    });\n    this.addYoutubeForm = new FormGroup({\n      youtube_url: new FormControl('', [\n        Validators.required,\n      ]),\n      title: new FormControl('', [\n        Validators.required,\n      ]),\n      subtitle: new FormControl('', [\n        Validators.required,\n      ]),\n      // category: new FormControl('', [\n      //   Validators.required,\n      // ])\n    });\n    this.editYoutubeForm = new FormGroup({\n      yId: new FormControl(''),\n      youtube_url: new FormControl('', [\n        Validators.required,\n      ]),\n      title: new FormControl('', [\n        Validators.required,\n      ]),\n      subtitle: new FormControl('', [\n        Validators.required,\n      ]),\n      // category: new FormControl('', [\n      //   Validators.required,\n      // ])\n    });\n    this.listYouTubeInfo()\n  }\n\n  listYouTubeInfo() {\n    this.adminService.listYoutubeLink().subscribe(res => {\n      console.log('response', res);\n      if (res.code == 200) {\n        this.youtubeArr = res.data;\n      }\n    });\n  }\n\n  delete(id) {\n    this.notification.confirm('You want to delete?').then(data => {\n      if (data.value) {\n        this.adminService.deleteYoutubeLink(id).subscribe(res => {\n          if (res.code == 200) {\n            this.listYouTubeInfo();\n          } else {\n            this.listYouTubeInfo();\n          }\n        },\n          error => {\n            return console.log('There was an error: ', error);\n          });\n      } else {\n        this.listYouTubeInfo();\n      }\n    });\n\n  }\n\n  openModal() {\n    console.log('test test');\n    document.getElementById('myModal').style.display = 'block';\n  }\n\n  closeModal() {\n    document.getElementById('myModal').style.display = 'none';\n\n  }\n\n  onAdd() {\n    if (this.addYoutubeForm.valid) {\n      this.adminService.addYouTubeLink(this.addYoutubeForm.value).subscribe(res => {\n        console.log('response', res);\n        if (res.code == 200) {\n          this.notification.successToast(res.message);\n          document.getElementById('myModal').style.display = 'none';\n          this.listYouTubeInfo();\n        } else {\n          this.notification.infoToast('Something went wrong');\n        }\n      })\n    } else {\n      this.notification.infoToast('Invalid');\n\n    }\n  }\n  deleteYouTubeInfo(id) {\n    this.notification.confirm('You want to delete?').then(data => {\n      if (data.value) {\n        this.adminService.deleteYoutubeLink(id).subscribe(res => {\n          if (res.code == 200) {\n            this.notification.successToast(res.message)\n            this.listYouTubeInfo();\n\n          } else {\n            this.listYouTubeInfo();\n          }\n        });\n\n      } else {\n        this.listYouTubeInfo();\n      }\n    });\n  }\n\n  onCheckboxChagen(id: string, isChecked: boolean) {\n      console.log(isChecked, 'isChecked')\n    const youtubeIDFormArray = <FormArray>this.checkBoxForm.controls.yId;\n\n      if(isChecked) {\n        youtubeIDFormArray.push(new FormControl(id));\n\n      } else {\n        let index = youtubeIDFormArray.controls.findIndex(x => x.value == id)\n      youtubeIDFormArray.removeAt(index);\n      }\n    console.log('youtubeee', this.checkBoxForm.value)\n    }\n\n\n  deleteMultiple() {\n      if(this.checkBoxForm.value.yId.length == 0) {\n      this.notification.infoToast('Please select items from the list')\n    } else {\n      console.log(this.checkBoxForm.value)\n      // this.notification.successToast('Items selected')\n      this.notification.confirm('You want to delete?').then(data => {\n        console.log('dataaaaa', data)\n        if (data.value) {\n          this.adminService.deleteMultipleYoutubeLinks(this.checkBoxForm.value).subscribe(res => {\n            if (res.code == 200) {\n              this.notification.successToast(res.message)\n              this.listYouTubeInfo()\n            } else {\n              this.notification.successToast('Something went wrong!!!!!!!!')\n              this.listYouTubeInfo()\n\n            }\n          })\n        } else {\n          this.notification.infoToast('Cancelled')\n        }\n      })\n\n\n    }\n  }\n  closeEditModal() {\n    document.getElementById('myModalEdit').style.display = 'none'\n\n  }\n  openEditModal(id, videoId, title, subtitle) {\n    document.getElementById('myModalEdit').style.display = 'block'\n    this.editYoutubeForm.setValue({ 'yId': id, 'youtube_url': videoId, 'title': title, 'subtitle': subtitle })\n  }\n\n  onEdit() {\n    console.log('this.edittt', this.editYoutubeForm.value)\n    if (this.editYoutubeForm.valid) {\n      this.adminService.editYoutubeLink(this.editYoutubeForm.value).subscribe(res => {\n        if (res.code == 200) {\n          this.listYouTubeInfo()\n          this.editYoutubeForm.reset()\n          this.closeEditModal()\n          this.notification.successToast(res.message)\n        } else {\n          this.notification.infoToast(res.message)\n          this.closeEditModal()\n\n        }\n      })\n    } else {\n      this.notification.errorToast('Invalid')\n      this.closeEditModal()\n\n    }\n\n\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddYoutubelinkComponent } from './add-youtubelink/add-youtubelink.component';\nimport { ListYoutubelinkComponent } from './list-youtubelink/list-youtubelink.component';\nimport { EditYoutubelinkComponent } from './edit-youtubelink/edit-youtubelink.component';\n\nconst routes: Routes = [\n  {\n    path: 'add-youtube',\n    component: AddYoutubelinkComponent\n  },\n  {\n    path: 'list-youtube',\n    component: ListYoutubelinkComponent\n  },\n  {\n    path: 'daily-logs',\n    component: EditYoutubelinkComponent\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManageYoutubelinkRoutingModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageYoutubelinkRoutingModule } from './manage-youtubelink-routing.module';\nimport { AddYoutubelinkComponent } from './add-youtubelink/add-youtubelink.component';\nimport { ListYoutubelinkComponent } from './list-youtubelink/list-youtubelink.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditYoutubelinkComponent } from './edit-youtubelink/edit-youtubelink.component';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport { NotificationService } from '../../../shared/service/notifiation.service';\nimport { SharedModule } from '../../../shared/shared.module';\n// import { NgxPaginationModule } from 'ngx-pagination';\nimport {PaginatorModule} from 'primeng/paginator';\n@NgModule({\n  declarations: [AddYoutubelinkComponent, ListYoutubelinkComponent, EditYoutubelinkComponent],\n  imports: [\n    CommonModule,\n    ManageYoutubelinkRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    CheckboxModule,\n    SharedModule,\n    PaginatorModule\n    // NgxPaginationModule\n  ],\n  providers: [NotificationService],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n\n})\nexport class ManageYoutubelinkModule { }\n"],"sourceRoot":""}