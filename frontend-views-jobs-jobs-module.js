(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["frontend-views-jobs-jobs-module"],{

/***/ "./node_modules/angular-datatables/index.js":
/*!**************************************************!*\
  !*** ./node_modules/angular-datatables/index.js ***!
  \**************************************************/
/*! exports provided: DataTableDirective, DataTablesModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_angular_datatables_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/angular-datatables.directive */ "./node_modules/angular-datatables/src/angular-datatables.directive.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataTableDirective", function() { return _src_angular_datatables_directive__WEBPACK_IMPORTED_MODULE_0__["DataTableDirective"]; });

/* harmony import */ var _src_angular_datatables_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/angular-datatables.module */ "./node_modules/angular-datatables/src/angular-datatables.module.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataTablesModule", function() { return _src_angular_datatables_module__WEBPACK_IMPORTED_MODULE_1__["DataTablesModule"]; });

/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE
 */
/**
 * @module
 * @description
 * Entry point from which you should import all public library APIs.
 */


//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/angular-datatables/src/angular-datatables.directive.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/angular-datatables/src/angular-datatables.directive.js ***!
  \*****************************************************************************/
/*! exports provided: DataTableDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataTableDirective", function() { return DataTableDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE
 */
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var DataTableDirective = /** @class */ (function () {
    function DataTableDirective(el) {
        this.el = el;
        /**
         * The DataTable option you pass to configure your table.
         */
        this.dtOptions = {};
    }
    DataTableDirective.prototype.ngOnInit = function () {
        var _this = this;
        if (this.dtTrigger) {
            this.dtTrigger.subscribe(function () {
                _this.displayTable();
            });
        }
        else {
            this.displayTable();
        }
    };
    DataTableDirective.prototype.ngOnDestroy = function () {
        if (this.dtTrigger) {
            this.dtTrigger.unsubscribe();
        }
        if (this.dt) {
            this.dt.destroy(true);
        }
    };
    DataTableDirective.prototype.displayTable = function () {
        var _this = this;
        this.dtInstance = new Promise(function (resolve, reject) {
            Promise.resolve(_this.dtOptions).then(function (dtOptions) {
                // Using setTimeout as a "hack" to be "part" of NgZone
                setTimeout(function () {
                    _this.dt = $(_this.el.nativeElement).DataTable(dtOptions);
                    resolve(_this.dt);
                });
            });
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], DataTableDirective.prototype, "dtOptions", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"])
    ], DataTableDirective.prototype, "dtTrigger", void 0);
    DataTableDirective = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
            selector: '[datatable]'
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], DataTableDirective);
    return DataTableDirective;
}());

//# sourceMappingURL=angular-datatables.directive.js.map

/***/ }),

/***/ "./node_modules/angular-datatables/src/angular-datatables.module.js":
/*!**************************************************************************!*\
  !*** ./node_modules/angular-datatables/src/angular-datatables.module.js ***!
  \**************************************************************************/
/*! exports provided: DataTablesModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataTablesModule", function() { return DataTablesModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_datatables_directive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./angular-datatables.directive */ "./node_modules/angular-datatables/src/angular-datatables.directive.js");
/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE
 */
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var DataTablesModule = /** @class */ (function () {
    function DataTablesModule() {
    }
    DataTablesModule_1 = DataTablesModule;
    DataTablesModule.forRoot = function () {
        return {
            ngModule: DataTablesModule_1
        };
    };
    var DataTablesModule_1;
    DataTablesModule = DataTablesModule_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
            declarations: [_angular_datatables_directive__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"]],
            exports: [_angular_datatables_directive__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"]]
        })
    ], DataTablesModule);
    return DataTablesModule;
}());

//# sourceMappingURL=angular-datatables.module.js.map

/***/ }),

/***/ "./src/app/frontend/views/jobs/jobs-routing.module.ts":
/*!************************************************************!*\
  !*** ./src/app/frontend/views/jobs/jobs-routing.module.ts ***!
  \************************************************************/
/*! exports provided: JobsRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JobsRoutingModule", function() { return JobsRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _services_auth_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/auth.guard */ "./src/app/services/auth.guard.ts");
/* harmony import */ var _users_createjob_createjob_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./users/createjob/createjob.component */ "./src/app/frontend/views/jobs/users/createjob/createjob.component.ts");
/* harmony import */ var _users_editjob_editjob_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./users/editjob/editjob.component */ "./src/app/frontend/views/jobs/users/editjob/editjob.component.ts");
/* harmony import */ var _users_completejob_completejob_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./users/completejob/completejob.component */ "./src/app/frontend/views/jobs/users/completejob/completejob.component.ts");
/* harmony import */ var _users_joblisting_joblisting_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./users/joblisting/joblisting.component */ "./src/app/frontend/views/jobs/users/joblisting/joblisting.component.ts");
/* harmony import */ var _users_jobdetails_jobdetails_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./users/jobdetails/jobdetails.component */ "./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.ts");
/* harmony import */ var _users_userscompletedjobs_userscompletedjobs_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./users/userscompletedjobs/userscompletedjobs.component */ "./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.ts");
/* harmony import */ var _users_inprogressjobs_inprogressjobs_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./users/inprogressjobs/inprogressjobs.component */ "./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.ts");
/* harmony import */ var _users_editfeedback_editfeedback_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./users/editfeedback/editfeedback.component */ "./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.ts");
/* harmony import */ var _partners_makebid_makebid_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./partners/makebid/makebid.component */ "./src/app/frontend/views/jobs/partners/makebid/makebid.component.ts");
/* harmony import */ var _partners_viewbid_viewbid_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./partners/viewbid/viewbid.component */ "./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.ts");
/* harmony import */ var _partners_joblistingpartner_joblistingpartner_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./partners/joblistingpartner/joblistingpartner.component */ "./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.ts");
/* harmony import */ var _partners_jobdetailspartner_jobdetailspartner_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./partners/jobdetailspartner/jobdetailspartner.component */ "./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.ts");
/* harmony import */ var _partners_wonbids_wonbids_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./partners/wonbids/wonbids.component */ "./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.ts");
/* harmony import */ var _partners_lostbids_lostbids_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./partners/lostbids/lostbids.component */ "./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.ts");
/* harmony import */ var _partners_completedjobs_completedjobs_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./partners/completedjobs/completedjobs.component */ "./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.ts");
/* harmony import */ var _partners_openbids_openbids_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./partners/openbids/openbids.component */ "./src/app/frontend/views/jobs/partners/openbids/openbids.component.ts");












//job components for partner 








var routes = [
    {
        path: '',
        data: {
            title: 'Users'
        },
        children: [
            { path: 'create-job', component: _users_createjob_createjob_component__WEBPACK_IMPORTED_MODULE_4__["CreateJobComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'edit-job/:jobid', component: _users_editjob_editjob_component__WEBPACK_IMPORTED_MODULE_5__["EditJobComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'make-bid/:jobid', component: _partners_makebid_makebid_component__WEBPACK_IMPORTED_MODULE_12__["MakeBidComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'complete-job/:jobid/:partnerid', component: _users_completejob_completejob_component__WEBPACK_IMPORTED_MODULE_6__["CompleteJobComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'view-bid/:jobid', component: _partners_viewbid_viewbid_component__WEBPACK_IMPORTED_MODULE_13__["ViewBidomponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'detail-job/:jobid', component: _users_jobdetails_jobdetails_component__WEBPACK_IMPORTED_MODULE_8__["DetailsJobComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'view-job/:jobid', component: _partners_jobdetailspartner_jobdetailspartner_component__WEBPACK_IMPORTED_MODULE_15__["DetailsJobPartnerComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'jobs', component: _users_joblisting_joblisting_component__WEBPACK_IMPORTED_MODULE_7__["ListingJobComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'alljobs', component: _partners_joblistingpartner_joblistingpartner_component__WEBPACK_IMPORTED_MODULE_14__["ListingPartnersJobComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'won-bids', component: _partners_wonbids_wonbids_component__WEBPACK_IMPORTED_MODULE_16__["WonBidsComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'lost-bids', component: _partners_lostbids_lostbids_component__WEBPACK_IMPORTED_MODULE_17__["LostBidsComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'completed-jobs', component: _partners_completedjobs_completedjobs_component__WEBPACK_IMPORTED_MODULE_18__["CompletedJobsComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'user-completed-jobs', component: _users_userscompletedjobs_userscompletedjobs_component__WEBPACK_IMPORTED_MODULE_9__["UsersCompletedJobsComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'user-in-progress-jobs', component: _users_inprogressjobs_inprogressjobs_component__WEBPACK_IMPORTED_MODULE_10__["UsersInProgressJobsComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'open-bids', component: _partners_openbids_openbids_component__WEBPACK_IMPORTED_MODULE_19__["OpenBidsComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
            { path: 'edit-feedback/:reviewid', component: _users_editfeedback_editfeedback_component__WEBPACK_IMPORTED_MODULE_11__["EditFeedbackComponent"], canActivate: [_services_auth_guard__WEBPACK_IMPORTED_MODULE_3__["AuthGuard"]] },
        ]
    }
];
var JobsRoutingModule = /** @class */ (function () {
    function JobsRoutingModule() {
    }
    JobsRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
        })
    ], JobsRoutingModule);
    return JobsRoutingModule;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/jobs.module.ts":
/*!****************************************************!*\
  !*** ./src/app/frontend/views/jobs/jobs.module.ts ***!
  \****************************************************/
/*! exports provided: JobsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JobsModule", function() { return JobsModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _users_createjob_createjob_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./users/createjob/createjob.component */ "./src/app/frontend/views/jobs/users/createjob/createjob.component.ts");
/* harmony import */ var _users_editjob_editjob_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./users/editjob/editjob.component */ "./src/app/frontend/views/jobs/users/editjob/editjob.component.ts");
/* harmony import */ var _users_completejob_completejob_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./users/completejob/completejob.component */ "./src/app/frontend/views/jobs/users/completejob/completejob.component.ts");
/* harmony import */ var _users_joblisting_joblisting_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./users/joblisting/joblisting.component */ "./src/app/frontend/views/jobs/users/joblisting/joblisting.component.ts");
/* harmony import */ var _users_jobdetails_jobdetails_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./users/jobdetails/jobdetails.component */ "./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.ts");
/* harmony import */ var _users_userscompletedjobs_userscompletedjobs_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./users/userscompletedjobs/userscompletedjobs.component */ "./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.ts");
/* harmony import */ var _users_inprogressjobs_inprogressjobs_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./users/inprogressjobs/inprogressjobs.component */ "./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.ts");
/* harmony import */ var _users_editfeedback_editfeedback_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./users/editfeedback/editfeedback.component */ "./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.ts");
/* harmony import */ var _partners_makebid_makebid_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./partners/makebid/makebid.component */ "./src/app/frontend/views/jobs/partners/makebid/makebid.component.ts");
/* harmony import */ var _partners_viewbid_viewbid_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./partners/viewbid/viewbid.component */ "./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.ts");
/* harmony import */ var _partners_joblistingpartner_joblistingpartner_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./partners/joblistingpartner/joblistingpartner.component */ "./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.ts");
/* harmony import */ var _partners_jobdetailspartner_jobdetailspartner_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./partners/jobdetailspartner/jobdetailspartner.component */ "./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.ts");
/* harmony import */ var _partners_wonbids_wonbids_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./partners/wonbids/wonbids.component */ "./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.ts");
/* harmony import */ var _partners_lostbids_lostbids_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./partners/lostbids/lostbids.component */ "./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.ts");
/* harmony import */ var _partners_completedjobs_completedjobs_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./partners/completedjobs/completedjobs.component */ "./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.ts");
/* harmony import */ var _partners_openbids_openbids_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./partners/openbids/openbids.component */ "./src/app/frontend/views/jobs/partners/openbids/openbids.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ngx-bootstrap/dropdown */ "./node_modules/ngx-bootstrap/dropdown/fesm5/ngx-bootstrap-dropdown.js");
/* harmony import */ var _jobs_routing_module__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./jobs-routing.module */ "./src/app/frontend/views/jobs/jobs-routing.module.ts");

// Angular
















//job components for partner 










// Dropdowns Component

// Components Routing

var JobsModule = /** @class */ (function () {
    function JobsModule() {
    }
    JobsModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
                _jobs_routing_module__WEBPACK_IMPORTED_MODULE_24__["JobsRoutingModule"],
                ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_23__["BsDropdownModule"].forRoot(),
                angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__["FlashMessagesModule"].forRoot(),
                angular_datatables__WEBPACK_IMPORTED_MODULE_4__["DataTablesModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatAutocompleteModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatButtonModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatButtonToggleModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatCardModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatCheckboxModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatChipsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatDatepickerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatDialogModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatDividerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatExpansionModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatGridListModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatIconModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatInputModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatListModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatMenuModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatNativeDateModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatPaginatorModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatProgressBarModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatProgressSpinnerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatRadioModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatRippleModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatSelectModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatSidenavModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatSliderModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatSlideToggleModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatSnackBarModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatSortModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatStepperModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatTableModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatTabsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatToolbarModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_22__["MatTooltipModule"],
            ],
            declarations: [
                _users_createjob_createjob_component__WEBPACK_IMPORTED_MODULE_6__["CreateJobComponent"],
                _users_editjob_editjob_component__WEBPACK_IMPORTED_MODULE_7__["EditJobComponent"],
                _partners_makebid_makebid_component__WEBPACK_IMPORTED_MODULE_14__["MakeBidComponent"],
                _partners_viewbid_viewbid_component__WEBPACK_IMPORTED_MODULE_15__["ViewBidomponent"],
                _users_completejob_completejob_component__WEBPACK_IMPORTED_MODULE_8__["CompleteJobComponent"],
                _users_joblisting_joblisting_component__WEBPACK_IMPORTED_MODULE_9__["ListingJobComponent"],
                _partners_joblistingpartner_joblistingpartner_component__WEBPACK_IMPORTED_MODULE_16__["ListingPartnersJobComponent"],
                _users_joblisting_joblisting_component__WEBPACK_IMPORTED_MODULE_9__["DialogOverviewExampleDialog"],
                _users_jobdetails_jobdetails_component__WEBPACK_IMPORTED_MODULE_10__["HireDeclineDialog"],
                _users_userscompletedjobs_userscompletedjobs_component__WEBPACK_IMPORTED_MODULE_11__["DialogOverviewFeedback"],
                _partners_completedjobs_completedjobs_component__WEBPACK_IMPORTED_MODULE_20__["DialogOverviewFeedbackPartner"],
                _users_jobdetails_jobdetails_component__WEBPACK_IMPORTED_MODULE_10__["DetailsJobComponent"],
                _partners_jobdetailspartner_jobdetailspartner_component__WEBPACK_IMPORTED_MODULE_17__["DetailsJobPartnerComponent"],
                _partners_wonbids_wonbids_component__WEBPACK_IMPORTED_MODULE_18__["WonBidsComponent"],
                _partners_lostbids_lostbids_component__WEBPACK_IMPORTED_MODULE_19__["LostBidsComponent"],
                _partners_completedjobs_completedjobs_component__WEBPACK_IMPORTED_MODULE_20__["CompletedJobsComponent"],
                _users_userscompletedjobs_userscompletedjobs_component__WEBPACK_IMPORTED_MODULE_11__["UsersCompletedJobsComponent"],
                _users_inprogressjobs_inprogressjobs_component__WEBPACK_IMPORTED_MODULE_12__["UsersInProgressJobsComponent"],
                _partners_openbids_openbids_component__WEBPACK_IMPORTED_MODULE_21__["OpenBidsComponent"],
                _users_editfeedback_editfeedback_component__WEBPACK_IMPORTED_MODULE_13__["EditFeedbackComponent"],
            ],
            entryComponents: [_users_joblisting_joblisting_component__WEBPACK_IMPORTED_MODULE_9__["DialogOverviewExampleDialog"], _users_userscompletedjobs_userscompletedjobs_component__WEBPACK_IMPORTED_MODULE_11__["DialogOverviewFeedback"], _partners_completedjobs_completedjobs_component__WEBPACK_IMPORTED_MODULE_20__["DialogOverviewFeedbackPartner"], _users_jobdetails_jobdetails_component__WEBPACK_IMPORTED_MODULE_10__["HireDeclineDialog"]],
        })
    ], JobsModule);
    return JobsModule;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.css":
/*!****************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.css ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".action a{margin-right:7px}\r\n.joblisting-panel .content-left .time_ago{font-size:12px;}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9jb21wbGV0ZWRqb2JzL2NvbXBsZXRlZGpvYnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLGdCQUFnQjtBQUMxQiwwQ0FBMEMsY0FBYyxDQUFDIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9jb21wbGV0ZWRqb2JzL2NvbXBsZXRlZGpvYnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24gYXttYXJnaW4tcmlnaHQ6N3B4fVxyXG4uam9ibGlzdGluZy1wYW5lbCAuY29udGVudC1sZWZ0IC50aW1lX2Fnb3tmb250LXNpemU6MTJweDt9Il19 */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.html":
/*!*****************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\r\n\t\t\t<h3 class=\"mb-4\">Completed Estimates</h3>\r\n\r\n\t\t\t<div class=\"table-responsive\">\r\n\t\t\t\t<table class=\"table table-striped text-center\">\r\n\t\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Job ID</th>\r\n\t\t\t\t\t\t\t<th>Request Date</th>\r\n\t\t\t\t\t\t\t<th>Completed Date</th>\r\n\t\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody *ngIf=\"allJobs && allJobs.length > 0\">\r\n\t\t\t\t\t   <tr *ngFor=\"let jobs of allJobs\">\r\n\t\t\t\t\t\t\t<td><a class=\"job_id\" href=\"#/\">{{jobs.jobId}}</a></td>\r\n\t\t\t\t\t\t\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>{{jobs.completedAt | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\" routerLink=\"/view-job/{{jobs._id}}\">View Job</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\" (click)=\"openDialog(jobs._id)\" href=\"javascript:void(0)\">Feedback</a>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<tbody *ngIf=\"!allJobs || allJobs.length == 0\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colspan=\"4\">\r\n\t\t\t\t\t\t\t\t<h3>Sorry! You did not completed any estimate.</h3>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t</div>\r\n</div> "

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.ts ***!
  \***************************************************************************************/
/*! exports provided: CompletedJobsComponent, DialogOverviewFeedbackPartner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompletedJobsComponent", function() { return CompletedJobsComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogOverviewFeedbackPartner", function() { return DialogOverviewFeedbackPartner; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");





//import { PasswordValidator } from '../../../validator/password.validator';



var CompletedJobsComponent = /** @class */ (function () {
    function CompletedJobsComponent(_flashMessagesService, userservice, jobservice, fb, dialog, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.dialog = dialog;
        this.titleService = titleService;
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.isValid = false;
        this.name = '';
        this.animal = '';
        this.jobidisset = '';
        this.message = '';
        this.getAllJobs();
        this.titleService.setTitle('Completed Jobs | MoveLaunch');
    }
    CompletedJobsComponent.prototype.openDialog = function (jobId) {
        var _this = this;
        var dialogRef = this.dialog.open(DialogOverviewFeedbackPartner, {
            width: '450px',
            data: { jobID: jobId }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            if (result == 'Success') {
                _this._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success', timeout: 6000 });
            }
        });
    };
    CompletedJobsComponent.prototype.getAllJobs = function () {
        var _this = this;
        this.jobservice.getFilteredJobsForPartner(1, 2).subscribe(function (result) {
            if (result.success) {
                _this.isValid = true;
                var d = new Date();
                var month = '' + (d.getMonth() + 1);
                var day = '' + d.getDate();
                var year = d.getFullYear();
                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;
                var mindateset = [year, month, day].join('-');
                _this.allJobs = result.jobs;
                _this.allJobs.forEach(function (x, key) {
                    _this.jobservice.getBidsOnJob(x._id).subscribe(function (result1) {
                        if (result1.success) {
                            _this.allJobs[key].jobStatus = 'applied';
                        }
                        else {
                            _this.allJobs[key].jobStatus = 'Notapplied';
                        }
                    });
                });
                $.each(result.jobs, function (index, value) {
                    /* var d1 = new Date(value.jobEnd);
                    var month1 = '' + (d1.getMonth() + 1);
                    var day1 = '' + d1.getDate();
                    var year1 = d1.getFullYear();
                    if (month1.length < 2) month1 = '0' + month1;
                    if (day1.length < 2) day1 = '0' + day1;
                    var mindateset1 = [year1, month1, day1].join('-');
                    if(mindateset1 < mindateset){
                        result.jobs[index].jobStatus =  'Closed';
                    }else{
                        result.jobs[index].jobStatus =  'Active';
                    } */
                });
                /* this.allJobs = result.jobs;
                console.log(this.allJobs);   */
            }
            else {
                _this.isValid = true;
                //this._flashMessagesService.show("No job founds", { cssClass: 'alert-danger',timeout:6000});
            }
        });
    };
    CompletedJobsComponent.prototype.getBidsOnJob = function () {
        console.log('dgdf');
        /* this.jobservice.getBidsOnJob(value_id).subscribe(result1 =>
        {
            console.log(result1);
        }); */
    };
    CompletedJobsComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.isValid = false;
    };
    CompletedJobsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./completedjobs.component.html */ "./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.html"),
            styles: [__webpack_require__(/*! ./completedjobs.component.css */ "./src/app/frontend/views/jobs/partners/completedjobs/completedjobs.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__["FlashMessagesService"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_3__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], CompletedJobsComponent);
    return CompletedJobsComponent;
}());

var DialogOverviewFeedbackPartner = /** @class */ (function () {
    function DialogOverviewFeedbackPartner(dialogRef, data, userservice, jobservice, fb) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.jobID = '';
        this.reviews = '';
        this.width = '';
        this.jobID = data.jobID;
        this.getFeedback(this.jobID);
    }
    DialogOverviewFeedbackPartner.prototype.getFeedback = function (jobID) {
        var _this = this;
        this.jobservice.getJobFeedbackForPartner(jobID).subscribe(function (result) {
            _this.reviews = result.review;
            _this.width = result.review.rating * 20;
        });
    };
    DialogOverviewFeedbackPartner = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'dialog-overview-example-dialog',
            template: __webpack_require__(/*! ./dialog-overview-example-dialog.html */ "./src/app/frontend/views/jobs/partners/completedjobs/dialog-overview-example-dialog.html"),
            styles: [__webpack_require__(/*! ./dialog-overview-example-dialog.css */ "./src/app/frontend/views/jobs/partners/completedjobs/dialog-overview-example-dialog.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_6__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogRef"], Object, _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_3__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]])
    ], DialogOverviewFeedbackPartner);
    return DialogOverviewFeedbackPartner;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/completedjobs/dialog-overview-example-dialog.css":
/*!***********************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/completedjobs/dialog-overview-example-dialog.css ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-container{\r\n\tpadding:35px !important;\r\n}\r\n.mat-raised-button.mat-primary{\r\n\tbackground-color:#1695C2;\r\n}\r\n.mat-dialog-actions{padding:25px 0;}\r\n.desc{\r\n\tline-height:18px;\r\n\tfont-size:14px;\r\n\tpadding:15px 18px;\r\n}\r\n.desc label{font-weight:bold}\r\n.rating {\r\n    float:left;\r\n}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  float: left;\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9jb21wbGV0ZWRqb2JzL2RpYWxvZy1vdmVydmlldy1leGFtcGxlLWRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyx1QkFBdUI7QUFDeEI7QUFDQTtDQUNDLHdCQUF3QjtBQUN6QjtBQUVBLG9CQUFvQixjQUFjLENBQUM7QUFHbkM7Q0FDQyxnQkFBZ0I7Q0FDaEIsY0FBYztDQUNkLGlCQUFpQjtBQUNsQjtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCO0lBQ0ksVUFBVTtBQUNkO0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFNBQVM7SUFDVCxhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFDZixVQUFVO0FBQ2Q7QUFFQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCO0FBR0E7OztJQUdJLGNBQWM7QUFDbEI7QUFHQTtFQUNFLG9HQUFvRztFQUNwRyxZQUFZO0VBQ1osWUFBWTtFQUNaLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0VBQ1gsY0FBYztBQUNoQjtBQUdBO0lBQ0ksb0dBQW9HO0lBQ3BHLDJCQUEyQjtJQUMzQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7RUFDZiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvcGFydG5lcnMvY29tcGxldGVkam9icy9kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS1kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGFpbmVye1xyXG5cdHBhZGRpbmc6MzVweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeXtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiMxNjk1QzI7XHJcbn1cclxuXHJcbi5tYXQtZGlhbG9nLWFjdGlvbnN7cGFkZGluZzoyNXB4IDA7fVxyXG5cclxuXHJcbi5kZXNje1xyXG5cdGxpbmUtaGVpZ2h0OjE4cHg7XHJcblx0Zm9udC1zaXplOjE0cHg7XHJcblx0cGFkZGluZzoxNXB4IDE4cHg7XHJcbn1cclxuLmRlc2MgbGFiZWx7Zm9udC13ZWlnaHQ6Ym9sZH1cclxuLnJhdGluZyB7XHJcbiAgICBmbG9hdDpsZWZ0O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBpbnB1dCB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDotOTk5OXB4O1xyXG4gICAgY2xpcDpyZWN0KDAsMCwwLDApO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICAgIHdpZHRoOjFlbTtcclxuICAgIHBhZGRpbmc6MC4xZW07XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZToxMDAlO1xyXG4gICAgbGluZS1oZWlnaHQ6MS4yO1xyXG4gICAgY29sb3I6I2RkZDtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6ICfimIUgJztcclxufVxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICMxNjkxYmU7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyIH4gbGFiZWwsXHJcbi5yYXRpbmcgPiBsYWJlbDpob3ZlciB+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlIHtcclxuICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgZm9udC1zaXplOiAwO1xyXG4gIGhlaWdodDogMjFweDtcclxuICBsaW5lLWhlaWdodDogMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtaW5kZW50OiAtOTk5ZW07XHJcbiAgd2lkdGg6IDExMHB4O1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUtcmF0aW5ne1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBoZWlnaHQ6IDIxcHg7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gIH0iXX0= */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/completedjobs/dialog-overview-example-dialog.html":
/*!************************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/completedjobs/dialog-overview-example-dialog.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n\t<h3 class=\"col-md-12\">User Rating and Feedback</h3>\r\n\t<div class=\" col-md-12\">\r\n\t\t<div class=\"star-ratings-sprite\"><span [style.width.%]=\"width\" class=\"star-ratings-sprite-rating\"></span></div>\r\n\t</div>\r\n\t<div class=\"desc col-md-12\">\r\n\t\t<label>Comments</label> : {{reviews.feedback}}\r\n\t</div>\r\n</div>"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.css":
/*!************************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.css ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".hire-panel .info .rate span{font-size:14px;font-weight:500}\r\n.hire-panel .info .completedjob {\r\n\tcolor: #1691be;\r\n\tfont-weight: 700;\r\n\tfont-size: 14px;\r\n\tdisplay: inline-flex;\r\n}\r\np.data_row{ margin-bottom:0}\r\n.rating {\r\n    float:left;\r\n}\r\n.job_status{\r\n    float: right;\r\n    color: green;\r\n    font-weight: bold;\r\n}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  float: left;\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\r\nspan.itemcount{width:25px; float:right}\r\n.border-class{\r\n\tborder-bottom: 1px dashed #ccc;\r\n    width: 97%;\r\n    margin: 15px auto;\r\n}\r\n.desc .loc_lable{    width: 100px;\r\n    position: relative;\r\n    display: inline-block;\r\n\ttext-align: right;\r\n\tfont-weight:600;\r\n\tfont-size:14px\r\n}\r\n.desc .loc_lable::after{content:\":\"}\r\n.job-info{\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n}\r\n.items-moved .job-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.joblisting-panel .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.job-info .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.items-moved.joblisting-panel .title {\r\n\tcolor:#303030;\r\n    font-weight: 900;  \r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9qb2JkZXRhaWxzcGFydG5lci9qb2JkZXRhaWxzcGFydG5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZCQUE2QixjQUFjLENBQUMsZUFBZTtBQUMzRDtDQUNDLGNBQWM7Q0FDZCxnQkFBZ0I7Q0FDaEIsZUFBZTtDQUNmLG9CQUFvQjtBQUNyQjtBQUNBLFlBQVksZUFBZTtBQUUzQjtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmO0FBQ0EsZUFBZSxVQUFVLENBQUMsZUFBZSxDQUFDLGVBQWU7QUFDM0QsZUFBZSxVQUFVLEVBQUUsV0FBVztBQUV0QztDQUNDLDhCQUE4QjtJQUMzQixVQUFVO0lBQ1YsaUJBQWlCO0FBQ3JCO0FBRUEscUJBQXFCLFlBQVk7SUFDN0Isa0JBQWtCO0lBQ2xCLHFCQUFxQjtDQUN4QixpQkFBaUI7Q0FDakIsZUFBZTtDQUNmO0FBQ0Q7QUFDQSx3QkFBd0IsV0FBVztBQUVuQztJQUNJLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7QUFDQTtJQUdJLGFBQWE7SUFFVCxlQUFlO0FBQ3ZCO0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7QUFDQTtDQUNDLGFBQWE7SUFDVixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3BhcnRuZXJzL2pvYmRldGFpbHNwYXJ0bmVyL2pvYmRldGFpbHNwYXJ0bmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlyZS1wYW5lbCAuaW5mbyAucmF0ZSBzcGFue2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH1cclxuLmhpcmUtcGFuZWwgLmluZm8gLmNvbXBsZXRlZGpvYiB7XHJcblx0Y29sb3I6ICMxNjkxYmU7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn1cclxucC5kYXRhX3Jvd3sgbWFyZ2luLWJvdHRvbTowfVxyXG5cclxuLnJhdGluZyB7XHJcbiAgICBmbG9hdDpsZWZ0O1xyXG59XHJcbi5qb2Jfc3RhdHVze1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OjEuMjtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlciB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjMTY5MWJlO1xyXG59XHJcblxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlcixcclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlciB+IGxhYmVsLFxyXG4ucmF0aW5nID4gbGFiZWw6aG92ZXIgfiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDIxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9XHJcbiAgc3Bhbi5pdGVtbmFtZXsgd2lkdGg6MjBweDtmb250LXdlaWdodDo2MDA7Zm9udC1zaXplOjE0cHggfVxyXG5zcGFuLml0ZW1jb3VudHt3aWR0aDoyNXB4OyBmbG9hdDpyaWdodH1cclxuXHJcbi5ib3JkZXItY2xhc3N7XHJcblx0Ym9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjY2NjO1xyXG4gICAgd2lkdGg6IDk3JTtcclxuICAgIG1hcmdpbjogMTVweCBhdXRvO1xyXG59XHJcbiAgXHJcbi5kZXNjIC5sb2NfbGFibGV7ICAgIHdpZHRoOiAxMDBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRmb250LXdlaWdodDo2MDA7XHJcblx0Zm9udC1zaXplOjE0cHhcclxufVxyXG4uZGVzYyAubG9jX2xhYmxlOjphZnRlcntjb250ZW50OlwiOlwifVxyXG5cclxuLmpvYi1pbmZve1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuLml0ZW1zLW1vdmVkIC5qb2ItaW5mbyB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG59IFxyXG5cclxuLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5qb2ItaW5mbyAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLml0ZW1zLW1vdmVkLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuXHRjb2xvcjojMzAzMDMwO1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDsgIFxyXG59Il19 */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.html":
/*!*************************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\t\t<h3 class=\"mb-4\">Job Details</h3>\r\n\r\n\r\n\r\n\t\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"movingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"tc-wrap\">\r\n\t\t\t\t\tSelected Moving Data\r\n\t\t\t\t\t<span class=\"job_status\" *ngIf=\"jobData.jobStatus == 2\">Completed</span> \r\n\t\t\t\t\t<span class=\"job_status\" *ngIf=\"jobData.jobStatus == 1\">In Progress</span>\r\n\t\t\t\t\t<span class=\"job_status\" *ngIf=\"jobData.jobStatus == 0 && bidStatus != 2\">Open</span>\r\n\t\t\t\t\t<span class=\"job_status\" *ngIf=\"jobData.jobStatus == 0 && bidStatus == 2\">Declined</span>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"movingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"movingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of movingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"movingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingto of movingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingto.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t \r\n<div class=\"container title-icon-bar items-moved\" *ngIf=\"movingData\">\r\n\t<div class=\"col-md-12\">\t\r\n\t\r\n\t\t<div class=\"\" > \r\n\t\t\t\r\n\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\tItems to be Moved\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.appliances  && movingData.appliances.length > 0\">\r\n\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of movingData.appliances\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.appliances_misc\">{{ movingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.appliances_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.appliances_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.appliances && movingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.bedRooms  && movingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of movingData.bedRooms\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.bedrooms_misc\">{{ movingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.bedRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.bedRooms_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.bedRooms && movingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.livingRooms && movingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of movingData.livingRooms\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.livingRooms_misc\">{{ movingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.livingRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.livingRooms_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.livingRooms && movingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.familyRooms && movingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of movingData.familyRooms\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.familyRooms_misc\">{{ movingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.familyRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.familyRooms_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.familyRooms && movingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.diningRooms  && movingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of movingData.diningRooms\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.diningRooms_misc\">{{ movingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.diningRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.diningRooms_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.diningRooms && movingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.kitchen && movingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of movingData.kitchen\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.kitchen_misc\">{{ movingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.kitchen_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.kitchen_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.kitchen && movingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.basement && movingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of movingData.basement\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.basement_misc\">{{ movingData.basement_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.basement_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.basement_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.basement && movingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.garage  && movingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of movingData.garage\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.garage_misc\">{{ movingData.garage_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.garage_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.garage_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.garage && movingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.patioYard  && movingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of movingData.patioYard\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.patioYard_misc\">{{ movingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.patioYard_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.patioYard_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.patioYard && movingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"packingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t<div class=\"tc-wrap\">Selected Packing Data</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"packingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"packingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of packingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"packingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingto of packingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingto.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t\r\n\t<div class=\"container title-icon-bar items-moved\" *ngIf=\"packingData\">\r\n\t\t<div class=\"col-md-12\">\t\r\n\t\t\r\n\t\t\t<div class=\"\" > \r\n\t\t\t\t\r\n\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\tItems to be Packed\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.appliances  && packingData.appliances.length > 0\">\r\n\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of packingData.appliances\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.appliances_misc\">{{ packingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.appliances && packingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.bedRooms  && packingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of packingData.bedRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.bedrooms_misc\">{{ packingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.bedRooms && packingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.livingRooms && packingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of packingData.livingRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.livingRooms_misc\">{{ packingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.livingRooms && packingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.familyRooms && packingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of packingData.familyRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.familyRooms_misc\">{{ packingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.familyRooms && packingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.diningRooms  && packingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of packingData.diningRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.diningRooms_misc\">{{ packingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.diningRooms && packingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.kitchen && packingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of packingData.kitchen\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.kitchen_misc\">{{ packingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.kitchen && packingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.basement && packingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of packingData.basement\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.basement_misc\">{{ packingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.basement && packingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.garage  && packingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of packingData.garage\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.garage_misc\">{{ packingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.garage && packingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.patioYard  && packingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of packingData.patioYard\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.patioYard_misc\">{{ packingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.patioYard && packingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t<div class=\"container title-icon-bar\"  *ngIf=\"unpackingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t<div class=\"tc-wrap\">Selected Unpacking Data</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"unpackingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"unpackingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of unpackingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"unpackingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unpackingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingto.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t<div class=\"container title-icon-bar items-moved\" *ngIf=\"unpackingData\">\r\n\t\t<div class=\"col-md-12\">\t\r\n\t\t\r\n\t\t\t<div class=\"\" > \r\n\t\t\t\t\r\n\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\tItems to be Unpacked\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.appliances  && unpackingData.appliances.length > 0\">\r\n\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of unpackingData.appliances\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.appliances_misc\">{{ unpackingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.appliances && unpackingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.bedRooms  && unpackingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of unpackingData.bedRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.bedrooms_misc\">{{ unpackingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.bedRooms && unpackingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.livingRooms && unpackingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of unpackingData.livingRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.livingRooms_misc\">{{ unpackingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.livingRooms && unpackingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.familyRooms && unpackingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of unpackingData.familyRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.familyRooms_misc\">{{ unpackingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.familyRooms && unpackingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.diningRooms  && unpackingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of unpackingData.diningRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.diningRooms_misc\">{{ unpackingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.diningRooms && unpackingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.kitchen && unpackingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of unpackingData.kitchen\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.kitchen_misc\">{{ unpackingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.kitchen && unpackingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.basement && unpackingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of unpackingData.basement\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.basement_misc\">{{ unpackingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.basement && unpackingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.garage  && unpackingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of unpackingData.garage\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.garage_misc\">{{ unpackingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.garage && unpackingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.patioYard  && unpackingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of unpackingData.patioYard\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.patioYard_misc\">{{ unpackingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.patioYard && unpackingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t<div class=\"container title-icon-bar\"  *ngIf=\"loadingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t<div class=\"tc-wrap\">Selected Loading Data</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"loadingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-12\" *ngIf=\"loadingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of loadingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t<div class=\"container title-icon-bar items-moved\" *ngIf=\"loadingData\">\r\n\t\t<div class=\"col-md-12\">\t\r\n\t\t\r\n\t\t\t<div class=\"\" > \r\n\t\t\t\t\r\n\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\tItems to be Loaded\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.appliances  && loadingData.appliances.length > 0\">\r\n\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of loadingData.appliances\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.appliances_misc\">{{ loadingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.appliances && loadingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.bedRooms  && loadingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of loadingData.bedRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.bedrooms_misc\">{{ loadingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.bedRooms && loadingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.livingRooms && loadingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of loadingData.livingRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.livingRooms_misc\">{{ loadingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.livingRooms && loadingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.familyRooms && loadingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of loadingData.familyRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.familyRooms_misc\">{{ loadingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.familyRooms && loadingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.diningRooms  && loadingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of loadingData.diningRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.diningRooms_misc\">{{ loadingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.diningRooms && loadingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.kitchen && loadingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of loadingData.kitchen\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.kitchen_misc\">{{ loadingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.kitchen && loadingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.basement && loadingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of loadingData.basement\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.basement_misc\">{{ loadingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.basement && loadingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.garage  && loadingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of loadingData.garage\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.garage_misc\">{{ loadingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.garage && loadingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.patioYard  && loadingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of loadingData.patioYard\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.patioYard_misc\">{{ loadingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.patioYard && loadingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\r\n\t\r\n\t\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"unloadingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t<div class=\"tc-wrap\">Selected Unloading Data</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"unloadingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"col-md-12\" *ngIf=\"unloadingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unloadingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingto.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t<div class=\"container title-icon-bar items-moved\" *ngIf=\"unloadingData\">\r\n\t\t<div class=\"col-md-12\">\t\r\n\t\t\r\n\t\t\t<div class=\"\" > \r\n\t\t\t\t\r\n\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\tItems to be Unloaded\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.appliances  && unloadingData.appliances.length > 0\">\r\n\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of unloadingData.appliances\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.appliances_misc\">{{ unloadingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.appliances && unloadingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.bedRooms  && unloadingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of unloadingData.bedRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.bedrooms_misc\">{{ unloadingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.bedRooms && unloadingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.livingRooms && unloadingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of unloadingData.livingRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.livingRooms_misc\">{{ unloadingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.livingRooms && unloadingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.familyRooms && unloadingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of unloadingData.familyRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.familyRooms_misc\">{{ unloadingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.familyRooms && unloadingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.diningRooms  && unloadingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of unloadingData.diningRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.diningRooms_misc\">{{ unloadingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.diningRooms && unloadingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.kitchen && unloadingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of unloadingData.kitchen\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.kitchen_misc\">{{ unloadingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.kitchen && unloadingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.basement && unloadingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of unloadingData.basement\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.basement_misc\">{{ unloadingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.basement && unloadingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.garage  && unloadingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of unloadingData.garage\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.garage_misc\">{{ unloadingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.garage && unloadingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.patioYard  && unloadingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of unloadingData.patioYard\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.patioYard_misc\">{{ unloadingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.patioYard && unloadingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t<div class=\" col-12 text-center\" *ngIf=\"showButton\">\r\n\t\t\t\r\n\t\t\t<button *ngIf=\"bidStatus == 0\" routerLink=\"/view-bid/{{jobData._id}}\" class=\"btn btn-lg btn-primary mt-3 mb-5\" type=\"button\">Update Bid Now</button>\r\n\t\t</div>\r\n\t\t<div class=\" col-12 text-center\"  *ngIf=\"!showButton\">\r\n\t\t\t<button *ngIf=\"!bidStatus\" routerLink=\"/make-bid/{{jobData._id}}\" class=\"btn btn-lg btn-primary mt-3 mb-5\" type=\"button\">Bid Now</button>\r\n\t\t</div>\r\n\t<div class=\"container hire-panel-wrap\" style=\"display:none\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\" > \r\n\t\t\t\t<div class=\"hire-panel\" *ngFor=\"let list of userslist\">\r\n\t\t\t\t\t<div class=\"img\"><img src=\"../../../assets/images/johan.png\"></div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<div class=\"name\">{{list.firstname}} {{list.lasttname}}</div>\r\n\t\t\t\t\t\t<div class=\"sub-label\">USA Movers & Packers</div>\r\n\t\t\t\t\t\t<p>Provide Services More then Your Expectation. Provide Services More then Your Expectation.Provide Services More then Your Expectation.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"info\">\r\n\t\t\t\t\t\t<div class=\"rate\">\r\n\t\t\t\t\t\t\t<div class=\"star-ratings-sprite\"><span [style.width.%]=\"list.width\" class=\"star-ratings-sprite-rating\"></span></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"completedjob\">\r\n\t\t\t\t\t\t\t{{list.totalCompletedJob}} jobs completed\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"action\">\r\n\t\t\t\t\t\t\t<a href=\"#\"><i class=\"fas fa-check\"></i>Hire Now</a><a href=\"#\"><i class=\"fas fa-times\"></i>Decline</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div> \r\n</div> \r\n</div> \r\n</div> \r\n "

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: DetailsJobPartnerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetailsJobPartnerComponent", function() { return DetailsJobPartnerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");






//import { PasswordValidator } from '../../../validator/password.validator';


var DetailsJobPartnerComponent = /** @class */ (function () {
    function DetailsJobPartnerComponent(_flashMessagesService, route, router, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.route = route;
        this.router = router;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.ratingClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.allUsers = "";
        this.jobservices = "";
        this.allservice = "";
        this.jobid = '';
        this.appliances = '';
        this.basements = '';
        this.diningrooms = '';
        this.bedrooms = '';
        this.familyrooms = '';
        this.garages = '';
        this.kitchens = '';
        this.livingrooms = '';
        this.patioyards = '';
        this.userslist = '';
        this.jobData = '';
        this.thisisdone = "";
        this.alllocations = "";
        this.states = '';
        this.counties = '';
        this.cities = '';
        this.allappliances = '';
        this.show_dialog = false;
        this.button_text = '';
        this.bidStatus = '';
        this.movingData = '';
        this.packingData = '';
        this.unpackingData = '';
        this.loadingData = '';
        this.unloadingData = '';
        this.showButton = false;
        this.titleService.setTitle('Jobs For Partner | MoveLaunch');
        this.getSavedJob();
        this.getbidsOnJob();
    }
    DetailsJobPartnerComponent.prototype.getSavedJob = function () {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        localStorage.setItem('jobType', 'saved');
        this.jobid = this.route.snapshot.paramMap.get('jobid');
        this.jobservice.getEditJob(this.jobid).subscribe(function (result) {
            /* this.createFromLocationForm(); */
            if (result.success) {
                //this.jobData = result.job;
                //	this.jobData.servicename = this.jobData.serviceId.name;
                _this.jobData = result.job;
                //console.log(this.jobData);
                if (result.job.moving && result.job.moving.length > 0) {
                    _this.movingData = result.job.moving[0];
                }
                //console.log(this.movingData);
                if (result.job.packing && result.job.packing.length > 0) {
                    _this.packingData = result.job.packing[0];
                }
                if (result.job.unpacking && result.job.unpacking.length > 0) {
                    _this.unpackingData = result.job.unpacking[0];
                }
                if (result.job.loading && result.job.loading.length > 0) {
                    _this.loadingData = result.job.loading[0];
                }
                if (result.job.unloading && result.job.unloading.length > 0) {
                    _this.unloadingData = result.job.unloading[0];
                }
                /* 	this.movingData = result.job.moving[0];
                    this.packingData = result.job.packing[0];
                    this.unpackingData = result.job.unpacking[0];
                    this.loadingData = result.job.loading[0];
                    this.unloadingData = result.job.unloading[0]; */
            }
            else {
                _this._flashMessagesService.show("No Saved Job Found.", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    DetailsJobPartnerComponent.prototype.getbidsOnJob = function () {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        this.jobid = this.route.snapshot.paramMap.get('jobid');
        this.jobservice.getJobBids(this.jobid).subscribe(function (result1) {
            if (result1.success) {
                _this.showButton = true;
                _this.allUsers = result1.users;
                _this.allUsers.forEach(function (x, key) {
                    console.log(x._id);
                    console.log(user_id);
                    if (x._id == user_id) {
                        _this.bidStatus = x.bidStatus;
                        console.log(_this.bidStatus);
                        console.log(_this.showButton);
                    }
                });
            }
        });
    };
    DetailsJobPartnerComponent.prototype.deleteJob = function (jobID) {
        var _this = this;
        this.jobservice.deleteJob(jobID).subscribe(function (result) {
            if (result.success) {
                _this._flashMessagesService.show("job has been deleted successfully", { cssClass: 'alert-success', timeout: 6000 });
            }
            else {
                _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    DetailsJobPartnerComponent.prototype.toggle = function () {
        this.show_dialog = !this.show_dialog;
        this.button_text = this.show_dialog ? 'View Less' : 'View More';
    };
    DetailsJobPartnerComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.button_text = 'View More';
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], DetailsJobPartnerComponent.prototype, "rating", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], DetailsJobPartnerComponent.prototype, "itemId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])
    ], DetailsJobPartnerComponent.prototype, "ratingClick", void 0);
    DetailsJobPartnerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./jobdetailspartner.component.html */ "./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.html"),
            styles: [__webpack_require__(/*! ./jobdetailspartner.component.css */ "./src/app/frontend/views/jobs/partners/jobdetailspartner/jobdetailspartner.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__["FlashMessagesService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_5__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], DetailsJobPartnerComponent);
    return DetailsJobPartnerComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.css":
/*!************************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.css ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".action a{margin-right:7px}\r\n.joblisting-panel .content-left .time_ago{font-size:12px;}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9qb2JsaXN0aW5ncGFydG5lci9qb2JsaXN0aW5ncGFydG5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsZ0JBQWdCO0FBQzFCLDBDQUEwQyxjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3BhcnRuZXJzL2pvYmxpc3RpbmdwYXJ0bmVyL2pvYmxpc3RpbmdwYXJ0bmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uIGF7bWFyZ2luLXJpZ2h0OjdweH1cclxuLmpvYmxpc3RpbmctcGFuZWwgLmNvbnRlbnQtbGVmdCAudGltZV9hZ297Zm9udC1zaXplOjEycHg7fSJdfQ== */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.html":
/*!*************************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\r\n\t\t\t<h3 class=\"mb-4\">Open estimates</h3>\r\n\r\n\t\t\t<div class=\"table-responsive\">\r\n\t\t\t\t<table class=\"table table-striped text-center\">\r\n\t\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Job ID</th>\r\n\t\t\t\t\t\t\t<th>Request Date</th>\r\n\t\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody *ngIf=\"allJobs && allJobs.length > 0\">\r\n\t\t\t\t\t   <tr *ngFor=\"let jobs of allJobs\">\r\n\t\t\t\t\t\t\t<td><a class=\"job_id\" routerLink=\"/view-job/{{jobs._id}}\">{{jobs.jobId}}</a></td>\r\n\t\t\t\t\t\t\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\" routerLink=\"/view-job/{{jobs._id}}\">View</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  *ngIf=\"jobs.jobStatus == 'Notapplied'\" routerLink=\"/make-bid/{{jobs._id}}\">Bid Now</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  *ngIf=\"jobs.jobStatus == 'applied'\" routerLink=\"/view-bid/{{jobs._id}}\">View Bid</a></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t</div>\r\n</div> "

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: ListingPartnersJobComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListingPartnersJobComponent", function() { return ListingPartnersJobComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");





//import { PasswordValidator } from '../../../validator/password.validator';


var ListingPartnersJobComponent = /** @class */ (function () {
    function ListingPartnersJobComponent(_flashMessagesService, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.isValid = false;
        this.name = '';
        this.animal = '';
        this.jobidisset = '';
        this.message = '';
        this.titleService.setTitle('Jobs | MoveLaunch');
        this.getAllJobs();
    }
    ListingPartnersJobComponent.prototype.getAllJobs = function () {
        var _this = this;
        this.jobservice.getAllJobsForPartner().subscribe(function (result) {
            if (result.success) {
                _this.isValid = true;
                var d = new Date();
                var month = '' + (d.getMonth() + 1);
                var day = '' + d.getDate();
                var year = d.getFullYear();
                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;
                var mindateset = [year, month, day].join('-');
                _this.allJobs = result.jobs;
                console.log(_this.allJobs);
                _this.allJobs.forEach(function (x, key) {
                    _this.jobservice.getBidsOnJob(x._id).subscribe(function (result1) {
                        if (result1.success) {
                            _this.allJobs[key].jobStatus = 'applied';
                        }
                        else {
                            _this.allJobs[key].jobStatus = 'Notapplied';
                        }
                    });
                });
                /* this.allJobs = result.jobs;*/
            }
            else {
                _this.isValid = true;
                //this._flashMessagesService.show("No job founds", { cssClass: 'alert-danger',timeout:6000});
            }
        });
    };
    ListingPartnersJobComponent.prototype.getBidsOnJob = function () {
        console.log('dgdf');
        /* this.jobservice.getBidsOnJob(value_id).subscribe(result1 =>
        {
            console.log(result1);
        }); */
    };
    ListingPartnersJobComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.isValid = false;
    };
    ListingPartnersJobComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./joblistingpartner.component.html */ "./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.html"),
            styles: [__webpack_require__(/*! ./joblistingpartner.component.css */ "./src/app/frontend/views/jobs/partners/joblistingpartner/joblistingpartner.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__["FlashMessagesService"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_4__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["Title"]])
    ], ListingPartnersJobComponent);
    return ListingPartnersJobComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".action a{margin-right:7px}\r\n.joblisting-panel .content-left .time_ago{font-size:12px;}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9sb3N0Ymlkcy9sb3N0Ymlkcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsZ0JBQWdCO0FBQzFCLDBDQUEwQyxjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3BhcnRuZXJzL2xvc3RiaWRzL2xvc3RiaWRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uIGF7bWFyZ2luLXJpZ2h0OjdweH1cclxuLmpvYmxpc3RpbmctcGFuZWwgLmNvbnRlbnQtbGVmdCAudGltZV9hZ297Zm9udC1zaXplOjEycHg7fSJdfQ== */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.html":
/*!*******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\r\n\t\t\t<h3 class=\"mb-4\">Lost Estimates</h3>\r\n\r\n\t\t\t<div class=\"table-responsive\">\r\n\t\t\t\t<table class=\"table table-striped text-center\">\r\n\t\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Job ID</th>\r\n\t\t\t\t\t\t\t<th>Request Date</th>\r\n\t\t\t\t\t\t\t<th>Respond Date</th>\r\n\t\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody *ngIf=\"allJobs && allJobs.length > 0\">\r\n\t\t\t\t\t   <tr *ngFor=\"let jobs of allJobs\">\r\n\t\t\t\t\t\t\t<td><a class=\"job_id\" href=\"#/\">{{jobs.jobId}}</a></td>\r\n\t\t\t\t\t\t\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>{{jobs.bidsOn | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  routerLink=\"/view-job/{{jobs._id}}\">View</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  *ngIf=\"jobs.jobStatus == 'Notapplied'\" routerLink=\"/make-bid/{{jobs._id}}\">Bid Now</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  *ngIf=\"jobs.jobStatus == 'applied'\" routerLink=\"/view-bid/{{jobs._id}}\">View Bid</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  routerLink=\"/user-info/{{jobs.userId._id}}/{{jobs._id}}\">View Info</a>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<tbody *ngIf=\"!allJobs || allJobs.length == 0\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colspan=\"4\">\r\n\t\t\t\t\t\t\t\t<h3>Great! You did not have any lost bid.</h3>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t</div>\r\n</div> "

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.ts ***!
  \*****************************************************************************/
/*! exports provided: LostBidsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LostBidsComponent", function() { return LostBidsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");





//import { PasswordValidator } from '../../../validator/password.validator';


var LostBidsComponent = /** @class */ (function () {
    function LostBidsComponent(_flashMessagesService, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.isValid = false;
        this.name = '';
        this.animal = '';
        this.jobidisset = '';
        this.message = '';
        this.getAllJobs();
        this.titleService.setTitle('Lost Jobs | MoveLaunch');
    }
    LostBidsComponent.prototype.getAllJobs = function () {
        var _this = this;
        this.jobservice.getFilteredJobsForPartner(2, 0).subscribe(function (result) {
            if (result.success) {
                _this.isValid = true;
                var d = new Date();
                var month = '' + (d.getMonth() + 1);
                var day = '' + d.getDate();
                var year = d.getFullYear();
                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;
                var mindateset = [year, month, day].join('-');
                _this.allJobs = result.jobs;
                _this.allJobs.forEach(function (x, key) {
                    _this.jobservice.getBidsOnJob(x._id).subscribe(function (result1) {
                        if (result1.success) {
                            _this.allJobs[key].jobStatus = 'applied';
                            _this.allJobs[key].bidsOn = result1.data.hired_decline;
                        }
                        else {
                            _this.allJobs[key].jobStatus = 'Notapplied';
                            _this.allJobs[key].bidsOn = result1.data.hired_decline;
                        }
                    });
                });
                $.each(result.jobs, function (index, value) {
                    /* var d1 = new Date(value.jobEnd);
                    var month1 = '' + (d1.getMonth() + 1);
                    var day1 = '' + d1.getDate();
                    var year1 = d1.getFullYear();
                    if (month1.length < 2) month1 = '0' + month1;
                    if (day1.length < 2) day1 = '0' + day1;
                    var mindateset1 = [year1, month1, day1].join('-');
                    if(mindateset1 < mindateset){
                        result.jobs[index].jobStatus =  'Closed';
                    }else{
                        result.jobs[index].jobStatus =  'Active';
                    } */
                });
                /* this.allJobs = result.jobs;
                console.log(this.allJobs);   */
            }
            else {
                _this.isValid = true;
                //this._flashMessagesService.show("No job founds", { cssClass: 'alert-danger',timeout:6000});
            }
        });
    };
    LostBidsComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.isValid = false;
    };
    LostBidsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./lostbids.component.html */ "./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.html"),
            styles: [__webpack_require__(/*! ./lostbids.component.css */ "./src/app/frontend/views/jobs/partners/lostbids/lostbids.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__["FlashMessagesService"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_4__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["Title"]])
    ], LostBidsComponent);
    return LostBidsComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/makebid/makebid.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/makebid/makebid.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".hire-panel .info .rate span{font-size:14px;font-weight:500}\r\n.hire-panel .info .completedjob {\r\n\tcolor: #1691be;\r\n\tfont-weight: 700;\r\n\tfont-size: 14px;\r\n\tdisplay: inline-flex;\r\n}\r\n.rating {\r\n    float:left;\r\n}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  float: left;\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\n.desc .loc_lable{    width: 100px;\r\n    position: relative;\r\n    display: inline-block;\r\n\ttext-align: right;\r\n\tfont-weight:600;\r\n\tfont-size:14px\r\n}\r\n.desc .loc_lable::after{content:\":\"}\r\n.job-info{\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n}\r\n.items-moved .job-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.joblisting-panel .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.job-info .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.items-moved.joblisting-panel .title {\r\n\tcolor:#303030;\r\n    font-weight: 900;  \r\n}\r\n  \r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9tYWtlYmlkL21ha2ViaWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkIsY0FBYyxDQUFDLGVBQWU7QUFDM0Q7Q0FDQyxjQUFjO0NBQ2QsZ0JBQWdCO0NBQ2hCLGVBQWU7Q0FDZixvQkFBb0I7QUFDckI7QUFHQTtJQUNJLFVBQVU7QUFDZDtBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7QUFFQTtJQUNJLFdBQVc7SUFDWCxTQUFTO0lBQ1QsYUFBYTtJQUNiLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGNBQWM7SUFDZCxlQUFlO0lBQ2YsVUFBVTtBQUNkO0FBRUE7SUFDSSxhQUFhO0FBQ2pCO0FBRUE7SUFDSSxjQUFjO0FBQ2xCO0FBRUE7O0lBRUksY0FBYztBQUNsQjtBQUdBOzs7SUFHSSxjQUFjO0FBQ2xCO0FBR0E7RUFDRSxvR0FBb0c7RUFDcEcsWUFBWTtFQUNaLFlBQVk7RUFDWixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osV0FBVztFQUNYLGNBQWM7QUFDaEI7QUFHQTtJQUNJLG9HQUFvRztJQUNwRywyQkFBMkI7SUFDM0IsV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0VBQ2Y7QUFFQSxxQkFBcUIsWUFBWTtJQUMvQixrQkFBa0I7SUFDbEIscUJBQXFCO0NBQ3hCLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2Y7QUFDRDtBQUNBLHdCQUF3QixXQUFXO0FBRW5DO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2QjtBQUNBO0lBR0ksYUFBYTtJQUVULGVBQWU7QUFDdkI7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0NBQ0MsYUFBYTtJQUNWLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvcGFydG5lcnMvbWFrZWJpZC9tYWtlYmlkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlyZS1wYW5lbCAuaW5mbyAucmF0ZSBzcGFue2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH1cclxuLmhpcmUtcGFuZWwgLmluZm8gLmNvbXBsZXRlZGpvYiB7XHJcblx0Y29sb3I6ICMxNjkxYmU7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nIHtcclxuICAgIGZsb2F0OmxlZnQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGlucHV0IHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOi05OTk5cHg7XHJcbiAgICBjbGlwOnJlY3QoMCwwLDAsMCk7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsIHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6MWVtO1xyXG4gICAgcGFkZGluZzowLjFlbTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDoxLjI7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZS1yYXRpbmd7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5kZXNjIC5sb2NfbGFibGV7ICAgIHdpZHRoOiAxMDBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRmb250LXdlaWdodDo2MDA7XHJcblx0Zm9udC1zaXplOjE0cHhcclxufVxyXG4uZGVzYyAubG9jX2xhYmxlOjphZnRlcntjb250ZW50OlwiOlwifVxyXG5cclxuLmpvYi1pbmZve1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuLml0ZW1zLW1vdmVkIC5qb2ItaW5mbyB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG59IFxyXG5cclxuLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5qb2ItaW5mbyAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLml0ZW1zLW1vdmVkLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuXHRjb2xvcjojMzAzMDMwO1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDsgIFxyXG59XHJcbiAgXHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/makebid/makebid.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/makebid/makebid.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\r\n\t\t<h3 class=\"mb-4\">Job Details</h3>\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"movingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Moving</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of movingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.phone}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of movingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.phone}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"packingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Packing</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of packingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.phone}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of packingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.phone}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"unpackingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Unpacking</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of unpackingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.phone}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unpackingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.phone}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"loadingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Loading of Truck</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of loadingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.phone}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"unloadingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Unloading of Truck</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unloadingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.phone}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t<h3 class=\"mb-4\">Bid Details</h3>\r\n\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info signup-form\">\r\n\t\t\t\t\t\t<div class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<flash-messages></flash-messages>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form [formGroup]=\"angForm\"  class=\"esitame-form\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t<label>Bid Amount(USD)</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bidAmount\" placeholder=\"Bid Amount\" formControlName=\"bidAmount\" [ngClass]=\"{ 'is-invalid': submitted && f.bidAmount.errors}\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && f.bidAmount.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"f.bidAmount.errors.required\">Bid Amount is required</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t<label>Bid Proposal</label>\r\n\t\t\t\t\t\t\t\t<textarea class=\"form-control\" id=\"bidProposal\" placeholder=\"Bid Proposal\"  formControlName=\"bidProposal\" [ngClass]=\"{ 'is-invalid': submitted && f.bidProposal.errors }\"></textarea>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && f.bidProposal.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"f.bidProposal.errors.required\">Bid Proposal is required</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t<label>Attachment(if Any)</label><br>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t<input #imageInput type=\"file\" formControlName=\"imageInput\" (change)=\"processFile(imageInput)\" accept=\"file/pdf\">\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary\" type=\"submit\" (click)=\"onSubmit()\"  (ngSubmit)=\"onSubmit()\">Submit</button> \r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t</form>\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n "

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/makebid/makebid.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/makebid/makebid.component.ts ***!
  \***************************************************************************/
/*! exports provided: MakeBidComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MakeBidComponent", function() { return MakeBidComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");






//import { PasswordValidator } from '../../../validator/password.validator';


var ImageSnippet = /** @class */ (function () {
    function ImageSnippet(src, file) {
        this.src = src;
        this.file = file;
        this.pending = false;
        this.status = 'init';
    }
    return ImageSnippet;
}());
var MakeBidComponent = /** @class */ (function () {
    function MakeBidComponent(_flashMessagesService, route, router, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.route = route;
        this.router = router;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.ratingClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.jobid = '';
        this.appliances = '';
        this.basements = '';
        this.diningrooms = '';
        this.bedrooms = '';
        this.familyrooms = '';
        this.garages = '';
        this.kitchens = '';
        this.livingrooms = '';
        this.patioyards = '';
        this.userslist = '';
        this.jobData = '';
        this.thisisdone = "";
        this.alllocations = "";
        this.states = '';
        this.counties = '';
        this.cities = '';
        this.allappliances = '';
        this.totalbid = '';
        this.show_dialog = false;
        this.button_text = '';
        this.submitted = '';
        this.movingData = '';
        this.packingData = '';
        this.unpackingData = '';
        this.loadingData = '';
        this.unloadingData = '';
        this.makeBidForm();
        this.titleService.setTitle('Make a Bid | MoveLaunch');
    }
    MakeBidComponent.prototype.makeBidForm = function () {
        this.angForm = this.fb.group({
            // name: ['',  Validators.required ],
            bidAmount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            bidProposal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            imageInput: ['']
        });
    };
    MakeBidComponent.prototype.onSuccess = function () {
        this.selectedFile.pending = false;
        this.selectedFile.status = 'ok';
    };
    MakeBidComponent.prototype.onError = function () {
        this.selectedFile.pending = false;
        this.selectedFile.status = 'fail';
        this.selectedFile.src = '';
    };
    MakeBidComponent.prototype.processFile = function (imageInput) {
        var _this = this;
        var file = imageInput.files[0];
        var reader = new FileReader();
        reader.addEventListener('load', function (event) {
            _this.selectedFile = new ImageSnippet(event.target.result, file);
            _this.selectedFile.pending = true;
        });
        reader.readAsDataURL(file);
    };
    MakeBidComponent.prototype.getSavedJob = function () {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        localStorage.setItem('jobType', 'saved');
        this.jobid = this.route.snapshot.paramMap.get('jobid');
        this.jobservice.getEditJob(this.jobid).subscribe(function (result) {
            /* this.createFromLocationForm(); */
            if (result.success) {
                _this.jobData = result.job;
                //this.jobData.servicename = this.jobData.serviceId.name;
                if (result.job.moving && result.job.moving.length > 0) {
                    _this.movingData = result.job.moving[0];
                }
                console.log(_this.movingData);
                if (result.job.packing && result.job.packing.length > 0) {
                    _this.packingData = result.job.packing[0];
                }
                if (result.job.unpacking && result.job.unpacking.length > 0) {
                    _this.unpackingData = result.job.unpacking[0];
                }
                if (result.job.loading && result.job.loading.length > 0) {
                    _this.loadingData = result.job.loading[0];
                }
                if (result.job.unloading && result.job.unloading.length > 0) {
                    _this.unloadingData = result.job.unloading[0];
                }
                _this.userservice.getStates().subscribe(function (result) {
                    _this.states = result;
                });
                var currentState = _this.jobData.state;
                var currentCounty = _this.jobData.county;
                _this.userservice.getCounties(currentState).subscribe(function (result) {
                    _this.counties = result;
                });
                _this.userservice.getCities(currentCounty, currentState).subscribe(function (result) {
                    _this.cities = result;
                });
                //console.log(this.living);
            }
            else {
                _this._flashMessagesService.show("No Saved Job Found.", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
        /* this.jobservice.getJobBids(this.jobid).subscribe(result=>{
        
            
            $.each(result.users, function(index, value) {
                result.users[index].width = value.userRating*10;
            });
            this.userslist = result.users;
            console.log(this.userslist);
        }); */
    };
    Object.defineProperty(MakeBidComponent.prototype, "f", {
        get: function () { return this.angForm.controls; },
        enumerable: true,
        configurable: true
    });
    MakeBidComponent.prototype.onSubmit = function () {
        var _this = this;
        this.submitted = true;
        if (this.angForm.invalid) {
            return;
        }
        else {
            var bid_info = this.angForm.value;
            var _userid = localStorage.getItem('userid');
            var jobid = this.route.snapshot.paramMap.get('jobid');
            /* this.jobservice.addbid(bid_info,jobid,_userid).subscribe(result =>
            {
                 if(result.success){
                    this._flashMessagesService.show('Your bid has been placed successfully.', { cssClass: 'alert-success',timeout:5000});
                  }else{
                      this._flashMessagesService.show(result.message, { cssClass: 'alert-danger',timeout:5000});
                  }
               
            }); */
            if (this.selectedFile == undefined) {
                this.jobservice.addbid(bid_info, jobid, _userid).subscribe(function (result) {
                    if (result.success) {
                        _this.totalbid = localStorage.getItem('total_bid');
                        _this.totalbid = _this.totalbid - 1;
                        localStorage.setItem('total_bid', _this.totalbid);
                        _this._flashMessagesService.show('Your bid has been placed successfully.', { cssClass: 'alert-success', timeout: 2000 });
                        setTimeout(function () {
                            _this.router.navigate(['/open-bids']);
                        }, 2500);
                    }
                    else {
                        _this._flashMessagesService.show(result.message, { cssClass: 'alert-danger', timeout: 5000 });
                    }
                });
            }
            else {
                this.jobservice.addbidWithFile(bid_info, jobid, _userid, this.selectedFile.file).subscribe(function (result) {
                    if (result.success) {
                        _this.totalbid = localStorage.getItem('total_bid');
                        _this.totalbid = _this.totalbid - 1;
                        localStorage.setItem('total_bid', _this.totalbid);
                        _this._flashMessagesService.show('Your bid has been placed successfully.', { cssClass: 'alert-success', timeout: 2000 });
                        setTimeout(function () {
                            _this.router.navigate(['/open-bids']);
                        }, 2500);
                    }
                    else {
                        _this._flashMessagesService.show(result.message, { cssClass: 'alert-danger', timeout: 5000 });
                    }
                });
            }
        }
    };
    MakeBidComponent.prototype.deleteJob = function (jobID) {
        var _this = this;
        this.jobservice.deleteJob(jobID).subscribe(function (result) {
            if (result.success) {
                _this._flashMessagesService.show("job has been deleted successfully", { cssClass: 'alert-success', timeout: 6000 });
            }
            else {
                _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    MakeBidComponent.prototype.toggle = function () {
        this.show_dialog = !this.show_dialog;
        this.button_text = this.show_dialog ? 'View Less' : 'View More';
    };
    MakeBidComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.getSavedJob();
        this.button_text = 'View More';
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], MakeBidComponent.prototype, "rating", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], MakeBidComponent.prototype, "itemId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])
    ], MakeBidComponent.prototype, "ratingClick", void 0);
    MakeBidComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./makebid.component.html */ "./src/app/frontend/views/jobs/partners/makebid/makebid.component.html"),
            styles: [__webpack_require__(/*! ./makebid.component.css */ "./src/app/frontend/views/jobs/partners/makebid/makebid.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__["FlashMessagesService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_5__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], MakeBidComponent);
    return MakeBidComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/openbids/openbids.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/openbids/openbids.component.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".action a{margin-right:7px}\r\n.joblisting-panel .content-left .time_ago{font-size:12px;}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy9vcGVuYmlkcy9vcGVuYmlkcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsZ0JBQWdCO0FBQzFCLDBDQUEwQyxjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3BhcnRuZXJzL29wZW5iaWRzL29wZW5iaWRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uIGF7bWFyZ2luLXJpZ2h0OjdweH1cclxuLmpvYmxpc3RpbmctcGFuZWwgLmNvbnRlbnQtbGVmdCAudGltZV9hZ297Zm9udC1zaXplOjEycHg7fSJdfQ== */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/openbids/openbids.component.html":
/*!*******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/openbids/openbids.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\r\n\t\t\t<h3 class=\"mb-4\">Open Estimates</h3>\r\n\r\n\t\t\t<div class=\"table-responsive\">\r\n\t\t\t\t<table class=\"table table-striped text-center\">\r\n\t\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Job ID</th>\r\n\t\t\t\t\t\t\t<th>Request Date</th>\r\n\t\t\t\t\t\t\t<th>Respond Date</th>\r\n\t\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody *ngIf=\"allJobs && allJobs.length > 0\">\r\n\t\t\t\t\t   <tr *ngFor=\"let jobs of allJobs\">\r\n\t\t\t\t\t\t\t<td><a class=\"job_id\" routerLink=\"/view-job/{{jobs._id}}\">{{jobs.jobId}}</a></td>\r\n\t\t\t\t\t\t\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>{{jobs.bidsOn | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<!-- <a class=\"hire\"  routerLink=\"/view-job/{{jobs._id}}\">View</a> -->\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  *ngIf=\"jobs.jobStatus == 'Notapplied'\" routerLink=\"/make-bid/{{jobs._id}}\">Bid Now</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  *ngIf=\"jobs.jobStatus == 'applied'\" routerLink=\"/view-bid/{{jobs._id}}\">View Bid</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  routerLink=\"/user-info/{{jobs.userId._id}}/{{jobs._id}}\">View User Info</a>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<tbody *ngIf=\"!allJobs || allJobs.length == 0\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colspan=\"4\">\r\n\t\t\t\t\t\t\t\t<h3>Sorry! You did not have any open bid yet.</h3>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t</div>\r\n</div> "

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/openbids/openbids.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/openbids/openbids.component.ts ***!
  \*****************************************************************************/
/*! exports provided: OpenBidsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OpenBidsComponent", function() { return OpenBidsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");





//import { PasswordValidator } from '../../../validator/password.validator';


var OpenBidsComponent = /** @class */ (function () {
    function OpenBidsComponent(_flashMessagesService, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.isValid = false;
        this.name = '';
        this.animal = '';
        this.jobidisset = '';
        this.message = '';
        this.getAllJobs();
        this.titleService.setTitle('Open Jobs | MoveLaunch');
    }
    OpenBidsComponent.prototype.getAllJobs = function () {
        var _this = this;
        this.jobservice.getFilteredJobsForPartner(0, 0).subscribe(function (result) {
            console.log(result);
            if (result.success) {
                _this.isValid = true;
                var d = new Date();
                var month = '' + (d.getMonth() + 1);
                var day = '' + d.getDate();
                var year = d.getFullYear();
                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;
                var mindateset = [year, month, day].join('-');
                _this.allJobs = result.jobs;
                _this.allJobs.forEach(function (x, key) {
                    _this.jobservice.getBidsOnJob(x._id).subscribe(function (result1) {
                        console.log(result1);
                        if (result1.success) {
                            _this.allJobs[key].jobStatus = 'applied';
                            _this.allJobs[key].bidsOn = result1.data.updated_at;
                        }
                        else {
                            _this.allJobs[key].jobStatus = 'Notapplied';
                            _this.allJobs[key].bidsOn = result1.data.updated_at;
                        }
                    });
                });
                // this.allJobs.sort((a,b) => b.bidsOn.localeCompare(a.bidsOn));
                $.each(result.jobs, function (index, value) {
                    /* var d1 = new Date(value.jobEnd);
                    var month1 = '' + (d1.getMonth() + 1);
                    var day1 = '' + d1.getDate();
                    var year1 = d1.getFullYear();
                    if (month1.length < 2) month1 = '0' + month1;
                    if (day1.length < 2) day1 = '0' + day1;
                    var mindateset1 = [year1, month1, day1].join('-');
                    if(mindateset1 < mindateset){
                        result.jobs[index].jobStatus =  'Closed';
                    }else{
                        result.jobs[index].jobStatus =  'Active';
                    } */
                });
                /* this.allJobs = result.jobs;
                console.log(this.allJobs);   */
            }
            else {
                _this.isValid = true;
                //this._flashMessagesService.show("No job founds", { cssClass: 'alert-danger',timeout:6000});
            }
        });
    };
    OpenBidsComponent.prototype.getBidsOnJob = function () {
        console.log('dgdf');
        /* this.jobservice.getBidsOnJob(value_id).subscribe(result1 =>
        {
            console.log(result1);
        }); */
    };
    OpenBidsComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.isValid = false;
    };
    OpenBidsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./openbids.component.html */ "./src/app/frontend/views/jobs/partners/openbids/openbids.component.html"),
            styles: [__webpack_require__(/*! ./openbids.component.css */ "./src/app/frontend/views/jobs/partners/openbids/openbids.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__["FlashMessagesService"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_3__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["Title"]])
    ], OpenBidsComponent);
    return OpenBidsComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".hire-panel .info .rate span{font-size:14px;font-weight:500}\r\n.hire-panel .info .completedjob {\r\n\tcolor: #1691be;\r\n\tfont-weight: 700;\r\n\tfont-size: 14px;\r\n\tdisplay: inline-flex;\r\n}\r\n.rating {\r\n    float:left;\r\n}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  float: left;\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\n.desc .loc_lable{    width: 100px;\r\n    position: relative;\r\n    display: inline-block;\r\n\ttext-align: right;\r\n\tfont-weight:600;\r\n\tfont-size:14px\r\n}\r\n.desc .loc_lable::after{content:\":\"}\r\n.job-info{\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n}\r\n.items-moved .job-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.joblisting-panel .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.job-info .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.items-moved.joblisting-panel .title {\r\n\tcolor:#303030;\r\n    font-weight: 900;  \r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy92aWV3YmlkL3ZpZXdiaWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkIsY0FBYyxDQUFDLGVBQWU7QUFDM0Q7Q0FDQyxjQUFjO0NBQ2QsZ0JBQWdCO0NBQ2hCLGVBQWU7Q0FDZixvQkFBb0I7QUFDckI7QUFHQTtJQUNJLFVBQVU7QUFDZDtBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7QUFFQTtJQUNJLFdBQVc7SUFDWCxTQUFTO0lBQ1QsYUFBYTtJQUNiLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGNBQWM7SUFDZCxlQUFlO0lBQ2YsVUFBVTtBQUNkO0FBRUE7SUFDSSxhQUFhO0FBQ2pCO0FBRUE7SUFDSSxjQUFjO0FBQ2xCO0FBRUE7O0lBRUksY0FBYztBQUNsQjtBQUdBOzs7SUFHSSxjQUFjO0FBQ2xCO0FBR0E7RUFDRSxvR0FBb0c7RUFDcEcsWUFBWTtFQUNaLFlBQVk7RUFDWixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osV0FBVztFQUNYLGNBQWM7QUFDaEI7QUFHQTtJQUNJLG9HQUFvRztJQUNwRywyQkFBMkI7SUFDM0IsV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0VBQ2Y7QUFFRixxQkFBcUIsWUFBWTtJQUM3QixrQkFBa0I7SUFDbEIscUJBQXFCO0NBQ3hCLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2Y7QUFDRDtBQUNBLHdCQUF3QixXQUFXO0FBRW5DO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2QjtBQUNBO0lBR0ksYUFBYTtJQUVULGVBQWU7QUFDdkI7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0NBQ0MsYUFBYTtJQUNWLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvcGFydG5lcnMvdmlld2JpZC92aWV3YmlkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlyZS1wYW5lbCAuaW5mbyAucmF0ZSBzcGFue2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH1cclxuLmhpcmUtcGFuZWwgLmluZm8gLmNvbXBsZXRlZGpvYiB7XHJcblx0Y29sb3I6ICMxNjkxYmU7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nIHtcclxuICAgIGZsb2F0OmxlZnQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGlucHV0IHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOi05OTk5cHg7XHJcbiAgICBjbGlwOnJlY3QoMCwwLDAsMCk7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsIHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6MWVtO1xyXG4gICAgcGFkZGluZzowLjFlbTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDoxLjI7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZS1yYXRpbmd7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4uZGVzYyAubG9jX2xhYmxleyAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0dGV4dC1hbGlnbjogcmlnaHQ7XHJcblx0Zm9udC13ZWlnaHQ6NjAwO1xyXG5cdGZvbnQtc2l6ZToxNHB4XHJcbn1cclxuLmRlc2MgLmxvY19sYWJsZTo6YWZ0ZXJ7Y29udGVudDpcIjpcIn1cclxuXHJcbi5qb2ItaW5mb3tcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbi5pdGVtcy1tb3ZlZCAuam9iLWluZm8ge1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxufSBcclxuXHJcbi5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uam9iLWluZm8gLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5pdGVtcy1tb3ZlZC5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcblx0Y29sb3I6IzMwMzAzMDtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7ICBcclxufVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\r\n\t\t<h3 class=\"mb-4\">Job Details</h3>\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"movingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Moving</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of movingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of movingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"packingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Packing</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of packingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of packingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"unpackingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Unpacking</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of unpackingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unpackingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"loadingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Loading of Truck</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of loadingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of loadingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"unloadingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Unloading of Truck</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of unloadingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unloadingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t<h3 class=\"mb-4 mt-4\">Bid Details</h3>\r\n\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info signup-form\">\r\n\t\t\t\t\t\t<div class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<flash-messages></flash-messages>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form [formGroup]=\"angForm\"  class=\"esitame-form\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t<label>Bid Amount(USD)</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bidAmount\" placeholder=\"Bid Amount\" formControlName=\"bidAmount\" [ngClass]=\"{ 'is-invalid': submitted && f.bidAmount.errors}\" [(ngModel)]=\"bidData.bid_price\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && f.bidAmount.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"f.bidAmount.errors.required\">Bid Amount is required</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t<label>Bid Proposal</label>\r\n\t\t\t\t\t\t\t\t<textarea class=\"form-control\" id=\"bidProposal\" placeholder=\"Bid Proposal\"  formControlName=\"bidProposal\" [ngClass]=\"{ 'is-invalid': submitted && f.bidProposal.errors }\" [(ngModel)]=\"bidData.bid_proposal\"></textarea>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"submitted && f.bidProposal.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"f.bidProposal.errors.required\">Bid Proposal is required</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t<label>Attachment(if Any)</label><br>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t<i class=\"fas fa-file-pdf text-danger\"></i> {{docUrl}}\r\n\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"form-row\" *ngIf=\"bidData.bidStatus == 0\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\" >\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary\" type=\"submit\" (click)=\"onSubmit(bidData._id)\"  (ngSubmit)=\"onSubmit(bidData._id)\">Update</button> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t</form>\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t</div>\r\n\t</div>\r\n</div>"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.ts ***!
  \***************************************************************************/
/*! exports provided: ViewBidomponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewBidomponent", function() { return ViewBidomponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");






//import { PasswordValidator } from '../../../validator/password.validator';


var ImageSnippet = /** @class */ (function () {
    function ImageSnippet(src, file) {
        this.src = src;
        this.file = file;
        this.pending = false;
        this.status = 'init';
    }
    return ImageSnippet;
}());
var ViewBidomponent = /** @class */ (function () {
    function ViewBidomponent(_flashMessagesService, route, router, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.route = route;
        this.router = router;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.ratingClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.jobid = '';
        this.appliances = '';
        this.basements = '';
        this.diningrooms = '';
        this.bedrooms = '';
        this.familyrooms = '';
        this.garages = '';
        this.kitchens = '';
        this.livingrooms = '';
        this.patioyards = '';
        this.userslist = '';
        this.jobData = '';
        this.thisisdone = "";
        this.alllocations = "";
        this.states = '';
        this.counties = '';
        this.cities = '';
        this.allappliances = '';
        this.show_dialog = false;
        this.button_text = '';
        this.submitted = '';
        this.bidData = '';
        this.docUrl = '';
        this.attachment_pic = '';
        this.user_id = '';
        this.movingData = '';
        this.packingData = '';
        this.unpackingData = '';
        this.loadingData = '';
        this.unloadingData = '';
        this.makeBidForm();
        this.titleService.setTitle('View Bid | MoveLaunch');
    }
    ViewBidomponent.prototype.makeBidForm = function () {
        this.angForm = this.fb.group({
            // name: ['',  Validators.required ],
            bidAmount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            bidProposal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            imageInput: ['']
        });
    };
    ViewBidomponent.prototype.onSuccess = function () {
        this.selectedFile.pending = false;
        this.selectedFile.status = 'ok';
    };
    ViewBidomponent.prototype.onError = function () {
        this.selectedFile.pending = false;
        this.selectedFile.status = 'fail';
        this.selectedFile.src = '';
    };
    ViewBidomponent.prototype.processFile = function (imageInput) {
        var _this = this;
        var file = imageInput.files[0];
        var reader = new FileReader();
        reader.addEventListener('load', function (event) {
            _this.selectedFile = new ImageSnippet(event.target.result, file);
            _this.selectedFile.pending = true;
        });
        reader.readAsDataURL(file);
    };
    ViewBidomponent.prototype.getSavedJob = function () {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        localStorage.setItem('jobType', 'saved');
        this.jobid = this.route.snapshot.paramMap.get('jobid');
        this.jobservice.getEditJob(this.jobid).subscribe(function (result) {
            /* this.createFromLocationForm(); */
            if (result.success) {
                _this.jobData = result.job;
                //this.jobData.servicename = this.jobData.serviceId.name;
                if (result.job.moving && result.job.moving.length > 0) {
                    _this.movingData = result.job.moving[0];
                }
                console.log(_this.movingData);
                if (result.job.packing && result.job.packing.length > 0) {
                    _this.packingData = result.job.packing[0];
                }
                if (result.job.unpacking && result.job.unpacking.length > 0) {
                    _this.unpackingData = result.job.unpacking[0];
                }
                if (result.job.loading && result.job.loading.length > 0) {
                    _this.loadingData = result.job.loading[0];
                }
                if (result.job.unloading && result.job.unloading.length > 0) {
                    _this.unloadingData = result.job.unloading[0];
                }
                _this.userservice.getStates().subscribe(function (result) {
                    _this.states = result;
                });
                var currentState = _this.jobData.state;
                var currentCounty = _this.jobData.county;
                _this.userservice.getCounties(currentState).subscribe(function (result) {
                    _this.counties = result;
                });
                _this.userservice.getCities(currentCounty, currentState).subscribe(function (result) {
                    _this.cities = result;
                });
                //console.log(this.living);
            }
            else {
                _this._flashMessagesService.show("No Saved Job Found.", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
        //	http://18.188.2.226:3001/api/partner/editbid/5cd518c538bc5c24ab886e43
        this.jobservice.editJobBids(this.jobid).subscribe(function (result) {
            console.log(result);
            _this.bidData = result.bid;
            var user_id = localStorage.getItem('userid');
            //this.docUrl  = environment.bid_document_url+this.user_id+'/'+this.jobid+'/'+result.bid.attachment_pic;
            _this.docUrl = result.bid.attachment_pic;
        });
    };
    Object.defineProperty(ViewBidomponent.prototype, "f", {
        get: function () { return this.angForm.controls; },
        enumerable: true,
        configurable: true
    });
    ViewBidomponent.prototype.onSubmit = function (bidId) {
        var _this = this;
        this.submitted = true;
        if (this.angForm.invalid) {
            return;
        }
        else {
            var bid_info = this.angForm.value;
            var _userid = localStorage.getItem('userid');
            this.jobservice.updateBid(bid_info, bidId, _userid).subscribe(function (result) {
                if (result.success) {
                    _this._flashMessagesService.show('Your bid has been updated successfully.', { cssClass: 'alert-success', timeout: 5000 });
                    setTimeout(function () {
                        _this.router.navigate(['/open-bids']);
                    }, 2500);
                }
                else {
                    _this._flashMessagesService.show(result.message, { cssClass: 'alert-danger', timeout: 5000 });
                }
            });
        }
    };
    ViewBidomponent.prototype.deleteJob = function (jobID) {
        var _this = this;
        this.jobservice.deleteJob(jobID).subscribe(function (result) {
            if (result.success) {
                setTimeout(function () {
                    _this.router.navigate(['/open-bids']);
                }, 2500);
                _this._flashMessagesService.show("job has been deleted successfully", { cssClass: 'alert-success', timeout: 6000 });
            }
            else {
                _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    ViewBidomponent.prototype.toggle = function () {
        this.show_dialog = !this.show_dialog;
        this.button_text = this.show_dialog ? 'View Less' : 'View More';
    };
    ViewBidomponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.getSavedJob();
        this.button_text = 'View More';
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], ViewBidomponent.prototype, "rating", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], ViewBidomponent.prototype, "itemId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])
    ], ViewBidomponent.prototype, "ratingClick", void 0);
    ViewBidomponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./viewbid.component.html */ "./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.html"),
            styles: [__webpack_require__(/*! ./viewbid.component.css */ "./src/app/frontend/views/jobs/partners/viewbid/viewbid.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__["FlashMessagesService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_5__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], ViewBidomponent);
    return ViewBidomponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".action a{margin-right:7px}\r\n.joblisting-panel .content-left .time_ago{font-size:12px;}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy93b25iaWRzL3dvbmJpZHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLGdCQUFnQjtBQUMxQiwwQ0FBMEMsY0FBYyxDQUFDIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy9wYXJ0bmVycy93b25iaWRzL3dvbmJpZHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24gYXttYXJnaW4tcmlnaHQ6N3B4fVxyXG4uam9ibGlzdGluZy1wYW5lbCAuY29udGVudC1sZWZ0IC50aW1lX2Fnb3tmb250LXNpemU6MTJweDt9Il19 */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\r\n\t\t\t<h3 class=\"mb-4\">Winning Estimates</h3>\r\n\r\n\t\t\t<div class=\"table-responsive\">\r\n\t\t\t\t<table class=\"table table-striped text-center\">\r\n\t\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Job ID</th>\r\n\t\t\t\t\t\t\t<th>Request Date</th>\r\n\t\t\t\t\t\t\t<th>Hired Date</th>\r\n\t\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody *ngIf=\"allJobs && allJobs.length > 0\">\r\n\t\t\t\t\t   <tr *ngFor=\"let jobs of allJobs\">\r\n\t\t\t\t\t\t\t<td><a class=\"job_id\" routerLink=\"/view-job/{{jobs._id}}\">{{jobs.jobId}}</a></td>\r\n\t\t\t\t\t\t\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>{{jobs.bidsOn | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  routerLink=\"/view-job/{{jobs._id}}\">View</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  *ngIf=\"jobs.jobStatus == 'Notapplied'\" routerLink=\"/make-bid/{{jobs._id}}\">Bid Now</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  *ngIf=\"jobs.jobStatus == 'applied'\" routerLink=\"/view-bid/{{jobs._id}}\">View Bid</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\"  routerLink=\"/user-info/{{jobs.userId._id}}/{{jobs._id}}\">View Info</a>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<tbody *ngIf=\"!allJobs || allJobs.length == 0\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colspan=\"4\">\r\n\t\t\t\t\t\t\t\t<h3>Sorry! You did not won any of your bid yet.</h3>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t</div>\r\n</div>"

/***/ }),

/***/ "./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.ts ***!
  \***************************************************************************/
/*! exports provided: WonBidsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WonBidsComponent", function() { return WonBidsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");





//import { PasswordValidator } from '../../../validator/password.validator';


var WonBidsComponent = /** @class */ (function () {
    function WonBidsComponent(_flashMessagesService, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.isValid = false;
        this.name = '';
        this.animal = '';
        this.jobidisset = '';
        this.message = '';
        this.getAllJobs();
        this.titleService.setTitle('Won Jobs | MoveLaunch');
    }
    WonBidsComponent.prototype.getAllJobs = function () {
        var _this = this;
        this.jobservice.getFilteredJobsForPartner(1, 1).subscribe(function (result) {
            if (result.success) {
                _this.isValid = true;
                var d = new Date();
                var month = '' + (d.getMonth() + 1);
                var day = '' + d.getDate();
                var year = d.getFullYear();
                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;
                var mindateset = [year, month, day].join('-');
                _this.allJobs = result.jobs;
                _this.allJobs.forEach(function (x, key) {
                    _this.jobservice.getBidsOnJob(x._id).subscribe(function (result1) {
                        if (result1.success) {
                            _this.allJobs[key].jobStatus = 'applied';
                            _this.allJobs[key].bidsOn = result1.data.hired_decline;
                        }
                        else {
                            _this.allJobs[key].jobStatus = 'Notapplied';
                            _this.allJobs[key].bidsOn = result1.data.hired_decline;
                        }
                    });
                });
                $.each(result.jobs, function (index, value) {
                    /* var d1 = new Date(value.jobEnd);
                    var month1 = '' + (d1.getMonth() + 1);
                    var day1 = '' + d1.getDate();
                    var year1 = d1.getFullYear();
                    if (month1.length < 2) month1 = '0' + month1;
                    if (day1.length < 2) day1 = '0' + day1;
                    var mindateset1 = [year1, month1, day1].join('-');
                    if(mindateset1 < mindateset){
                        result.jobs[index].jobStatus =  'Closed';
                    }else{
                        result.jobs[index].jobStatus =  'Active';
                    } */
                });
                /* this.allJobs = result.jobs;
                console.log(this.allJobs);   */
            }
            else {
                _this.isValid = true;
                //this._flashMessagesService.show("No job founds", { cssClass: 'alert-danger',timeout:6000});
            }
        });
    };
    WonBidsComponent.prototype.getBidsOnJob = function () {
        console.log('dgdf');
        /* this.jobservice.getBidsOnJob(value_id).subscribe(result1 =>
        {
            console.log(result1);
        }); */
    };
    WonBidsComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.isValid = false;
    };
    WonBidsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./wonbids.component.html */ "./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.html"),
            styles: [__webpack_require__(/*! ./wonbids.component.css */ "./src/app/frontend/views/jobs/partners/wonbids/wonbids.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__["FlashMessagesService"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_3__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["Title"]])
    ], WonBidsComponent);
    return WonBidsComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/users/completejob/completejob.component.css":
/*!*********************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/completejob/completejob.component.css ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".hire-panel .info .rate span{font-size:14px;font-weight:500}\r\n.hire-panel .info .completedjob {\r\n\tcolor: #1691be;\r\n\tfont-weight: 700;\r\n\tfont-size: 14px;\r\n\tdisplay: inline-flex;\r\n}\r\n.rating {\r\n    float:left;\r\n}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  float: left;\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\n.ratingclass label{line-height:45px}\r\n.rating {\r\n    float:left;\r\n\tdisplay:block;\r\n}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:28px;\r\n    line-height:32px;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: green;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: green;\r\n}\r\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\r\nspan.itemcount{width:25px; float:right}\r\n.border-class{\r\n\tborder-bottom: 1px dashed #ccc;\r\n    width: 97%;\r\n    margin: 15px auto;\r\n}\r\n.desc .loc_lable{    width: 100px;\r\n    position: relative;\r\n    display: inline-block;\r\n\ttext-align: right;\r\n\tfont-weight:600;\r\n\tfont-size:14px\r\n}\r\n.desc .loc_lable::after{content:\":\"}\r\n.job-info{\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n}\r\n.items-moved .job-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.joblisting-panel .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.job-info .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.items-moved.joblisting-panel .title {\r\n\tcolor:#303030;\r\n    font-weight: 900;  \r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9jb21wbGV0ZWpvYi9jb21wbGV0ZWpvYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZCQUE2QixjQUFjLENBQUMsZUFBZTtBQUMzRDtDQUNDLGNBQWM7Q0FDZCxnQkFBZ0I7Q0FDaEIsZUFBZTtDQUNmLG9CQUFvQjtBQUNyQjtBQUdBO0lBQ0ksVUFBVTtBQUNkO0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFNBQVM7SUFDVCxhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFDZixVQUFVO0FBQ2Q7QUFFQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCO0FBR0E7OztJQUdJLGNBQWM7QUFDbEI7QUFHQTtFQUNFLG9HQUFvRztFQUNwRyxZQUFZO0VBQ1osWUFBWTtFQUNaLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0VBQ1gsY0FBYztBQUNoQjtBQUdBO0lBQ0ksb0dBQW9HO0lBQ3BHLDJCQUEyQjtJQUMzQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7RUFDZjtBQUVGLG1CQUFtQixnQkFBZ0I7QUFDbkM7SUFDSSxVQUFVO0NBQ2IsYUFBYTtBQUNkO0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFNBQVM7SUFDVCxhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixVQUFVO0FBQ2Q7QUFFQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLFlBQVk7QUFDaEI7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCO0FBR0E7OztJQUdJLFlBQVk7QUFDaEI7QUFFQSxlQUFlLFVBQVUsQ0FBQyxlQUFlLENBQUMsZUFBZTtBQUN6RCxlQUFlLFVBQVUsRUFBRSxXQUFXO0FBRXRDO0NBQ0MsOEJBQThCO0lBQzNCLFVBQVU7SUFDVixpQkFBaUI7QUFDckI7QUFFQSxxQkFBcUIsWUFBWTtJQUM3QixrQkFBa0I7SUFDbEIscUJBQXFCO0NBQ3hCLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2Y7QUFDRDtBQUNBLHdCQUF3QixXQUFXO0FBRW5DO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2QjtBQUNBO0lBR0ksYUFBYTtJQUVULGVBQWU7QUFDdkI7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0NBQ0MsYUFBYTtJQUNWLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvY29tcGxldGVqb2IvY29tcGxldGVqb2IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaXJlLXBhbmVsIC5pbmZvIC5yYXRlIHNwYW57Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NTAwfVxyXG4uaGlyZS1wYW5lbCAuaW5mbyAuY29tcGxldGVkam9iIHtcclxuXHRjb2xvcjogIzE2OTFiZTtcclxuXHRmb250LXdlaWdodDogNzAwO1xyXG5cdGZvbnQtc2l6ZTogMTRweDtcclxuXHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcge1xyXG4gICAgZmxvYXQ6bGVmdDtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OjEuMjtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlciB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjMTY5MWJlO1xyXG59XHJcblxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlcixcclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlciB+IGxhYmVsLFxyXG4ucmF0aW5nID4gbGFiZWw6aG92ZXIgfiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDIxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9XHJcbiAgXHJcbi5yYXRpbmdjbGFzcyBsYWJlbHtsaW5lLWhlaWdodDo0NXB4fVxyXG4ucmF0aW5nIHtcclxuICAgIGZsb2F0OmxlZnQ7XHJcblx0ZGlzcGxheTpibG9jaztcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MjhweDtcclxuICAgIGxpbmUtaGVpZ2h0OjMycHg7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICMxNjkxYmU7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyIH4gbGFiZWwsXHJcbi5yYXRpbmcgPiBsYWJlbDpob3ZlciB+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogZ3JlZW47XHJcbn1cclxuXHJcbnNwYW4uaXRlbW5hbWV7IHdpZHRoOjIwcHg7Zm9udC13ZWlnaHQ6NjAwO2ZvbnQtc2l6ZToxNHB4IH1cclxuc3Bhbi5pdGVtY291bnR7d2lkdGg6MjVweDsgZmxvYXQ6cmlnaHR9XHJcblxyXG4uYm9yZGVyLWNsYXNze1xyXG5cdGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2NjYztcclxuICAgIHdpZHRoOiA5NyU7XHJcbiAgICBtYXJnaW46IDE1cHggYXV0bztcclxufVxyXG5cclxuLmRlc2MgLmxvY19sYWJsZXsgICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cdGZvbnQtd2VpZ2h0OjYwMDtcclxuXHRmb250LXNpemU6MTRweFxyXG59XHJcbi5kZXNjIC5sb2NfbGFibGU6OmFmdGVye2NvbnRlbnQ6XCI6XCJ9XHJcblxyXG4uam9iLWluZm97XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG4uaXRlbXMtbW92ZWQgLmpvYi1pbmZvIHtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn0gXHJcblxyXG4uam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLmpvYi1pbmZvIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uaXRlbXMtbW92ZWQuam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG5cdGNvbG9yOiMzMDMwMzA7XHJcbiAgICBmb250LXdlaWdodDogOTAwOyAgXHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/completejob/completejob.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/completejob/completejob.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\r\n\t\t<h3 class=\"mb-4\">Estimate Details</h3>\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"movingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Moving</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tEstimate Date : {{movingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of movingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of movingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"packingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Packing</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tEstimate Date : {{packingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of packingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of packingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"unpackingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Unpacking</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tEstimate Date : {{unpackingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of unpackingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unpackingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"loadingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Loading of Truck</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tEstimate Date : {{loadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of loadingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of loadingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container title-icon-bar\" *ngIf=\"unloadingData\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t<div class=\"tc-wrap\">Unloading of Truck</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\tEstimate Date : {{unloadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of unloadingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unloadingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t<h3 class=\"mb-4 mt-4\">Feedback Details</h3>\r\n\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<div class=\"job-info signup-form\">\r\n\t\t\t\t\t\t<div class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<flash-messages></flash-messages>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form [formGroup]=\"angForm\"  class=\"esitame-form\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12 ratingclass\">\r\n\t\t\t\t\t\t\t<label>Rating</label>\r\n\t\t\t\t\t\t\t<fieldset class=\"rating\">\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"5\" [checked]=\"rating===5\" />\r\n\t\t\t\t\t\t\t  <label title=\"Rocks!\" (click)='onClick(5)'>5 stars</label>\r\n\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"4\" [checked]=\"rating===4\" />\r\n\t\t\t\t\t\t\t  <label title=\"Pretty good\" (click)='onClick(4)'>4 stars</label>\r\n\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"3\" [checked]=\"rating===3\" />\r\n\t\t\t\t\t\t\t  <label title=\"Meh\" (click)='onClick(3)'>3 stars</label>\r\n\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"2\" [checked]=\"rating===2\" />\r\n\t\t\t\t\t\t\t  <label title=\"Kinda bad\" (click)='onClick(2)'>2 stars</label>\r\n\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"1\" [checked]=\"rating===1\" />\r\n\t\t\t\t\t\t\t  <label title=\"Sucks big time\" (click)='onClick(1)'>1 star</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" style=\"display: none;\" readonly=\"readonly\" id=\"ratingSelected\" formControlName=\"ratingSelected\" [ngClass]=\"{ 'is-invalid': submitted && f.ratingSelected.errors }\" [ngModel]=\"ratingClicked\">\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted && f.ratingSelected.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"f.ratingSelected.errors.required\">Rating is required</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t\t <div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<label>Feedback</label>\r\n\t\t\t\t\t\t\t<textarea class=\"form-control\" id=\"jobFeedback\" placeholder=\"Job Feedback\"  formControlName=\"jobFeedback\" [ngClass]=\"{ 'is-invalid': submitted && f.jobFeedback.errors }\"></textarea>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted && f.jobFeedback.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"f.jobFeedback.errors.required\">Feedback is Required</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary\" type=\"submit\" (click)=\"onSubmit()\"  (ngSubmit)=\"onSubmit()\">Submit</button> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</form>\t\t\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n \r\n "

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/completejob/completejob.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/completejob/completejob.component.ts ***!
  \********************************************************************************/
/*! exports provided: CompleteJobComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompleteJobComponent", function() { return CompleteJobComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");






//import { PasswordValidator } from '../../../validator/password.validator';


var ImageSnippet = /** @class */ (function () {
    function ImageSnippet(src, file) {
        this.src = src;
        this.file = file;
        this.pending = false;
        this.status = 'init';
    }
    return ImageSnippet;
}());
var CompleteJobComponent = /** @class */ (function () {
    function CompleteJobComponent(_flashMessagesService, route, router, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.route = route;
        this.router = router;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.ratingClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.jobid = '';
        this.appliances = '';
        this.basements = '';
        this.diningrooms = '';
        this.bedrooms = '';
        this.familyrooms = '';
        this.garages = '';
        this.kitchens = '';
        this.livingrooms = '';
        this.patioyards = '';
        this.userslist = '';
        this.jobData = '';
        this.thisisdone = "";
        this.alllocations = "";
        this.states = '';
        this.counties = '';
        this.cities = '';
        this.allappliances = '';
        this.show_dialog = false;
        this.button_text = '';
        this.submitted = '';
        this.ratingClicked = '';
        this.movingData = '';
        this.packingData = '';
        this.unpackingData = '';
        this.loadingData = '';
        this.unloadingData = '';
        this.makeBidForm();
        this.titleService.setTitle('Complete A Job | MoveLaunch');
    }
    CompleteJobComponent.prototype.makeBidForm = function () {
        this.angForm = this.fb.group({
            // name: ['',  Validators.required ],
            ratingSelected: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobFeedback: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
    };
    CompleteJobComponent.prototype.getSavedJob = function () {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        localStorage.setItem('jobType', 'saved');
        this.jobid = this.route.snapshot.paramMap.get('jobid');
        this.jobservice.getEditJob(this.jobid).subscribe(function (result) {
            /* this.createFromLocationForm(); */
            if (result.success) {
                _this.jobData = result.job;
                if (result.job.moving && result.job.moving.length > 0) {
                    _this.movingData = result.job.moving[0];
                }
                console.log(_this.movingData);
                if (result.job.packing && result.job.packing.length > 0) {
                    _this.packingData = result.job.packing[0];
                }
                if (result.job.unpacking && result.job.unpacking.length > 0) {
                    _this.unpackingData = result.job.unpacking[0];
                }
                if (result.job.loading && result.job.loading.length > 0) {
                    _this.loadingData = result.job.loading[0];
                }
                if (result.job.unloading && result.job.unloading.length > 0) {
                    _this.unloadingData = result.job.unloading[0];
                }
                //this.jobData.servicename = this.jobData.serviceId.name;
                _this.userservice.getStates().subscribe(function (result) {
                    _this.states = result;
                });
                var currentState = _this.jobData.state;
                var currentCounty = _this.jobData.county;
                _this.userservice.getCounties(currentState).subscribe(function (result) {
                    _this.counties = result;
                });
                _this.userservice.getCities(currentCounty, currentState).subscribe(function (result) {
                    _this.cities = result;
                });
                //console.log(this.living);
            }
            else {
                _this._flashMessagesService.show("No Saved Job Found.", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
        /* this.jobservice.getJobBids(this.jobid).subscribe(result=>{
        
            
            $.each(result.users, function(index, value) {
                result.users[index].width = value.userRating*10;
            });
            this.userslist = result.users;
            console.log(this.userslist);
        }); */
    };
    CompleteJobComponent.prototype.onClick = function (rating) {
        this.rating = rating;
        this.ratingClick.emit({
            itemId: this.itemId,
            rating: rating
        });
        this.ratingClicked = this.rating;
    };
    Object.defineProperty(CompleteJobComponent.prototype, "f", {
        get: function () { return this.angForm.controls; },
        enumerable: true,
        configurable: true
    });
    CompleteJobComponent.prototype.onSubmit = function () {
        var _this = this;
        this.submitted = true;
        if (this.angForm.invalid) {
            return;
        }
        else {
            var rating_info = this.angForm.value;
            var sender_id = localStorage.getItem('userid');
            this.jobid = this.route.snapshot.paramMap.get('jobid');
            var partnerid = this.route.snapshot.paramMap.get('partnerid');
            console.log(rating_info);
            this.jobservice.sendReviews(rating_info, sender_id, this.jobid, partnerid).subscribe(function (result) {
                if (result.success) {
                    _this._flashMessagesService.show('Your job has been completed successfully.', { cssClass: 'alert-success', timeout: 2000 });
                    setTimeout(function () {
                        _this.router.navigate(['/user-completed-jobs']);
                    }, 2500);
                }
                else {
                    _this._flashMessagesService.show(result.message, { cssClass: 'alert-danger', timeout: 5000 });
                }
            });
        }
    };
    CompleteJobComponent.prototype.deleteJob = function (jobID) {
        var _this = this;
        this.jobservice.deleteJob(jobID).subscribe(function (result) {
            if (result.success) {
                _this._flashMessagesService.show("job has been deleted successfully", { cssClass: 'alert-success', timeout: 6000 });
            }
            else {
                _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    CompleteJobComponent.prototype.toggle = function () {
        this.show_dialog = !this.show_dialog;
        this.button_text = this.show_dialog ? 'View Less' : 'View More';
    };
    CompleteJobComponent.prototype.ngOnInit = function () {
        this.inputName = this.itemId + '_rating';
        this.first_show = true;
        this.getSavedJob();
        this.button_text = 'View More';
        this.ratingClicked = '';
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], CompleteJobComponent.prototype, "rating", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], CompleteJobComponent.prototype, "itemId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])
    ], CompleteJobComponent.prototype, "ratingClick", void 0);
    CompleteJobComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./completejob.component.html */ "./src/app/frontend/views/jobs/users/completejob/completejob.component.html"),
            styles: [__webpack_require__(/*! ./completejob.component.css */ "./src/app/frontend/views/jobs/users/completejob/completejob.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__["FlashMessagesService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_5__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], CompleteJobComponent);
    return CompleteJobComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/users/createjob/array.validator.ts":
/*!************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/createjob/array.validator.ts ***!
  \************************************************************************/
/*! exports provided: ArrayValidators */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArrayValidators", function() { return ArrayValidators; });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");

// Array Validators
var ArrayValidators = /** @class */ (function () {
    function ArrayValidators() {
    }
    // max length
    ArrayValidators.maxLength = function (max) {
        return function (control) {
            if (!(control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormArray"]))
                return;
            return control.length > max ? { maxLength: true } : null;
        };
    };
    // min length
    ArrayValidators.minLength = function (min) {
        return function (control) {
            if (!(control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormArray"]))
                return;
            return control.length < min ? { minLength: true } : null;
        };
    };
    // between length
    ArrayValidators.betweenLength = function (min, max) {
        return function (control) {
            if (!(control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormArray"]))
                return;
            return control.length < min || control.length > max ? { betweenLength: true } : null;
        };
    };
    // compare in elements with a value, it need at least one match in a formGroup
    ArrayValidators.equalsToSomeGroupKey = function (key, toCompare, strict) {
        if (strict === void 0) { strict = false; }
        return function (control) {
            if (!(control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormArray"]))
                return;
            for (var _i = 0, _a = control.value; _i < _a.length; _i++) {
                var item = _a[_i];
                if (!item[key] && typeof item[key] === 'undefined')
                    return { equalsToSomeGroupKey: true, err: 'Property invalid' };
                var condition = strict ? item[key] === toCompare : item[key] == toCompare;
                if (condition)
                    return null;
            }
            return { equalsToSomeGroupKey: true };
        };
    };
    // compare in elements with a value, it need at least one match in a formControl
    ArrayValidators.equalsToSomeElement = function (toCompare, strict) {
        if (strict === void 0) { strict = false; }
        return function (control) {
            if (!(control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormArray"]))
                return;
            for (var _i = 0, _a = control.value; _i < _a.length; _i++) {
                var item = _a[_i];
                var condition = strict ? item === toCompare : item == toCompare;
                if (condition)
                    return null;
            }
            return { equalsToSomeElement: true };
        };
    };
    // check if key exists in all elements
    ArrayValidators.keyExistsInGroups = function (key) {
        return function (control) {
            if (!(control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormArray"]))
                return;
            for (var _i = 0, _a = control.value; _i < _a.length; _i++) {
                var item = _a[_i];
                if (!item[key])
                    return { keyExistsInGroups: true, item: item };
            }
            return null;
        };
    };
    // check if the key exists in at least one element group
    ArrayValidators.keyExistsInAtLeastOneGroup = function (key) {
        return function (control) {
            if (!(control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormArray"]))
                return;
            for (var _i = 0, _a = control.value; _i < _a.length; _i++) {
                var item = _a[_i];
                if (item[key])
                    return null;
            }
            return { keyExistsInAtLeastOneGroup: true };
        };
    };
    return ArrayValidators;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/users/createjob/createjob.component.css":
/*!*****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/createjob/createjob.component.css ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-step-icon{\r\n\theight:32px !important;\r\n\twidth:32px !important;\r\n}\r\n.mat-icon-no-color{\r\ncolor: #1691be;\r\nfont-size: 20px;\r\nvertical-align: top !important;\r\n\t\r\n}\r\n.invalid_field{\r\n\twidth: 100%;\r\n    margin-top: .25rem;\r\n    font-size: 80%;\r\n    color: #dc3545;\r\n}\r\n.mat-icon-button.cdk-focused.cdk-program-focused{outline:none!important}\r\n.mat-icon-button:focus{\r\n\toutline:none!important\r\n}\r\n.job_change_step_page form .custom-control-label{\r\n\tpadding-left:30px\r\n}\r\n::ng-deep .mat-horizontal-stepper-header-container{display:none !important}\r\n::ng-deep .mat-horizontal-stepper-header{\r\n    pointer-events: none !important;\r\n}\r\n.mat-datepicker-toggle {\r\n\tposition: absolute;\r\n\ttop: 12px;\r\n\tright: 12px;\r\n\tline-height: 45px;\r\n}\r\n.service-cont div[class*=\"col\"] label.serviceclass {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n\tmargin: 0;\r\n\tborder-radius: 5px;\r\n    top: 0;\r\n    bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n}\r\n.service-cont div[class*=\"col\"] .serv-txt {\r\n    background-position: center;\r\n}\r\n.service-cont div[class*=\"col\"] .serv-txt h4 {\r\n    padding-top: 70px;\r\n}\r\n.service-cont div[class*=\"col\"] .serv-txt {\r\n    background-position: center;\r\n    margin-top: -30px;\r\n}\r\n.cdb .service-cont div[class*=\"col\"] input {\r\n    margin: 0px auto;\r\n    visibility: hidden;\r\n    position: absolute;\r\n    margin: 0px auto;\r\n    top: 14px;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n.homepage .service-cont div[class*=\"col\"] input {\r\n    margin: 0px auto;\r\n    visibility: hidden;\r\n    position: absolute;\r\n    margin: 0px auto;\r\n    top: 14px;\r\n    left: 0;\r\n    right: 0;\r\n}\r\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\r\nspan.itemcount{width:25px; float:right}\r\n.border-class{\r\n\tborder-bottom: 1px dashed #ccc;\r\n    width: 97%;\r\n    margin: 15px auto;\r\n}\r\n.right-border{\r\n\tborder-right: 1px dashed #ccc;\r\n   margin-right:-5px\r\n}\r\n.desc .loc_lable{    width: 100px;\r\n    position: relative;\r\n    display: inline-block;\r\n\ttext-align: right;\r\n\tfont-weight:600;\r\n\tfont-size:14px\r\n}\r\n.desc .loc_lable::after{content:\":\"}\r\n.job-info{\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n}\r\n.items-moved .job-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.joblisting-panel .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.job-info .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.items-moved.joblisting-panel .title {\r\n\tcolor:#303030;\r\n    font-weight: 900;  \r\n}\r\n.example-h2 {\r\n  margin: 10px;\r\n}\r\n.example-section {\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  height: 60px;\r\n}\r\n.example-margin {\r\n  margin: 0 10px;\r\n  display:inline-block;\r\n  vertical-align:bottom;\r\n}\r\n:host ::ng-deep .mat-progress-spinner circle, .mat-spinner circle {   \r\n    stroke: #1691be;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9jcmVhdGVqb2IvY3JlYXRlam9iLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxzQkFBc0I7Q0FDdEIscUJBQXFCO0FBQ3RCO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsZUFBZTtBQUNmLDhCQUE4Qjs7QUFFOUI7QUFDQTtDQUNDLFdBQVc7SUFDUixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGNBQWM7QUFDbEI7QUFDQSxpREFBaUQsc0JBQXNCO0FBQ3ZFO0NBQ0M7QUFDRDtBQUVBO0NBQ0M7QUFDRDtBQUNBLG1EQUFtRCx1QkFBdUI7QUFFMUU7SUFDSSwrQkFBK0I7QUFDbkM7QUFFQTtDQUNDLGtCQUFrQjtDQUNsQixTQUFTO0NBQ1QsV0FBVztDQUNYLGlCQUFpQjtBQUNsQjtBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxRQUFRO0NBQ1gsU0FBUztDQUNULGtCQUFrQjtJQUNmLE1BQU07SUFDTixTQUFTO0lBR1QsYUFBYTtJQUdMLG1CQUFtQjtJQUduQix1QkFBdUI7SUFJdkIsc0JBQXNCO0FBQ2xDO0FBQ0E7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksMkJBQTJCO0lBQzNCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLFNBQVM7SUFDVCxPQUFPO0lBQ1AsUUFBUTtBQUNaO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsU0FBUztJQUNULE9BQU87SUFDUCxRQUFRO0FBQ1o7QUFDQSxlQUFlLFVBQVUsQ0FBQyxlQUFlLENBQUMsZUFBZTtBQUN6RCxlQUFlLFVBQVUsRUFBRSxXQUFXO0FBRXRDO0NBQ0MsOEJBQThCO0lBQzNCLFVBQVU7SUFDVixpQkFBaUI7QUFDckI7QUFDQTtDQUNDLDZCQUE2QjtHQUMzQjtBQUNIO0FBQ0EscUJBQXFCLFlBQVk7SUFDN0Isa0JBQWtCO0lBQ2xCLHFCQUFxQjtDQUN4QixpQkFBaUI7Q0FDakIsZUFBZTtDQUNmO0FBQ0Q7QUFDQSx3QkFBd0IsV0FBVztBQUVuQztJQUNJLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7QUFDQTtJQUdJLGFBQWE7SUFFVCxlQUFlO0FBQ3ZCO0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7QUFDQTtDQUNDLGFBQWE7SUFDVixnQkFBZ0I7QUFDcEI7QUFFQTtFQUNFLFlBQVk7QUFDZDtBQUVBO0VBQ0UsYUFBYTtFQUNiLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBRUE7RUFDRSxjQUFjO0VBQ2Qsb0JBQW9CO0VBQ3BCLHFCQUFxQjtBQUN2QjtBQUVBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvY3JlYXRlam9iL2NyZWF0ZWpvYi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1zdGVwLWljb257XHJcblx0aGVpZ2h0OjMycHggIWltcG9ydGFudDtcclxuXHR3aWR0aDozMnB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuLm1hdC1pY29uLW5vLWNvbG9ye1xyXG5jb2xvcjogIzE2OTFiZTtcclxuZm9udC1zaXplOiAyMHB4O1xyXG52ZXJ0aWNhbC1hbGlnbjogdG9wICFpbXBvcnRhbnQ7XHJcblx0XHJcbn1cdFxyXG4uaW52YWxpZF9maWVsZHtcclxuXHR3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi10b3A6IC4yNXJlbTtcclxuICAgIGZvbnQtc2l6ZTogODAlO1xyXG4gICAgY29sb3I6ICNkYzM1NDU7XHJcbn1cclxuLm1hdC1pY29uLWJ1dHRvbi5jZGstZm9jdXNlZC5jZGstcHJvZ3JhbS1mb2N1c2Vke291dGxpbmU6bm9uZSFpbXBvcnRhbnR9XHJcbi5tYXQtaWNvbi1idXR0b246Zm9jdXN7XHJcblx0b3V0bGluZTpub25lIWltcG9ydGFudFxyXG59XHJcblxyXG4uam9iX2NoYW5nZV9zdGVwX3BhZ2UgZm9ybSAuY3VzdG9tLWNvbnRyb2wtbGFiZWx7XHJcblx0cGFkZGluZy1sZWZ0OjMwcHhcclxufVxyXG46Om5nLWRlZXAgLm1hdC1ob3Jpem9udGFsLXN0ZXBwZXItaGVhZGVyLWNvbnRhaW5lcntkaXNwbGF5Om5vbmUgIWltcG9ydGFudH1cclxuXHJcbjo6bmctZGVlcCAubWF0LWhvcml6b250YWwtc3RlcHBlci1oZWFkZXJ7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubWF0LWRhdGVwaWNrZXItdG9nZ2xlIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0dG9wOiAxMnB4O1xyXG5cdHJpZ2h0OiAxMnB4O1xyXG5cdGxpbmUtaGVpZ2h0OiA0NXB4O1xyXG59XHJcblxyXG4uc2VydmljZS1jb250IGRpdltjbGFzcyo9XCJjb2xcIl0gbGFiZWwuc2VydmljZWNsYXNzIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuXHRtYXJnaW46IDA7XHJcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XHJcbiAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcclxuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG4uc2VydmljZS1jb250IGRpdltjbGFzcyo9XCJjb2xcIl0gLnNlcnYtdHh0IHtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxufVxyXG4uc2VydmljZS1jb250IGRpdltjbGFzcyo9XCJjb2xcIl0gLnNlcnYtdHh0IGg0IHtcclxuICAgIHBhZGRpbmctdG9wOiA3MHB4O1xyXG59XHJcbi5zZXJ2aWNlLWNvbnQgZGl2W2NsYXNzKj1cImNvbFwiXSAuc2Vydi10eHQge1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogLTMwcHg7XHJcbn1cclxuLmNkYiAuc2VydmljZS1jb250IGRpdltjbGFzcyo9XCJjb2xcIl0gaW5wdXQge1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIG1hcmdpbjogMHB4IGF1dG87XHJcbiAgICB0b3A6IDE0cHg7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbn1cclxuLmhvbWVwYWdlIC5zZXJ2aWNlLWNvbnQgZGl2W2NsYXNzKj1cImNvbFwiXSBpbnB1dCB7XHJcbiAgICBtYXJnaW46IDBweCBhdXRvO1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuICAgIHRvcDogMTRweDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxufVxyXG5zcGFuLml0ZW1uYW1leyB3aWR0aDoyMHB4O2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MTRweCB9XHJcbnNwYW4uaXRlbWNvdW50e3dpZHRoOjI1cHg7IGZsb2F0OnJpZ2h0fVxyXG5cclxuLmJvcmRlci1jbGFzc3tcclxuXHRib3JkZXItYm90dG9tOiAxcHggZGFzaGVkICNjY2M7XHJcbiAgICB3aWR0aDogOTclO1xyXG4gICAgbWFyZ2luOiAxNXB4IGF1dG87XHJcbn1cclxuLnJpZ2h0LWJvcmRlcntcclxuXHRib3JkZXItcmlnaHQ6IDFweCBkYXNoZWQgI2NjYztcclxuICAgbWFyZ2luLXJpZ2h0Oi01cHhcclxufVxyXG4uZGVzYyAubG9jX2xhYmxleyAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0dGV4dC1hbGlnbjogcmlnaHQ7XHJcblx0Zm9udC13ZWlnaHQ6NjAwO1xyXG5cdGZvbnQtc2l6ZToxNHB4XHJcbn1cclxuLmRlc2MgLmxvY19sYWJsZTo6YWZ0ZXJ7Y29udGVudDpcIjpcIn1cclxuXHJcbi5qb2ItaW5mb3tcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbi5pdGVtcy1tb3ZlZCAuam9iLWluZm8ge1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxufSBcclxuXHJcbi5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uam9iLWluZm8gLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5pdGVtcy1tb3ZlZC5qb2JsaXN0aW5nLXBhbmVsIC50aXRsZSB7XHJcblx0Y29sb3I6IzMwMzAzMDtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7ICBcclxufVxyXG5cclxuLmV4YW1wbGUtaDIge1xyXG4gIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuLmV4YW1wbGUtc2VjdGlvbiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDYwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLW1hcmdpbiB7XHJcbiAgbWFyZ2luOiAwIDEwcHg7XHJcbiAgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiAgdmVydGljYWwtYWxpZ246Ym90dG9tO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLm1hdC1wcm9ncmVzcy1zcGlubmVyIGNpcmNsZSwgLm1hdC1zcGlubmVyIGNpcmNsZSB7ICAgXHJcbiAgICBzdHJva2U6ICMxNjkxYmU7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/createjob/createjob.component.html":
/*!******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/createjob/createjob.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_change_step_page\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\t\t\t<flash-messages></flash-messages>\r\n\t\t\t<mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\r\n\t\t\t\t\r\n\t\t\t\t<mat-step >\r\n\t\t\t\t\t\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"angForm\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What services would you like an estimate for?</h3>\r\n\t\t\t\t\t\t<div class=\"custom-control custom-radio custom-control-inline\">\r\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"custom-control-input\" id=\"defaultInline1\" (click)=\"clearForm()\" formControlName = \"jobtype\" value=\"new\" (click)=\"createNewJob()\">\r\n\t\t\t\t\t\t\t<label class=\"custom-control-label\" for=\"defaultInline1\">Create a new Estimate</label>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<!-- Default inline 2-->\r\n\t\t\t\t\t\t<div class=\"custom-control custom-radio custom-control-inline\">\r\n\t\t\t\t\t\t\t<input type=\"radio\" class=\"custom-control-input\" id=\"defaultInline2\" formControlName = \"jobtype\" (click)=\"geSavedJob()\"  value=\"saved\">\r\n\t\t\t\t\t\t\t<label class=\"custom-control-label\" for=\"defaultInline2\">Continue Saved Estimate</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">You can select more then one option</h3>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\t\r\n\t\t\t\t\t\t\t<div formArrayName=\"services\" *ngFor=\"let option of angForm.controls.services.controls; let i=index\">\r\n\t\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t  <input [attr.checked]=\"(selectedServices && selectedServices.includes(jobservices[i]._id))?true : false\" [ngModel] = \"(selectedServices && selectedServices.includes(jobservices[i]._id))?true : false\" [formControlName]=\"i\"  (click)=\"checkName(option.name)\" type=\"checkbox\" class=\"custom-control-input\" id=\"moving_{{i}}\" >\r\n\t\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"moving_{{i}}\">{{jobservices[i].name}}</label>\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_service\">\r\n\t\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"submitted_service\">Select at least one options</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\" (click)=\"isChangeheading(stepper);\" type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\" [color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showMoving\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"angOptionsForm\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to move:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepicker.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepicker\" class=\"form-control\" id=\"job_start_date\" formControlName=\"job_start_date\"   [ngClass]=\"{ 'is-invalid': submitted_moving && f.job_start_date.errors}\" [ngModel]=\"movingData && movingData.jobStart? movingData.jobStart : ''\"\r\n(ngModelChange)=\"movingData && movingData.jobStart=$event\"   placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepicker\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepicker></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_moving && f.job_start_date.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"f.job_start_date.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_moving && f.job_start_date.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"f.job_start_date.errors.matDatepickerMin\">Job Date is passed. This is an old job</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help moving?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"options\" *ngFor=\"let option of angOptionsForm.controls.options.controls; let i = index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(movingData && movingData.selected_options.includes(optionsData[i].id))?true : false\" [ngModel] = \"(movingData && movingData.selected_options.includes(optionsData[i].id))?true : false\" [formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"options_{{i}}\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"options_{{i}}\">{{optionsData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage1\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage1\">Select at least one options for moving</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\" (click)=\"setOptionsAvailable(stepper)\" type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showMoving\">\r\n\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"secondFormGroup\">\r\n\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t<h1 class=\"step-title\">Moving from Location</h1> \r\n\t\t\t\t\t\t <div formArrayName=\"itemRows\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of secondFormGroup.controls.itemRows.controls; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Where are you moving from ?</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from\" (change)=\"toggleMovingFrom($event,i,itemrow)\" formControlName=\"moving_from\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving from ?</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"f2.controls[i].controls.moving_from.errors.required\">Moving From is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_floor\" formControlName=\"moving_from_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_floor.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_floor.errors.required\">Moving From floor is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_state\" formControlName=\"moving_from_state\" class=\"form-control \" (change)= \"getCountiesFrom($event,secondFormGroup)\" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_state.errors }\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_state.errors.required\">Moving From state is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_county\" formControlName=\"moving_from_county\" class=\"form-control \" (change)= \"getCitiesFrom($event,i,secondFormGroup)\" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties1\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_county.errors.required\">Moving From county is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> \r\n \r\n \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_city\" formControlName=\"moving_from_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_city.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities1\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_city.errors.required\">Moving From city is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>zipcode</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"  maxlength=\"5\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"  id=\"moving_from_zipcode\" formControlName=\"moving_from_zipcode\" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_zipcode.errors.required\">Moving From zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_from_address\" formControlName=\"moving_from_address\" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_address.errors.required\">Moving From address is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"secondFormGroup.controls.itemRows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button (click)=\"addNewRow('click')\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFromLocation(stepper,secondFormGroup,'moving',thirdFormGroup);\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t</form>\r\n\t\t\t  </mat-step>\r\n\t\t\t  <mat-step *ngIf = \"showMoving\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirdFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Moving to Location</h1> \r\n\t\t\t\t\t\t   <div formArrayName=\"itemRowsTo\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of thirdFormGroup.controls.itemRowsTo['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Where are you moving to ?</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to\" (change)=\"toggleMovingTo($event,i,itemrow)\" formControlName=\"moving_to\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to.errors}\" >\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving to ?</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to.errors.required\">Moving To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_floor\"  formControlName=\"moving_to_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_floor.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_floor.errors.required\">Moving To floor is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_state\" formControlName=\"moving_to_state\" class=\"form-control \" (change)= \"getCountiesTo($event,thirdFormGroup)\" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_state.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_state.errors.required\">Moving To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_county\" formControlName=\"moving_to_county\" class=\"form-control \" (change)= \"getCitiesTo($event,i,thirdFormGroup)\" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties2\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t    </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_county.errors.required\">Moving To county is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_city\" formControlName=\"moving_to_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_city.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities2\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_city.errors.required\">Moving To city is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Zipcode</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\"  maxlength=\"5\" class=\"form-control\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\" id=\"moving_to_zipcode\" formControlName=\"moving_to_zipcode\" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_zipcode.errors.required\">Moving To zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_to_address\" formControlName=\"moving_to_address\" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_address.errors.required\">Moving To address is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button *ngIf=\"thirdFormGroup.controls.itemRowsTo.controls.length > 1\" (click)=\"deleteRowTo(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"addNewRowTo()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveToLocation(stepper,thirdFormGroup,'moving');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form> \r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showAppliances\" >\r\n\t\t\t\t\t<form [formGroup]=\"FourthFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of FourthFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}} </label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_moving[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"movingData && movingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"appliance_assembly\" [(ngModel)]=\"movingData && movingData.appliance_assembly\" formControlName=\"appliance_assembly\"> <label class=\"custom-control-label\" for=\"appliance_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,FourthFormGroup,'moving');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showMoving && showBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_moving[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"movingData && movingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"bedrooms_assembly\" [(ngModel)]=\"movingData && movingData.abedrooms_assembly\" formControlName=\"bedrooms_assembly\"> <label class=\"custom-control-label\" for=\"bedrooms_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthFormGroup,'moving');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showLivingRooms\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"movingData && movingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"livingRooms_assembly\" [(ngModel)]=\"movingData && movingData.livingRooms_assembly\" formControlName=\"livingRooms_assembly\"> <label class=\"custom-control-label\" for=\"livingRooms_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthFormGroup,'moving');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"movingData && movingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"familyRooms_assembly\" [(ngModel)]=\"movingData && movingData.familyRooms_assembly\" formControlName=\"familyRooms_assembly\"> <label class=\"custom-control-label\" for=\"familyRooms_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhFormGroup,'moving');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"movingData && movingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"diningRooms_assembly\" [(ngModel)]=\"movingData && movingData.diningRooms_assembly\" formControlName=\"diningRooms_assembly\"> <label class=\"custom-control-label\" for=\"diningRooms_assembly\">Need Help in Dining Rooms assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthFormGroup,'moving');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step   *ngIf = \"showMoving && showKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let kitchen of ninthFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"movingData && movingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"kitchen_assembly\" [(ngModel)]=\"movingData && movingData.kitchen_assembly\" formControlName=\"kitchen_assembly\"> <label class=\"custom-control-label\" for=\"kitchen_assembly\">Need Help in Kitchen assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthFormGroup,'moving');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"movingData && movingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"basement_assembly\" [(ngModel)]=\"movingData && movingData.basement_assembly\" formControlName=\"basement_assembly\"> <label class=\"custom-control-label\" for=\"basement_assembly\">Need Help in Basements assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthFormGroup,'moving');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"movingData && movingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"garage_assembly\" [(ngModel)]=\"movingData && movingData.garage_assembly\" formControlName=\"garage_assembly\"> <label class=\"custom-control-label\" for=\"garage_assembly\">Need Help in Garages assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhFormGroup,'moving');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showPatiyoYards\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tweleveFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of tweleveFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"movingData && movingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"patioyards_assembly\" [(ngModel)]=\"movingData && movingData.patioyards_assembly\" formControlName=\"patioyards_assembly\"> <label class=\"custom-control-label\" for=\"patioyards_assembly\">Need Help in patioyards assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,tweleveFormGroup,'moving');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"movingData && movingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"patioyards_assembly\" [(ngModel)]=\"movingData && movingData.patioyards_assembly\" formControlName=\"patioyards_assembly\"> <label class=\"custom-control-label\" for=\"patioyards_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOffices(stepper,thirteenFormGroup,'moving');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showOversized\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"movingData && movingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"patioyards_assembly\" [(ngModel)]=\"movingData && movingData.patioyards_assembly\" formControlName=\"patioyards_assembly\"> <label class=\"custom-control-label\" for=\"patioyards_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOverSized(stepper,fourteenFormGroup,'moving');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n<!---------------------------------------------------- Packing Overview ------------------------------------------------------------------>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showPacking\">\r\n\t\t\t\t\t<form [formGroup] = \"angPackedOptionsForm\"  class=\"esitame-form\"  >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to pack:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepickerPacking.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepickerPacking\" class=\"form-control\" id=\"job_start_date_packing\" formControlName=\"job_start_date_packing\"   [ngClass]=\"{ 'is-invalid': submitted_packing && _f1.job_start_date_packing.errors}\" [ngModel]=\"packingData && packingData.jobStart? packingData.jobStart : ''\"\r\n(ngModelChange)=\"packingData && packingData.jobStart=$event\"   placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepickerPacking\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepickerPacking></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_packing && _f1.job_start_date_packing.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_f1.job_start_date_packing.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_packing && _f1.job_start_date.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_f1.job_start_date.errors.matDatepickerMin\">Job Date is passed. This is an old job</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help Packing?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"packingoptions\" *ngFor=\"let packingoption of angPackedOptionsForm.controls.packingoptions.controls; let i = index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(packingData && packingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [ngModel] = \"(packingData && packingData.selected_options.includes(optionsPackedData[i].id))?true : false\"  [formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"packingoptions_{{i}}\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"packingoptions_{{i}}\">{{optionsPackedData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage2\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage2\">Select at least one options for packing</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\"  (click)=\"setPackingOptionsAvailable(stepper,'forPacking');\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button><mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showPacking\">\r\n\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"secondpackedFormGroup\">\r\n\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t<h1 class=\"step-title\">Packing from Location</h1> \r\n\t\t\t\t\t\t <div formArrayName=\"itemRows\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of secondpackedFormGroup.controls.itemRows['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Where are you moving from ?</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from\" (change)=\"toggleMovingFrom($event,i,itemrow)\" formControlName=\"moving_from\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving from ?</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"_f2.controls[i].controls.moving_from.errors.required\">Moving From is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_floor\"  formControlName=\"moving_from_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_floor.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_floor.errors.required\">Moving From floor is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_state\" formControlName=\"moving_from_state\" class=\"form-control \" (change)= \"getCountiesFrom($event,secondpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_state.errors }\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_state.errors.required\">Moving From state is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_county\" formControlName=\"moving_from_county\" class=\"form-control \" (change)= \"getCitiesFrom($event,i,secondpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties1\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_county.errors.required\">Moving From county is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> \r\n \r\n \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_city\" formControlName=\"moving_from_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_city.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities1\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_city.errors.required\">Moving From city is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>zipcode</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"  maxlength=\"5\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"  id=\"moving_from_zipcode\" formControlName=\"moving_from_zipcode\" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_zipcode.errors.required\">Moving From zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_from_address\" formControlName=\"moving_from_address\" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_address.errors.required\">Moving From address is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"secondpackedFormGroup.controls.itemRows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button (click)=\"addNewRow()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFromLocation(stepper,secondpackedFormGroup,'packing',thirdpackedFormGroup);\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t</form>\r\n\t\t\t  </mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showPacking\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirdpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Packing to Location</h1> \r\n\t\t\t\t\t\t   <div formArrayName=\"itemRowsTo\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of thirdpackedFormGroup.controls.itemRowsTo['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Where are you moving to ?</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to\" (change)=\"toggleMovingTo($event,i,itemrow)\" formControlName=\"moving_to\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to.errors}\" >\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving to ?</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to.errors.required\">Packing To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_floor\"  formControlName=\"moving_to_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_floor.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_floor.errors.required\">Packing To floor is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_state\" formControlName=\"moving_to_state\" class=\"form-control \" (change)= \"getCountiesTo($event,thirdpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_state.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_state.errors.required\">Packing To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_county\" formControlName=\"moving_to_county\" class=\"form-control \" (change)= \"getCitiesTo($event,i,thirdpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties2\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t    </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_county.errors.required\">Moving To county is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_city\" formControlName=\"moving_to_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_city.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities2\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_city.errors.required\">Packing To city is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Zipcode</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\"  maxlength=\"5\" class=\"form-control\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\" id=\"moving_to_zipcode\" formControlName=\"moving_to_zipcode\" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_zipcode.errors.required\">Packing To zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_to_address\" formControlName=\"moving_to_address\" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_address.errors.required\">Packing To address is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button *ngIf=\"thirdpackedFormGroup.controls.itemRowsTo.controls.length > 1\" (click)=\"deleteRowTo(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"addNewRowTo()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveToLocation(stepper,thirdpackedFormGroup,'packing');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form> \r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t <mat-step *ngIf = \"showPacking && showPackingAppliances\" >\r\n\t\t\t\t\t<form [formGroup] = \"fourthpackedFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of fourthpackedFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}} </label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_packing[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"packingData && packingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,fourthpackedFormGroup,'packing');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showPacking && showPackingBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthpackedFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_packing[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"packingData && packingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthpackedFormGroup,'packing');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingLivingRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthpackedFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"packingData && packingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthpackedFormGroup,'packing');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhpackedFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"packingData && packingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhpackedFormGroup,'packing');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthpackedFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"packingData && packingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthpackedFormGroup,'packing');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showPacking && showPackingKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let kitchen of ninthpackedFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"packingData && packingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthpackedFormGroup,'packing');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthpackedFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"packingData && packingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthpackedFormGroup,'packing');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhpackedFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"packingData && packingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhpackedFormGroup,'packing');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingPatiyoYards\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"twelevepackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of twelevepackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"packingData && packingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,twelevepackedFormGroup,'packing');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"packingData && packingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,thirteenpackedFormGroup,'packing');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingOversized\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"packingData && packingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,fourteenpackedFormGroup,'packing');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n<!---------------------------------------------------- Packing Overview ------------------------------------------------------------------>\r\n<!---------------------------------------------------- Unpacking Overview ------------------------------------------------------------------>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<mat-step *ngIf = \"showUnPacking\">\r\n\t\t\t\t\t<form [formGroup] = \"angunPackedOptionsForm\"  class=\"esitame-form\"  >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to Unpack:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepickerunPacking.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepickerunPacking\" class=\"form-control\" id=\"job_start_date_unpacking\" formControlName=\"job_start_date_unpacking\"   [ngClass]=\"{ 'is-invalid': submitted_unpacking && _Uf1.job_start_date_unpacking.errors}\" [ngModel]=\"unpackingData && unpackingData.jobStart? unpackingData.jobStart : ''\"\r\n(ngModelChange)=\"unpackingData && unpackingData.jobStart=$event\" placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepickerunPacking\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepickerunPacking></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_unpacking && _Uf1.job_start_date_unpacking.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_Uf1.job_start_date_unpacking.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help Unpacking?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"packingoptions\" *ngFor=\"let packingoption of angunPackedOptionsForm.controls.packingoptions.controls; let i = index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(unpackingData && unpackingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [ngModel] = \"(unpackingData && unpackingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"unpackingoptions_{{i}}\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"unpackingoptions_{{i}}\">{{optionsPackedData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage3\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage3\">Select at least one options for unpacking</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\" (click)=\"setPackingOptionsAvailable(stepper,'forUnpacking');\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\t\t\r\n\t\t\t\t<mat-step *ngIf = \"showUnPacking\">\r\n\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"secondunpackedFormGroup\">\r\n\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t<h1 class=\"step-title\">Unpacking from Location</h1> \r\n\t\t\t\t\t\t <div formArrayName=\"itemRows\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of secondunpackedFormGroup.controls.itemRows['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Where are you moving from ?</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from\" (change)=\"toggleMovingFrom($event,i,itemrow)\" formControlName=\"moving_from\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving from ?</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"_UPf2.controls[i].controls.moving_from.errors.required\">Moving From is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_floor\"  formControlName=\"moving_from_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_floor.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_floor.errors.required\">Moving From floor is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_state\" formControlName=\"moving_from_state\" class=\"form-control \" (change)= \"getCountiesFrom($event,secondunpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_state.errors }\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_state.errors.required\">Moving From state is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_county\" formControlName=\"moving_from_county\" class=\"form-control \" (change)= \"getCitiesFrom($event,i,secondunpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties1\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_county.errors.required\">Moving From county is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> \r\n \r\n \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_city\" formControlName=\"moving_from_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_city.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities1\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_city.errors.required\">Moving From city is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>zipcode</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"  maxlength=\"5\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"  id=\"moving_from_zipcode\" formControlName=\"moving_from_zipcode\" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_zipcode.errors.required\">Moving From zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_from_address\" formControlName=\"moving_from_address\" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_address.errors.required\">Moving From address is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"secondunpackedFormGroup.controls.itemRows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button (click)=\"addNewRow()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFromLocation(stepper,secondunpackedFormGroup,'unpacking',thirdunpackedFormGroup);\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t</form>\r\n\t\t\t  </mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showUnPacking\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirdunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Unpacking to Location</h1> \r\n\t\t\t\t\t\t   <div formArrayName=\"itemRowsTo\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of thirdunpackedFormGroup.controls.itemRowsTo['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Where are you moving to ?</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to\" (change)=\"toggleMovingTo($event,i,itemrow)\" formControlName=\"moving_to\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to.errors}\" >\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving to ?</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to.errors.required\">Packing To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_floor\"   formControlName=\"moving_to_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_floor.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_floor.errors.required\">Packing To floor is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_state\" formControlName=\"moving_to_state\" class=\"form-control \" (change)= \"getCountiesTo($event,thirdunpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_state.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_state.errors.required\">Packing To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_county\" formControlName=\"moving_to_county\" class=\"form-control \" (change)= \"getCitiesTo($event,i,thirdunpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties2\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t    </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_county.errors.required\">Moving To county is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_city\" formControlName=\"moving_to_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_city.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities2\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_city.errors.required\">Packing To city is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Zipcode</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\"  maxlength=\"5\" class=\"form-control\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\" id=\"moving_to_zipcode\" formControlName=\"moving_to_zipcode\" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_zipcode.errors.required\">Packing To zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_to_address\" formControlName=\"moving_to_address\" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_address.errors.required\">Packing To address is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button *ngIf=\"thirdunpackedFormGroup.controls.itemRowsTo.controls.length > 1\" (click)=\"deleteRowTo(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"addNewRowTo()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveToLocation(stepper,thirdunpackedFormGroup,'unpacking');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form> \r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showUnPacking && showUnpackingAppliances\" >\r\n\t\t\t\t\t<form [formGroup] = \"fourthunpackedFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of fourthunpackedFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}} </label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_unpacking[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"unpackingData && unpackingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,fourthunpackedFormGroup,'unpacking');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showUnPacking && showUnpackingBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthunpackedFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_unpacking[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"unpackingData && unpackingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthunpackedFormGroup,'unpacking');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingLivingRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthunpackedFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"unpackingData && unpackingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthunpackedFormGroup,'unpacking');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhunpackedFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"unpackingData && unpackingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhunpackedFormGroup,'unpacking');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthunpackedFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"unpackingData && unpackingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthunpackedFormGroup,'unpacking');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showUnPacking && showUnpackingKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let kitchen of ninthunpackedFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"unpackingData && unpackingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthunpackedFormGroup,'unpacking');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthunpackedFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"unpackingData && unpackingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthunpackedFormGroup,'unpacking');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhunpackedFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"unpackingData && unpackingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhunpackedFormGroup,'unpacking');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingPatiyoYards\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tweleveunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of tweleveunpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unpackingData && unpackingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,tweleveunpackedFormGroup,'unpacking');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenunpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unpackingData && unpackingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,thirteenunpackedFormGroup,'unpacking');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingOversized\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenunpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unpackingData && unpackingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,fourteenunpackedFormGroup,'unpacking');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\t\r\n<!---------------------------------------------------- Unpacking Overview ------------------------------------------------------------------>\r\n<!---------------------------------------------------- Loading Overview ------------------------------------------------------------------>\r\n\t\t\t\t <mat-step *ngIf = \"showLoading\">\r\n\t\t\t\t\t<form [formGroup] = \"angLoadingOptionsForm\"  class=\"esitame-form\"  >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to Loading:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepickerLoading.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepickerLoading\" class=\"form-control\" id=\"job_start_date_loading\" formControlName=\"job_start_date_loading\" [ngClass]=\"{ 'is-invalid': submitted_loading && _fL1.job_start_date_loading.errors}\" [ngModel]=\"loadingData && loadingData.jobStart? loadingData.jobStart : ''\"\r\n(ngModelChange)=\"loadingData && loadingData.jobStart=$event\"   placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepickerLoading\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepickerLoading></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_loading && _fL1.job_start_date_loading.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_fL1.job_start_date_loading.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help Loading?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"packingoptions\" *ngFor=\"let packingoption of angLoadingOptionsForm.controls.packingoptions.controls; let i = index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(loadingData && loadingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [ngModel] = \"(loadingData && loadingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"loadinggoptions_{{i}}\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"loadinggoptions_{{i}}\">{{optionsPackedData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage4\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage4\">Select at least one options for loading</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\"  (click)=\"setLoadingOptionsAvailable(stepper);\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\t\t\t\r\n\t\t\t\t<mat-step *ngIf = \"showLoading\">\r\n\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"secondloadingFormGroup\">\r\n\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t<h1 class=\"step-title\">Loading from Location</h1> \r\n\t\t\t\t\t\t <div formArrayName=\"itemRows\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of secondloadingFormGroup.controls.itemRows['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Where are you loading from ?</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from\" (change)=\"toggleMovingFrom($event,i,itemrow)\" formControlName=\"moving_from\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you loading from ?</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"fL2.controls[i].controls.moving_from.errors.required\">Moving From is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_floor\" formControlName=\"moving_from_floor\"  class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_floor.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_floor.errors.required\">Moving From floor is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_state\" formControlName=\"moving_from_state\" class=\"form-control \" (change)= \"getCountiesFrom($event,secondloadingFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_state.errors }\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_state.errors.required\">Moving From state is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_county\" formControlName=\"moving_from_county\" class=\"form-control \" (change)= \"getCitiesFrom($event,i,secondloadingFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties1\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_county.errors.required\">Moving From county is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> \r\n \r\n \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_city\" formControlName=\"moving_from_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_city.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities1\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_city.errors.required\">Moving From city is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>zipcode</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"  maxlength=\"5\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"  id=\"moving_from_zipcode\" formControlName=\"moving_from_zipcode\" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_zipcode.errors.required\">Moving From zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_from_address\" formControlName=\"moving_from_address\" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_address.errors.required\">Moving From address is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"secondloadingFormGroup.controls.itemRows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button (click)=\"addNewRow()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFromLoadingLocation(stepper,secondloadingFormGroup,'loading',thirdloadingFormGroup);\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t</form>\r\n\t\t\t  </mat-step>\r\n\t\t\t \r\n\t\t\t\t  <mat-step *ngIf = \"showLoadingAppliances\" >\r\n\t\t\t\t\t<form [formGroup]=\"FourthloadingFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of FourthloadingFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}} </label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_loading[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"loadingData && loadingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,FourthloadingFormGroup,'loading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showLoading && showLoadingBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthloadingFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_loading[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"loadingData && loadingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthloadingFormGroup,'loading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingLivingRooms\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthloadingFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"loadingData && loadingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthloadingFormGroup,'loading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhloadingFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"loadingData && loadingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhloadingFormGroup,'loading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthloadingFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"loadingData && loadingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthloadingFormGroup,'loading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step   *ngIf = \"showLoading && showLoadingKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let appliance of ninthloadingFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"loadingData && loadingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthloadingFormGroup,'loading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthloadingFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"loadingData && loadingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthloadingFormGroup,'loading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhloadingFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"loadingData && loadingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhloadingFormGroup,'loading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingPatiyoYards\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tweleveloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of tweleveloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"loadingData && loadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,tweleveloadingFormGroup,'loading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"loadingData && loadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOffices(stepper,thirteenloadingFormGroup,'loading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingOversized\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"loadingData && loadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOverSized(stepper,fourteenloadingFormGroup,'loading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t<mat-step *ngIf = \"showUnLoading\">\r\n\t\t\t\t\t<form [formGroup] = \"angUnloadingOptionsForm\"  class=\"esitame-form\"  >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to Unloading:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepickerUnloading.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepickerUnloading\" class=\"form-control\" id=\"job_start_date_unloading\" formControlName=\"job_start_date_unloading\"   [ngClass]=\"{ 'is-invalid': submitted_unloading && _fUL1.job_start_date_unloading.errors}\" [ngModel]=\"unloadingData && unloadingData.jobStart? unloadingData.jobStart : ''\"\r\n(ngModelChange)=\"unloadingData && unloadingData.jobStart=$event\"    placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepickerUnloading\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepickerUnloading></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_unloading && _fUL1.job_start_date_unloading.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_fUL1.job_start_date_unloading.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help Unloading?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"packingoptions\" *ngFor=\"let packingoption of angUnloadingOptionsForm.controls.packingoptions.controls; let i = index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\" (unloadingData && unloadingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [ngModel] = \"(unloadingData && unloadingData.selected_options.includes(optionsPackedData[i].id))?true : false\"[formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"unloadingoptions_{{i}}\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"unloadingoptions_{{i}}\">{{optionsPackedData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage5\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage5\">Select at least one options for unloading</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\"  (click)=\"setUnloadingOptionsAvailable(stepper);\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\t\t\r\n\t\t\t\t<mat-step *ngIf = \"showUnLoading\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirdunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Unloading to Location</h1> \r\n\t\t\t\t\t\t   <div formArrayName=\"itemRowsTo\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of thirdunloadingFormGroup.controls.itemRowsTo['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Where are you moving to ?</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to\" (change)=\"toggleMovingTo($event,i,itemrow)\" formControlName=\"moving_to\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to.errors}\" >\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving to ?</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to.errors.required\">Moving To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_floor\"  formControlName=\"moving_to_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_floor.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_floor.errors.required\">Moving To floor is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_state\" formControlName=\"moving_to_state\" class=\"form-control \" (change)= \"getCountiesTo($event,thirdunloadingFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_state.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_state.errors.required\">Moving To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_county\" formControlName=\"moving_to_county\" class=\"form-control \" (change)= \"getCitiesTo($event,i,thirdunloadingFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties2\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t    </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_county.errors.required\">Moving To county is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_city\" formControlName=\"moving_to_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_city.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities2\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_city.errors.required\">Moving To city is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Zipcode</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\"  maxlength=\"5\" class=\"form-control\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\" id=\"moving_to_zipcode\" formControlName=\"moving_to_zipcode\" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_zipcode.errors.required\">Moving To zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_to_address\" formControlName=\"moving_to_address\" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_address.errors.required\">Moving To address is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button *ngIf=\"thirdunloadingFormGroup.controls.itemRowsTo.controls.length > 1\" (click)=\"deleteRowTo(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"addNewRowTo()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveToLocation(stepper,thirdunloadingFormGroup,'unloading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form> \r\n\t\t\t\t  </mat-step>\r\n\t\t\t \r\n\t\t\t\t  <mat-step *ngIf = \"showUnloadingAppliances\" >\r\n\t\t\t\t\t<form [formGroup]=\"fourthunloadingFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of fourthunloadingFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}} </label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_unloading[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"unloadingData && unloadingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,fourthunloadingFormGroup,'unloading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showUnLoading && showUnloadingBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthunloadingFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_unloading[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"unloadingData && unloadingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthunloadingFormGroup,'unloading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnLoading && showUnloadingLivingRooms\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthunloadingFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"unloadingData && unloadingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthunloadingFormGroup,'unloading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnLoading && showUnloadingFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhunloadingFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"unloadingData && unloadingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhunloadingFormGroup,'unloading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnLoading && showUnloadingDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthunloadingFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"unloadingData && unloadingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthunloadingFormGroup,'unloading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step   *ngIf = \"showUnLoading && showUnloadingKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let kitchen of ninthunloadingFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"unloadingData && unloadingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthunloadingFormGroup,'unloading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnLoading && showUnloadingBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthunloadingFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"unloadingData && unloadingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthunloadingFormGroup,'unloading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnLoading && showUnloadingGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhunloadingFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"unloadingData && unloadingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhunloadingFormGroup,'unloading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnLoading && showUnloadingPatiyoYards\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tweleveunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of tweleveunloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unloadingData && unloadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,tweleveunloadingFormGroup,'unloading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showUnLoading && showUnloadingOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenunloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unloadingData && unloadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOffices(stepper,thirteenunloadingFormGroup,'unloading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnLoading && showUnloadingOversized\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenunloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unloadingData && unloadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOverSized(stepper,fourteenunloadingFormGroup,'unloading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n<!---------------------------------------------------- Loading Overview ------------------------------------------------------------------>\r\n<!---------------------------------------------------- Unloading Overview ------------------------------------------------------------------>\r\n\t\t\t\t\t\r\n\t\t\t\t  <mat-step>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<div class=\"step1\" >\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Basic Information</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Firstname </span> {{ jobData.firstname }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ jobData.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{ jobData.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{jobData.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Lastname </span>  {{ jobData.lastname }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{ jobData.county }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Phone </span>  {{ jobData.phone }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{jobData.address}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t \t<div class=\"step1\" *ngIf=\"showMoving && movingData\" >\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Moving Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\"  *ngIf=\"movingData && movingData.moving_from.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of movingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"movingData && movingData.moving_to.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of movingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Moved\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.appliances  && movingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of movingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.appliances_misc\">{{ movingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.appliances_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.appliances_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.appliances && movingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.bedRooms  && movingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of movingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.bedrooms_misc\">{{ movingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.bedRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.bedRooms_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.bedRooms && movingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.livingRooms && movingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of movingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.livingRooms_misc\">{{ movingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.livingRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.livingRooms_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.livingRooms && movingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.familyRooms && movingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of movingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.familyRooms_misc\">{{ movingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.familyRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.familyRooms_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.familyRooms && movingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.diningRooms  && movingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of movingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.diningRooms_misc\">{{ movingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.diningRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.diningRooms_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.diningRooms && movingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.kitchen && movingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of movingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.kitchen_misc\">{{ movingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.kitchen_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.kitchen_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.kitchen && movingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.basement && movingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of movingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.basement_misc\">{{ movingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.basement_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.basement_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.basement && movingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.garage  && movingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of movingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.garage_misc\">{{ movingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.garage_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.garage_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.garage && movingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.patioYard  && movingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of movingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.patioYard_misc\">{{ movingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.patioYard_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.patioYard_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.patioYard && movingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t<div class=\"step1\" *ngIf=\"showPacking && packingData\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Packing Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"packingData && packingData.moving_from.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of packingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"packingData && packingData.moving_to.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of packingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Packed\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.appliances  && packingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of packingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.appliances_misc\">{{ packingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.appliances && packingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.bedRooms  && packingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of packingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.bedrooms_misc\">{{ packingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.bedRooms && packingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.livingRooms && packingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of packingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.livingRooms_misc\">{{ packingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.livingRooms && packingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.familyRooms && packingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of packingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.familyRooms_misc\">{{ packingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.familyRooms && packingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.diningRooms  && packingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of packingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.diningRooms_misc\">{{ packingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.diningRooms && packingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.kitchen && packingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of packingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.kitchen_misc\">{{ packingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.kitchen && packingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.basement && packingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of packingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.basement_misc\">{{ packingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.basement && packingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.garage  && packingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of packingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.garage_misc\">{{ packingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.garage && packingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.patioYard  && packingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of packingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.patioYard_misc\">{{ packingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.patioYard && packingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t<div class=\"step1\" *ngIf=\"showUnPacking && unpackingData\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Unpacking Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"unpackingData && unpackingData.moving_from.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div  *ngFor=\"let movingfrom of unpackingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"unpackingData && unpackingData.moving_to.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div  *ngFor=\"let movingto of unpackingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Unpacked\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.appliances  && unpackingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of unpackingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.appliances_misc\">{{ unpackingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.appliances && unpackingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.bedRooms  && unpackingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of unpackingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.bedrooms_misc\">{{ unpackingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.bedRooms && unpackingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.livingRooms && unpackingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of unpackingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.livingRooms_misc\">{{ unpackingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.livingRooms && unpackingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.familyRooms && unpackingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of unpackingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.familyRooms_misc\">{{ unpackingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.familyRooms && unpackingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.diningRooms  && unpackingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of unpackingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.diningRooms_misc\">{{ unpackingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.diningRooms && unpackingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.kitchen && unpackingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of unpackingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.kitchen_misc\">{{ unpackingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.kitchen && unpackingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.basement && unpackingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of unpackingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.basement_misc\">{{ unpackingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.basement && unpackingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.garage  && unpackingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of unpackingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.garage_misc\">{{ unpackingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.garage && unpackingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.patioYard  && unpackingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of unpackingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.patioYard_misc\">{{ unpackingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.patioYard && unpackingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"step1\" *ngIf=\"showLoading && loadingData\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Loading Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-12\"  *ngIf=\"loadingData && loadingData.moving_from.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of loadingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Loaded\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.appliances  && loadingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of loadingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.appliances_misc\">{{ loadingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.appliances && loadingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.bedRooms  && loadingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of loadingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.bedrooms_misc\">{{ loadingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.bedRooms && loadingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.livingRooms && loadingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of loadingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.livingRooms_misc\">{{ loadingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.livingRooms && loadingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.familyRooms && loadingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of loadingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.familyRooms_misc\">{{ loadingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.familyRooms && loadingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.diningRooms  && loadingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of loadingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.diningRooms_misc\">{{ loadingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.diningRooms && loadingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.kitchen && loadingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of loadingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.kitchen_misc\">{{ loadingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.kitchen && loadingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.basement && loadingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of loadingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.basement_misc\">{{ loadingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.basement && loadingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.garage  && loadingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of loadingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.garage_misc\">{{ loadingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.garage && loadingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.patioYard  && loadingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of loadingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.patioYard_misc\">{{ loadingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.patioYard && loadingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t<div class=\"step1\" *ngIf=\"showUnLoading && unloadingData\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Unloading Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-12\"  *ngIf=\"unloadingData && unloadingData.moving_to.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unloadingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Unloaded\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.appliances  && unloadingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of unloadingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.appliances_misc\">{{ unloadingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.appliances && unloadingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.bedRooms  && unloadingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of unloadingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.bedrooms_misc\">{{ unloadingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.bedRooms && unloadingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.livingRooms && unloadingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of unloadingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.livingRooms_misc\">{{ unloadingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.livingRooms && unloadingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.familyRooms && unloadingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of unloadingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.familyRooms_misc\">{{ unloadingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.familyRooms && unloadingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.diningRooms  && unloadingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of unloadingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.diningRooms_misc\">{{ unloadingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.diningRooms && unloadingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.kitchen && unloadingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of unloadingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.kitchen_misc\">{{ unloadingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.kitchen && unloadingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.basement && unloadingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of unloadingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.basement_misc\">{{ unloadingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.basement && unloadingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.garage  && unloadingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of unloadingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.garage_misc\">{{ unloadingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.garage && unloadingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.patioYard  && unloadingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of unloadingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.patioYard_misc\">{{ unloadingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.patioYard && unloadingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\" (click)=\"setupJob(stepper);\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t<mat-progress-spinner class=\"example-margin\" *ngIf=\"showLoader\"[color]=\"red\" diameter=\"50\"  mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t   <mat-step>\r\n\t\t\t\t  <form [formGroup]=\"secondFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Submitted!</h1> \r\n\t\t\t\t\t\t\t<div class=\"form-header text-center\">\r\n\t\t\t\t\t\t\t\t<i class=\"fas fa-check\"></i>\r\n\t\t\t\t\t\t\t\t<h3>Thank You</h3>\r\n\t\t\t\t\t\t\t\t<br> \r\n\t\t\t\t\t\t\t\t<h2>Job has been created Successfully</h2>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t \r\n\t\t\t</mat-horizontal-stepper>\r\n\t\t</div>\r\n\t</div>\r\n</div> \r\n\r\n\t\t\t\r\n\t\t"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/createjob/createjob.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/createjob/createjob.component.ts ***!
  \****************************************************************************/
/*! exports provided: CreateJobComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateJobComponent", function() { return CreateJobComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _array_validator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./array.validator */ "./src/app/frontend/views/jobs/users/createjob/array.validator.ts");






//import { PasswordValidator } from '../../../validator/password.validator';



//import {toLocationModule} from './toLocationFile.js';
var CreateJobComponent = /** @class */ (function () {
    function CreateJobComponent(router, _flashMessagesService, userservice, jobservice, fb, titleService) {
        this.router = router;
        this._flashMessagesService = _flashMessagesService;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.color = 'primary';
        this.mode = 'determinate';
        this.title = 'SignUp';
        this.result = '';
        this.response = "";
        this.states = '';
        this.user = "";
        this.counties = '';
        this.counties1 = '';
        this.counties2 = '';
        this.roles = '';
        this.cities = '';
        this.cities1 = '';
        this.cities2 = '';
        this.first_show = false;
        this.show = false;
        this.topHeading = '';
        this.showThis = false;
        this.stateName = '';
        this.statename = '';
        this.countyName = '';
        //passwordFormGroup: FormGroup;
        this.submitted = false;
        this.showLoader = false;
        this.submitted_service = false;
        this.isLinear = false;
        this.showtostep = false;
        this.showfromstep = false;
        //All steps formgroup
        this.serviceFormArray = '';
        this.serviceNameArray = '';
        this.alllocations = '';
        this.allappliances = '';
        this.appliance_misc = '';
        this.apppli = "";
        this.bedrooms = '';
        this.bedrooms_misc = '';
        this.beds = "";
        this.submitted_unloading = '';
        this.submitted_loading = '';
        this.submitted_unpacking = '';
        this.submitted_packing = '';
        this.submitted_moving = '';
        this.selectedServices = "";
        this.basements = '';
        this.whichFromGroup = '';
        this.nextFromGroup = '';
        this.diningrooms = '';
        this.familyrooms = '';
        this.garages = '';
        this.kitchens = '';
        this.livingrooms = '';
        this.patioyards = '';
        this.dining = "";
        this.family = "";
        this.base = "";
        this.garge = "";
        this.kitch = "";
        this.living = "";
        this.patio = "";
        this.button_text = '';
        this.thisisdone = "";
        this.optionsData = [
            { id: 1, name: 'Appliances (includes Washing machine, Dryer, refrigerator, Freezer, Stove, Dishwasher..etc)' },
            { id: 2, name: 'Bedrooms' },
            { id: 3, name: 'Living Room' },
            { id: 4, name: 'Family Room Services' },
            { id: 5, name: 'Dining Room' },
            { id: 6, name: 'Kitchen' },
            { id: 7, name: 'Basement' },
            { id: 8, name: 'Garage' },
            { id: 9, name: 'Patio/Yard items' },
            { id: 10, name: 'Office' },
            { id: 11, name: 'Oversized items/other (Piano, Safe Machinery, Exercise equipment..etc)' },
        ];
        this.optionsPackedData = [
            { id: 12, name: 'Appliances (includes Washing machine, Dryer, refrigerator, Freezer, Stove, Dishwasher..etc)' },
            { id: 13, name: 'Bedrooms' },
            { id: 14, name: 'Living Room' },
            { id: 15, name: 'Family Room Services' },
            { id: 16, name: 'Dining Room' },
            { id: 17, name: 'Kitchen' },
            { id: 18, name: 'Basement' },
            { id: 19, name: 'Garage' },
            { id: 20, name: 'Patio/Yard items' },
            { id: 21, name: 'Office' },
            { id: 22, name: 'Oversized items/other (Piano, Safe Machinery, Exercise equipment..etc)' },
        ];
        // Miscllaneous
        this.mindateset = '';
        this.minDate2 = '';
        this.setmindate = '';
        this.minDate = '';
        this.myGroup = '';
        this.myGroup3 = '';
        this.showAppliances = false;
        this.showBedrooms = false;
        this.showLivingRooms = false;
        this.showFamilyRooms = false;
        this.showDiningRooms = false;
        this.showKitchen = false;
        this.showBasement = false;
        this.showGarage = false;
        this.showPatiyoYards = false;
        this.showOffices = false;
        this.showOversized = false;
        this.showMoving = false;
        this.showPacking = false;
        this.showUnPacking = false;
        this.showLoading = false;
        this.showUnLoading = false;
        this.showPackingAppliances = false;
        this.showPackingBedrooms = false;
        this.showPackingLivingRooms = false;
        this.showPackingFamilyRooms = false;
        this.showPackingDiningRooms = false;
        this.showPackingKitchen = false;
        this.showPackingBasement = false;
        this.showPackingGarage = false;
        this.showPackingPatiyoYards = false;
        this.showPackingOffices = false;
        this.showPackingOversized = false;
        this.showLoadingAppliances = false;
        this.showLoadingBedrooms = false;
        this.showLoadingLivingRooms = false;
        this.showLoadingFamilyRooms = false;
        this.showLoadingDiningRooms = false;
        this.showLoadingKitchen = false;
        this.showLoadingBasement = false;
        this.showLoadingGarage = false;
        this.showLoadingPatiyoYards = false;
        this.showLoadingOffices = false;
        this.showLoadingOversized = false;
        this.showUnloadingAppliances = false;
        this.showUnloadingBedrooms = false;
        this.showUnloadingLivingRooms = false;
        this.showUnloadingFamilyRooms = false;
        this.showUnloadingDiningRooms = false;
        this.showUnloadingKitchen = false;
        this.showUnloadingBasement = false;
        this.showUnloadingGarage = false;
        this.showUnloadingPatiyoYards = false;
        this.showUnloadingOffices = false;
        this.showUnloadingOversized = false;
        this.showUnpackingAppliances = false;
        this.showUnpackingBedrooms = false;
        this.showUnpackingLivingRooms = false;
        this.showUnpackingFamilyRooms = false;
        this.showUnpackingDiningRooms = false;
        this.showUnpackingKitchen = false;
        this.showUnpackingBasement = false;
        this.showUnpackingGarage = false;
        this.showUnpackingPatiyoYards = false;
        this.showUnpackingOffices = false;
        this.showUnpackingOversized = false;
        this.apppli_unloading = "";
        this.beds_unloading = "";
        this.base_unloading = "";
        this.dining_unloading = "";
        this.family_unloading = "";
        this.garge_unloading = "";
        this.kitch_unloading = "";
        this.living_unloading = "";
        this.patio_unloading = "";
        this.apppli_loading = "";
        this.beds_loading = "";
        this.base_loading = "";
        this.dining_loading = "";
        this.family_loading = "";
        this.garge_loading = "";
        this.kitch_loading = "";
        this.living_loading = "";
        this.patio_loading = "";
        this.apppli_unpacking = "";
        this.beds_unpacking = "";
        this.base_unpacking = "";
        this.dining_unpacking = "";
        this.family_unpacking = "";
        this.garge_unpacking = "";
        this.kitch_unpacking = "";
        this.living_unpacking = "";
        this.patio_unpacking = "";
        this.apppli_packing = "";
        this.beds_packing = "";
        this.base_packing = "";
        this.dining_packing = "";
        this.family_packing = "";
        this.garge_packing = "";
        this.kitch_packing = "";
        this.living_packing = "";
        this.patio_packing = "";
        this.apppli_moving = "";
        this.beds_moving = "";
        this.base_moving = "";
        this.dining_moving = "";
        this.family_moving = "";
        this.garge_moving = "";
        this.kitch_moving = "";
        this.living_moving = "";
        this.patio_moving = "";
        this.jobData = '';
        this.movingData = '';
        this.packingData = '';
        this.unpackingData = '';
        this.loadingData = '';
        this.unloadingData = '';
        this.currentIndex = "";
        this.totalIndex = "";
        this.jobservices = '';
        this.firstService = '';
        this.secondService = '';
        this.thirdService = '';
        this.submitted_1_2 = false;
        this.submitted_2 = false;
        this.submitted_4 = false;
        this.submitted_3 = false;
        this.submitted_5 = false;
        this.submitted_6 = false;
        this.submitted_7 = false;
        this.submitted_8 = false;
        this.submitted_9 = false;
        this.submitted_10 = false;
        this.submitted_11 = false;
        this.submitted_12 = false;
        this.submitted_13 = false;
        this.submitted_14 = false;
        this.first_submitted = false;
        this.submitted_newform = false;
        this.submittedP_2 = false;
        this.submittedP_3 = false;
        this.showErrorMessage1 = false;
        this.showErrorMessage2 = false;
        this.showErrorMessage3 = false;
        this.showErrorMessage4 = false;
        this.showErrorMessage5 = false;
        this.MOVING_ID = '5c544a8515f5bb0c908b3014';
        this.PACKING_ID = '5c544a9315f5bb0c908b3015';
        this.UNPACKING_ID = '5c544aa115f5bb0c908b3016';
        this.LOADING_ID = '5e96e418ddfd4f5624b0a404';
        this.UNLOADING_ID = '5e96e428ddfd4f5624b0a405';
        this.totalNumberofRow = 1;
        this.newnumberofrows = 0;
        this.saveNumber = 0;
        /*--------------------------------------------- Third Group Elements ----------------------- */
        /*--------------------------------------------- Fourth Group Elements ----------------------- */
        this.clearFormArray = function (formArray) {
            formArray.controls = [];
            formArray.setValue([]);
        };
        this.titleService.setTitle('Create Job | MoveLaunch');
        this.createForm();
        this.moving_forms();
        this.packing_forms();
        this.unpacking_forms();
        this.loading_forms();
        this.unloading_forms();
        this.addCheckboxes();
        this.addServicesCheckboxes();
        this.addPackedCheckboxes();
        this.addUnPackedCheckboxes();
        this.addLoadingCheckboxes();
        this.addUnLoadingCheckboxes();
    }
    CreateJobComponent.prototype.addCheckboxes = function () {
        var _this = this;
        this.optionsData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angOptionsForm.controls.options.push(control);
        });
    };
    CreateJobComponent.prototype.addServicesCheckboxes = function () {
        var _this = this;
        this.jobservice.getServices().subscribe(function (result) {
            _this.jobservices = result.data;
            _this.jobservices.forEach(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.angForm.controls.services.push(control);
            });
        });
    };
    CreateJobComponent.prototype.addPackedCheckboxes = function () {
        var _this = this;
        this.optionsPackedData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angPackedOptionsForm.controls.packingoptions.push(control);
        });
    };
    CreateJobComponent.prototype.addUnPackedCheckboxes = function () {
        var _this = this;
        this.optionsPackedData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angunPackedOptionsForm.controls.packingoptions.push(control);
        });
    };
    CreateJobComponent.prototype.addLoadingCheckboxes = function () {
        var _this = this;
        this.optionsPackedData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angLoadingOptionsForm.controls.packingoptions.push(control);
        });
    };
    CreateJobComponent.prototype.addUnLoadingCheckboxes = function () {
        var _this = this;
        this.optionsPackedData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angUnloadingOptionsForm.controls.packingoptions.push(control);
        });
    };
    /* Signup Form validation */
    CreateJobComponent.prototype.createForm = function () {
        this.getSate();
        this.getRoles('user');
        this.angForm = this.fb.group({
            services: this.fb.array([], _array_validator__WEBPACK_IMPORTED_MODULE_8__["ArrayValidators"].minLength(1)),
            jobtype: ['new', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.angOptionsForm = this.fb.group({
            options: this.fb.array([], _array_validator__WEBPACK_IMPORTED_MODULE_8__["ArrayValidators"].minLength(1)),
            job_start_date: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.angPackedOptionsForm = this.fb.group({
            packingoptions: this.fb.array([]),
            job_start_date_packing: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.angunPackedOptionsForm = this.fb.group({
            packingoptions: this.fb.array([]),
            job_start_date_unpacking: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.angLoadingOptionsForm = this.fb.group({
            packingoptions: this.fb.array([]),
            job_start_date_loading: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.angUnloadingOptionsForm = this.fb.group({
            packingoptions: this.fb.array([]),
            job_start_date_unloading: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
    };
    CreateJobComponent.prototype.moving_forms = function () {
        this.secondFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.FourthFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
            appliance_assembly: ['']
        });
        this.FifthFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
            bedrooms_assembly: ['']
        });
        this.sixthFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
            livingRooms_assembly: ['']
        });
        this.seventhFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
            familyRooms_assembly: ['']
        });
        this.eigthFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
            diningRooms_assembly: ['']
        });
        this.ninthFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
            kitchen_assembly: ['']
        });
        this.tenthFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
            basement_assembly: ['']
        });
        this.eleventhFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
            garage_assembly: ['']
        });
        this.tweleveFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
            patioyards_assembly: ['']
        });
        this.thirteenFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
            patioyards_assembly: ['']
        });
        this.fourteenFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
            patioyards_assembly: ['']
        });
    };
    CreateJobComponent.prototype.packing_forms = function () {
        this.secondpackedFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdpackedFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.fourthpackedFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
        });
        this.FifthpackedFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
        });
        this.sixthpackedFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
        });
        this.seventhpackedFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
        });
        this.eigthpackedFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
        });
        this.ninthpackedFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
        });
        this.tenthpackedFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
        });
        this.eleventhpackedFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
        });
        this.twelevepackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.thirteenpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.fourteenpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
    };
    CreateJobComponent.prototype.unpacking_forms = function () {
        this.secondunpackedFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdunpackedFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.fourthunpackedFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
        });
        this.FifthunpackedFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
        });
        this.sixthunpackedFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
        });
        this.seventhunpackedFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
        });
        this.eigthunpackedFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
        });
        this.ninthunpackedFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
        });
        this.tenthunpackedFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
        });
        this.eleventhunpackedFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
        });
        this.tweleveunpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.thirteenunpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.fourteenunpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
    };
    CreateJobComponent.prototype.loading_forms = function () {
        this.secondloadingFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdloadingFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.FourthloadingFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
        });
        this.FifthloadingFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
        });
        this.sixthloadingFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
        });
        this.seventhloadingFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
        });
        this.eigthloadingFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
        });
        this.ninthloadingFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
        });
        this.tenthloadingFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
        });
        this.eleventhloadingFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
        });
        this.tweleveloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.thirteenloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.fourteenloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
    };
    CreateJobComponent.prototype.unloading_forms = function () {
        this.secondunloadingFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdunloadingFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.fourthunloadingFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
        });
        this.FifthunloadingFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
        });
        this.sixthunloadingFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
        });
        this.seventhunloadingFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
        });
        this.eigthunloadingFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
        });
        this.ninthunloadingFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
        });
        this.tenthunloadingFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
        });
        this.eleventhunloadingFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
        });
        this.tweleveunloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.thirteenunloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.fourteenunloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
    };
    /*--------------------------------------------- Second Group Elements ----------------------- */
    CreateJobComponent.prototype.setLocations = function (myFormGroup, savedDataToLocation) {
        var _this = this;
        this.myGroup = myFormGroup;
        console.log('setLocations' + localStorage.getItem('jobType'));
        if (localStorage.getItem('jobType') == 'saved') {
            var control_1 = this.myGroup.controls.itemRows;
            if (savedDataToLocation && savedDataToLocation.moving_from.length > 0) {
                this.alllocations = savedDataToLocation.moving_from;
                this.alllocations.forEach(function (x) {
                    _this.userservice.getCounties(x.state).subscribe(function (result) {
                        _this.counties1 = result;
                    });
                    _this.userservice.getCities(x.county, x.state).subscribe(function (result) {
                        _this.cities1 = result;
                    });
                    control_1.push(_this.fb.group({
                        moving_from: x.movingType,
                        moving_from_floor: x.floor,
                        moving_from_state: x.state,
                        moving_from_county: x.county,
                        moving_from_city: x.city,
                        moving_from_zipcode: x.zipcode,
                        moving_from_address: x.address1,
                    }));
                });
            }
            else {
                control_1.push(this.fb.group({
                    moving_from: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
                }));
            }
        }
        else {
            //this.myGroup.setControl('itemRows', this.fb.array([]));
            var control = this.myGroup.controls.itemRows;
            control.push(this.fb.group({
                moving_from: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
            }));
        }
    };
    CreateJobComponent.prototype.initItemRows = function () {
        return this.fb.group({
            moving_from: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
    };
    Object.defineProperty(CreateJobComponent.prototype, "formArr", {
        get: function () {
            return this.myGroup.get('itemRows');
        },
        enumerable: true,
        configurable: true
    });
    CreateJobComponent.prototype.addNewRow = function () {
        this.totalNumberofRow = this.totalNumberofRow + 1;
        this.formArr.push(this.initItemRows());
    };
    CreateJobComponent.prototype.deleteRow = function (index) {
        this.formArr.removeAt(index);
    };
    CreateJobComponent.prototype.toggleMovingFrom = function (event, number, row) {
        if (event.target.value == 'house') {
            row.controls.moving_from_floor.disable();
        }
        else {
            row.controls.moving_from_floor.enable();
        }
    };
    /*--------------------------------------------- Second Group Elements ----------------------- */
    /*--------------------------------------------- Third Group Elements ----------------------- */
    CreateJobComponent.prototype.toggleMovingTo = function (event, number, row) {
        if (event.target.value == 'house') {
            row.controls.moving_to_floor.disable();
        }
        else {
            row.controls.moving_to_floor.enable();
        }
    };
    CreateJobComponent.prototype.setToLocations = function (myFormGroup3, savedDataToLocation) {
        var _this = this;
        this.myGroup3 = myFormGroup3;
        console.log('setToLocations' + localStorage.getItem('jobType'));
        if (localStorage.getItem('jobType') == 'saved') {
            var control_2 = this.myGroup3.controls.itemRowsTo;
            if (savedDataToLocation && savedDataToLocation.moving_to.length > 0) {
                this.alllocations = savedDataToLocation.moving_to;
                this.alllocations.forEach(function (x) {
                    _this.userservice.getCounties(x.state).subscribe(function (result) {
                        _this.counties2 = result;
                    });
                    _this.userservice.getCities(x.county, x.state).subscribe(function (result) {
                        _this.cities2 = result;
                    });
                    control_2.push(_this.fb.group({
                        moving_to: x.movingType,
                        moving_to_floor: x.floor,
                        moving_to_state: x.state,
                        moving_to_county: x.county,
                        moving_to_city: x.city,
                        moving_to_zipcode: x.zipcode,
                        moving_to_address: x.address1,
                    }));
                });
            }
            else {
                control_2.push(this.fb.group({
                    moving_to: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
                }));
            }
        }
        else {
            var control = this.myGroup3.controls.itemRowsTo;
            control.push(this.fb.group({
                moving_to: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
            }));
        }
    };
    CreateJobComponent.prototype.initItemRowsTo = function () {
        return this.fb.group({
            moving_to: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
    };
    Object.defineProperty(CreateJobComponent.prototype, "formArrTo", {
        get: function () {
            return this.myGroup3.get('itemRowsTo');
        },
        enumerable: true,
        configurable: true
    });
    CreateJobComponent.prototype.addNewRowTo = function () {
        this.formArrTo.push(this.initItemRowsTo());
    };
    CreateJobComponent.prototype.deleteRowTo = function (index) {
        this.formArrTo.removeAt(index);
    };
    CreateJobComponent.prototype.addDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp = [];
        this.jobservice.getAppliances(serviceId).subscribe(function (result) {
            _this.apppli_moving = '';
            _this.formtype = formtype;
            _this.formtype.reset({});
            _this.formtype.setControl('allappliances', _this.fb.array([]));
            _this.allappliances = result;
            _this.allappliances.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.allappliances.push(control);
            });
            if (saved_data && saved_data.appliances && saved_data.appliances.length > 0) {
                for (var i = 0; i < _this.allappliances.length; i++) {
                    setApp.push('null');
                    var jobdata = saved_data.appliances;
                    var _id = _this.allappliances[i]._id;
                    $.each(jobdata, function (index, value) {
                        if (value.applianceItem._id == _id) {
                            var item = value.items + '_' + value.applianceItem._id;
                            setApp[i] = item;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.allappliances.length; i++) {
                    setApp.push('null');
                }
            }
            if (ser_type == 'moving') {
                _this.apppli_moving = setApp;
            }
            if (ser_type == 'packing') {
                _this.apppli_packing = setApp;
            }
            if (ser_type == 'unpacking') {
                _this.apppli_unpacking = setApp;
            }
            if (ser_type == 'loading') {
                _this.apppli_loading = setApp;
            }
            if (ser_type == 'unloading') {
                _this.apppli_unloading = setApp;
            }
        });
    };
    /*--------------------------------------------- Fourth Group Elements ----------------------- */
    /*--------------------------------------------- Fifth Group Elements ----------------------- */
    CreateJobComponent.prototype.addBedDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp1 = [];
        this.jobservice.getBedrooms(serviceId).subscribe(function (result) {
            _this.bedrooms = result;
            _this.formtype = formtype;
            _this.formtype.setControl('bedrooms', _this.fb.array([]));
            _this.bedrooms.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.bedrooms.push(control);
            });
            if (saved_data && saved_data.bedRooms && saved_data.bedRooms.length > 0) {
                for (var i = 0; i < _this.bedrooms.length; i++) {
                    setApp1.push('null');
                    var jobdata1 = saved_data.bedRooms;
                    var _id = _this.bedrooms[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.bedRoomsItem._id == _id) {
                            var item1 = value.items + '_' + value.bedRoomsItem._id;
                            setApp1[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.bedrooms.length; i++) {
                    setApp1.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.beds_moving = setApp1;
            }
            if (ser_type == 'packing') {
                _this.beds_packing = setApp1;
            }
            if (ser_type == 'unpacking') {
                _this.beds_unpacking = setApp1;
            }
            if (ser_type == 'loading') {
                _this.beds_loading = setApp1;
            }
            if (ser_type == 'unloading') {
                _this.beds_unloading = setApp1;
            }
        });
    };
    CreateJobComponent.prototype.addkitchenDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp6 = [];
        this.jobservice.getKitchen(serviceId).subscribe(function (result) {
            _this.kitchens = result;
            _this.formtype = formtype;
            _this.formtype.setControl('kitchens', _this.fb.array([]));
            _this.kitchens.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.kitchens.push(control);
            });
            if (saved_data && saved_data.kitchen && saved_data.kitchen.length > 0) {
                for (var i = 0; i < _this.kitchens.length; i++) {
                    setApp6.push('null');
                    var jobdata1 = saved_data.kitchen;
                    var _id = _this.kitchens[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.kitchenItem._id == _id) {
                            var item1 = value.items + '_' + value.kitchenItem._id;
                            setApp6[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.kitchens.length; i++) {
                    setApp6.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.kitch_moving = setApp6;
            }
            if (ser_type == 'packing') {
                _this.kitch_packing = setApp6;
            }
            if (ser_type == 'unpacking') {
                _this.kitch_unpacking = setApp6;
            }
            if (ser_type == 'loading') {
                _this.kitch_loading = setApp6;
            }
            if (ser_type == 'unloading') {
                _this.kitch_unloading = setApp6;
            }
        });
    };
    /*--------------------------------------------- Fifth Group Elements ----------------------- */
    CreateJobComponent.prototype.addDiningDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp3 = [];
        this.jobservice.getDiningrooms(serviceId).subscribe(function (result) {
            _this.diningrooms = result;
            _this.formtype = formtype;
            _this.formtype.setControl('diningrooms', _this.fb.array([]));
            _this.diningrooms.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.diningrooms.push(control);
            });
            if (saved_data && saved_data.diningRooms && saved_data.diningRooms.length > 0) {
                for (var i = 0; i < _this.diningrooms.length; i++) {
                    setApp3.push('null');
                    var jobdata1 = saved_data.diningRooms;
                    var _id = _this.diningrooms[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.diningRoomsItem._id == _id) {
                            var item1 = value.items + '_' + value.diningRoomsItem._id;
                            setApp3[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.diningrooms.length; i++) {
                    setApp3.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.dining_moving = setApp3;
            }
            if (ser_type == 'packing') {
                _this.dining_packing = setApp3;
            }
            if (ser_type == 'unpacking') {
                _this.dining_unpacking = setApp3;
            }
            if (ser_type == 'loading') {
                _this.dining_loading = setApp3;
            }
            if (ser_type == 'unloading') {
                _this.dining_unloading = setApp3;
            }
        });
    };
    CreateJobComponent.prototype.addLivingDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp7 = [];
        this.jobservice.getLivingrooms(serviceId).subscribe(function (result) {
            _this.livingrooms = result;
            _this.formtype = formtype;
            _this.formtype.setControl('livingrooms', _this.fb.array([]));
            _this.livingrooms.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.livingrooms.push(control);
            });
            if (saved_data && saved_data.livingRooms && saved_data.livingRooms.length > 0) {
                for (var i = 0; i < _this.livingrooms.length; i++) {
                    setApp7.push('null');
                    var jobdata1 = saved_data.livingRooms;
                    var _id = _this.livingrooms[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.livingRoomsItem._id == _id) {
                            var item1 = value.items + '_' + value.livingRoomsItem._id;
                            setApp7[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.livingrooms.length; i++) {
                    setApp7.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.living_moving = setApp7;
            }
            if (ser_type == 'packing') {
                _this.living_packing = setApp7;
            }
            if (ser_type == 'unpacking') {
                _this.living_unpacking = setApp7;
            }
            if (ser_type == 'loading') {
                _this.living_loading = setApp7;
            }
            if (ser_type == 'unloading') {
                _this.living_unloading = setApp7;
            }
        });
    };
    CreateJobComponent.prototype.addFamilyDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp4 = [];
        this.jobservice.getFamilyrooms(serviceId).subscribe(function (result) {
            _this.familyrooms = result;
            _this.formtype = formtype;
            _this.formtype.setControl('familyrooms', _this.fb.array([]));
            _this.familyrooms.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.familyrooms.push(control);
            });
            if (saved_data && saved_data.familyRooms && saved_data.familyRooms.length > 0) {
                for (var i = 0; i < _this.familyrooms.length; i++) {
                    setApp4.push('null');
                    var jobdata1 = saved_data.familyRooms;
                    var _id = _this.familyrooms[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.familyRoomsItem._id == _id) {
                            var item1 = value.items + '_' + value.familyRoomsItem._id;
                            setApp4[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.familyrooms.length; i++) {
                    setApp4.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.family_moving = setApp4;
            }
            if (ser_type == 'packing') {
                _this.family_packing = setApp4;
            }
            if (ser_type == 'unpacking') {
                _this.family_unpacking = setApp4;
            }
            if (ser_type == 'loading') {
                _this.family_loading = setApp4;
            }
            if (ser_type == 'unloading') {
                _this.family_unloading = setApp4;
            }
        });
    };
    CreateJobComponent.prototype.addBasementDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp2 = [];
        this.jobservice.getBasement(serviceId).subscribe(function (result) {
            _this.basements = result;
            _this.formtype = formtype;
            _this.formtype.setControl('basements', _this.fb.array([]));
            _this.basements.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.basements.push(control);
            });
            if (saved_data && saved_data.basement && saved_data.basement.length > 0) {
                for (var i = 0; i < _this.basements.length; i++) {
                    setApp2.push('null');
                    var jobdata1 = saved_data.basement;
                    var _id = _this.basements[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.basementItem._id == _id) {
                            var item1 = value.items + '_' + value.basementItem._id;
                            setApp2[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.basements.length; i++) {
                    setApp2.push('null');
                }
            }
            if (ser_type == 'moving') {
                _this.base_moving = setApp2;
            }
            if (ser_type == 'packing') {
                _this.base_packing = setApp2;
            }
            if (ser_type == 'unpacking') {
                _this.base_unpacking = setApp2;
            }
            if (ser_type == 'loading') {
                _this.base_loading = setApp2;
            }
            if (ser_type == 'unloading') {
                _this.base_unloading = setApp2;
            }
        });
    };
    CreateJobComponent.prototype.addGaragesDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp5 = [];
        this.jobservice.getGarages(serviceId).subscribe(function (result) {
            _this.garages = result;
            _this.formtype = formtype;
            _this.formtype.setControl('garages', _this.fb.array([]));
            _this.garages.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.garages.push(control);
            });
            if (saved_data && saved_data.garage && saved_data.garage.length > 0) {
                for (var i = 0; i < _this.garages.length; i++) {
                    setApp5.push('null');
                    var jobdata1 = saved_data.garage;
                    var _id = _this.garages[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.garageItem._id == _id) {
                            var item1 = value.items + '_' + value.garageItem._id;
                            setApp5[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.garages.length; i++) {
                    setApp5.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.garge_moving = setApp5;
            }
            if (ser_type == 'packing') {
                _this.garge_packing = setApp5;
            }
            if (ser_type == 'unpacking') {
                _this.garge_unpacking = setApp5;
            }
            if (ser_type == 'loading') {
                _this.garge_loading = setApp5;
            }
            if (ser_type == 'unloading') {
                _this.garge_unloading = setApp5;
            }
        });
    };
    CreateJobComponent.prototype.addPatioyardDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp8 = [];
        this.jobservice.getPatioyard(serviceId).subscribe(function (result) {
            _this.patioyards = result;
            _this.formtype = formtype;
            _this.formtype.setControl('patioyards', _this.fb.array([]));
            _this.patioyards.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.patioyards.push(control);
            });
            if (saved_data && saved_data.patioYard && saved_data.patioYard.length > 0) {
                for (var i = 0; i < _this.patioyards.length; i++) {
                    setApp8.push('null');
                    var jobdata1 = saved_data.patioYard;
                    var _id = _this.patioyards[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.patioYardItem._id == _id) {
                            var item1 = value.items + '_' + value.patioYardItem._id;
                            setApp8[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.patioyards.length; i++) {
                    setApp8.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.patio_moving = setApp8;
            }
            if (ser_type == 'packing') {
                _this.patio_packing = setApp8;
            }
            if (ser_type == 'unpacking') {
                _this.patio_unpacking = setApp8;
            }
            if (ser_type == 'loading') {
                _this.patio_loading = setApp8;
            }
            if (ser_type == 'unloading') {
                _this.patio_unloading = setApp8;
            }
        });
    };
    CreateJobComponent.prototype.onSubmit = function () {
        // stop here if form is invalid
    };
    CreateJobComponent.prototype.createNewJob = function () {
        localStorage.setItem('jobType', 'new');
        localStorage.removeItem('currentStop');
        localStorage.removeItem('jobID');
    };
    /* *** Add User ** */
    CreateJobComponent.prototype.updateCalcs = function (event) {
        var d = new Date(event);
        var month = '' + (d.getMonth() + 1);
        var day = '' + d.getDate();
        var year = d.getFullYear();
        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;
        this.mindateset = [year, month, day].join(',');
        this.minDate2 = new Date(this.mindateset);
    };
    CreateJobComponent.prototype.ngOnInit = function () {
        /* this.setToLocations();
        this.setLocations(); */
        var jobType = this.angForm.value.jobtype;
        localStorage.setItem('jobType', jobType);
        this.thisisdone = false;
        this.isLinear = true;
        this.totalIndex = 14;
        var minD = new Date();
        this.button_text = 'View More';
        var month1 = '' + (minD.getMonth() + 1);
        var day1 = '' + minD.getDate();
        var year1 = minD.getFullYear();
        if (month1.length < 2)
            month1 = month1;
        if (day1.length < 2)
            day1 = day1;
        this.setmindate = [year1, month1, day1].join(',');
        this.minDate = new Date(this.setmindate);
        this.getServices();
        this.getLoggedInUserInfo();
    };
    CreateJobComponent.prototype.loadfirststep = function (nextstep) {
        this.topHeading = 'Contact Information';
        this.showThis = true;
    };
    /*---------------------------------- Get saved job --------------------------------*/
    CreateJobComponent.prototype.geSavedJob = function (whichstep) {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        localStorage.setItem('jobType', 'saved');
        this.showLoader = true;
        this.jobservice.getSavedJob().subscribe(function (result) {
            if (result.success && result.message.length > 0) {
                _this.showLoader = false;
                //http://localhost:4200/edit-job/5ea8fd1593c4153e8010841c
                _this.selectedServices = result.message[0].serviceId;
                _this.jobData = result.message[0];
                _this.movingData = result.message[0].moving[0];
                _this.packingData = result.message[0].packing[0];
                _this.unpackingData = result.message[0].unpacking[0];
                _this.loadingData = result.message[0].loading[0];
                _this.unloadingData = result.message[0].unloading[0];
                if (_this.movingData && whichstep == 'moving') {
                    console.log('movingData' + _this.movingData);
                    _this.showMoving = true;
                    _this.setLocations(_this.secondFormGroup, _this.movingData);
                    _this.setToLocations(_this.thirdFormGroup, _this.movingData);
                }
                if (_this.packingData && whichstep == 'packing') {
                    console.log(_this.packingData);
                    _this.showPacking = true;
                    _this.setLocations(_this.secondpackedFormGroup, _this.packingData);
                    _this.setToLocations(_this.thirdpackedFormGroup, _this.packingData);
                }
                if (_this.unpackingData && whichstep == 'unpacking') {
                    _this.showUnPacking = true;
                    _this.setLocations(_this.secondunpackedFormGroup, _this.unpackingData);
                    _this.setToLocations(_this.thirdunpackedFormGroup, _this.unpackingData);
                }
                if (_this.loadingData && whichstep == 'loading') {
                    _this.showLoading = true;
                    _this.setLocations(_this.secondloadingFormGroup, _this.loadingData);
                }
                if (_this.unloadingData && whichstep == 'unloading') {
                    _this.showUnLoading = true;
                    _this.setToLocations(_this.thirdunloadingFormGroup, _this.unloadingData);
                }
                _this.userservice.getStates().subscribe(function (result) {
                    _this.states = result;
                });
                var currentState = _this.jobData.state;
                var currentCounty = _this.jobData.county;
                _this.userservice.getCounties(currentState).subscribe(function (result) {
                    _this.counties = result;
                });
                _this.userservice.getCities(currentCounty, currentState).subscribe(function (result) {
                    _this.cities = result;
                });
            }
            else {
                _this._flashMessagesService.show("No Saved Job Found.", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    /*---------------------------------------- get all data from database ------------------------------*/
    CreateJobComponent.prototype.getSate = function () {
        var _this = this;
        this.userservice.getStates().subscribe(function (result) {
            _this.states = result;
        });
    };
    CreateJobComponent.prototype.getRoles = function (usertype) {
        var _this = this;
        this.userservice.getUserRoles(usertype).subscribe(function (result) {
            _this.roles = result;
        });
    };
    CreateJobComponent.prototype.getCounties = function (event) {
        var _this = this;
        this.stateName = event.target.value;
        this.userservice.getCounties(this.stateName).subscribe(function (result) {
            _this.counties = result;
        });
    };
    CreateJobComponent.prototype.getCountiesFrom = function (event) {
        var _this = this;
        this.stateName = event.target.value;
        this.userservice.getCounties(this.stateName).subscribe(function (result) {
            _this.counties1 = result;
        });
    };
    CreateJobComponent.prototype.getCountiesTo = function (event) {
        var _this = this;
        this.stateName = event.target.value;
        this.userservice.getCounties(this.stateName).subscribe(function (result) {
            _this.counties2 = result;
        });
    };
    CreateJobComponent.prototype.getCities = function (event) {
        var _this = this;
        this.countyName = event.target.value;
        //this.statename = this.firstFormGroup.value.state;
        this.userservice.getCities(this.countyName, this.statename).subscribe(function (result) {
            console.log(result);
            _this.cities = result;
        });
    };
    CreateJobComponent.prototype.getCitiesFrom = function (event, number, whichFromGroup) {
        var _this = this;
        this.whichFromGroup = whichFromGroup;
        this.countyName = event.target.value;
        this.statename = this.whichFromGroup.value.itemRows[number].moving_from_state;
        this.userservice.getCities(this.countyName, this.statename).subscribe(function (result) {
            _this.cities1 = result;
        });
    };
    CreateJobComponent.prototype.getCitiesTo = function (event, number, whichFromGroup) {
        var _this = this;
        this.whichFromGroup = whichFromGroup;
        this.countyName = event.target.value;
        this.statename = this.whichFromGroup.value.itemRowsTo[number].moving_to_state;
        this.userservice.getCities(this.countyName, this.statename).subscribe(function (result) {
            _this.cities2 = result;
        });
    };
    CreateJobComponent.prototype.getServices = function () {
        var _this = this;
        this.jobservice.getServices().subscribe(function (result) {
            _this.jobservices = result.data;
            _this.firstService = result.data[0]._id;
            _this.secondService = result.data[1]._id;
            _this.thirdService = result.data[2]._id;
        });
    };
    CreateJobComponent.prototype.getLoggedInUserInfo = function () {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        this.userservice.getUsers().subscribe(function (result) {
            _this.user = result[0];
        });
    };
    Object.defineProperty(CreateJobComponent.prototype, "f0", {
        get: function () { return this.angForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f", {
        get: function () { return this.angOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f2", {
        //get f() { return this.firstFormGroup.controls; }
        /* get f12() { return this.firstPartTwoFormGroup.controls; } */
        get: function () { return this.secondFormGroup.controls.itemRows; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f3", {
        get: function () { return this.thirdFormGroup.controls.itemRowsTo; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f4", {
        get: function () { return this.FourthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f5", {
        get: function () { return this.FifthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f6", {
        get: function () { return this.sixthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f7", {
        get: function () { return this.seventhFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f8", {
        get: function () { return this.eigthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f9", {
        get: function () { return this.ninthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f10", {
        get: function () { return this.tenthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f11", {
        get: function () { return this.eleventhFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f13", {
        get: function () { return this.tweleveFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f14", {
        get: function () { return this.thirteenFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f15", {
        get: function () { return this.fourteenFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "_f1", {
        get: function () { return this.angPackedOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "_Uf1", {
        get: function () { return this.angunPackedOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "_fL1", {
        get: function () { return this.angLoadingOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "_fUL1", {
        get: function () { return this.angUnloadingOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "_f2", {
        get: function () { return this.secondpackedFormGroup.controls.itemRows; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "_f3", {
        get: function () { return this.thirdpackedFormGroup.controls.itemRowsTo; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "fL2", {
        get: function () { return this.secondloadingFormGroup.controls.itemRows; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "fUL2", {
        get: function () { return this.thirdunloadingFormGroup.controls.itemRowsTo; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "_UPf2", {
        get: function () { return this.secondunpackedFormGroup.controls.itemRows; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "_UPf3", {
        get: function () { return this.thirdunpackedFormGroup.controls.itemRowsTo; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CreateJobComponent.prototype, "f16", {
        get: function () { return this.fourthpackedFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    /*---------------------------------------- get all data from database ------------------------------*/
    /*----------------------------------- Submit functions of stepper ----------------------------*/
    CreateJobComponent.prototype.isChangeheading = function (stepper) {
        var _this = this;
        var myArray = [];
        var selectedOrderIds = this.angForm.value.services
            .map(function (v, i) { return (v ? _this.jobservices[i]._id : null); })
            .filter(function (v) { return v !== null; });
        var selectedOrderName = this.angForm.value.services
            .map(function (v, i) { return (v ? _this.jobservices[i].slug : null); })
            .filter(function (v) { return v !== null; });
        if (this.angForm.invalid) {
            return;
        }
        else {
            if (selectedOrderIds.length == 0) {
                this.submitted_service = true;
                return;
            }
            var jobType = this.angForm.value.jobtype;
            localStorage.setItem('jobType', jobType);
            console.log(selectedOrderName);
            if (selectedOrderName.includes('moving')) {
                this.showMoving = true;
            }
            if (selectedOrderName.includes('packing')) {
                this.showPacking = true;
            }
            if (selectedOrderName.includes('unpacking')) {
                this.showUnPacking = true;
            }
            if (selectedOrderName.includes('loading')) {
                this.showLoading = true;
            }
            if (selectedOrderName.includes('unloading')) {
                this.showUnLoading = true;
            }
            var flashMessagesService = this._flashMessagesService;
            var job_basic_info = this.user;
            if (localStorage.getItem('jobType') == 'new') {
                this.showLoader = true;
                this.jobservice.addJob(job_basic_info, selectedOrderIds).subscribe(function (result) {
                    _this.submitted = false;
                    if (result.success) {
                        console.log(result);
                        localStorage.setItem('jobID', result.jobId);
                        _this.showLoader = false;
                        //this.allEventHandle(nextstep,totalIndex);
                        setTimeout(function () {
                            stepper.next();
                        }, 0);
                    }
                    else {
                        flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                    }
                });
            }
            else {
                var jobID = localStorage.getItem('jobID');
                console.log('dgdfg');
                console.log(jobID);
                if (jobID != undefined) {
                    var job_basic_info = this.user;
                    var job_basic_info_final = { job_basic_info: job_basic_info, serviceId: selectedOrderIds };
                    console.log(job_basic_info_final);
                    var serviceType = 'moving';
                    this.showLoader = true;
                    this.jobservice.updateJob(job_basic_info_final, 'step1', jobID, serviceType).subscribe(function (result) {
                        _this.submitted = false;
                        if (result.success) {
                            console.log(result);
                            localStorage.setItem('jobID', result.jobId);
                            _this.showLoader = false;
                            //this.allEventHandle(nextstep,totalIndex);
                            setTimeout(function () {
                                stepper.next();
                            }, 0);
                        }
                        else {
                            flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                        }
                    });
                }
                else {
                    flashMessagesService.show("No Saved job. Start Creating a new one.", { cssClass: 'alert-danger', timeout: 6000 });
                }
            }
        }
    };
    CreateJobComponent.prototype.setOptionsAvailable = function (stepper) {
        var _this = this;
        //this.moving_forms();
        if (this.angOptionsForm.invalid) {
            this.submitted_moving = true;
            return;
        }
        else {
            var selectedOptionsIds = this.angOptionsForm.value.options
                .map(function (v, i) { return v ? _this.optionsData[i].id : null; })
                .filter(function (v) { return v !== null; });
            console.log(selectedOptionsIds);
            if (selectedOptionsIds.length == 0) {
                this.showErrorMessage1 = true;
                return;
            }
            var moving_id = this.MOVING_ID;
            var serv_type = 'moving';
            console.log(localStorage.getItem('jobType'));
            if (!this.selectedServices.includes(this.MOVING_ID)) {
                this.setLocations(this.secondFormGroup, '');
            }
            else {
                this.setLocations(this.secondFormGroup, this.movingData);
            }
            if (selectedOptionsIds.includes(1)) {
                this.showAppliances = true;
                this.addDropDowns(moving_id, this.FourthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(2)) {
                this.showBedrooms = true;
                this.addBedDropDowns(moving_id, this.FifthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(3)) {
                this.showLivingRooms = true;
                this.addLivingDropDowns(moving_id, this.sixthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(4)) {
                this.showFamilyRooms = true;
                this.addFamilyDropDowns(moving_id, this.seventhFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(5)) {
                this.showDiningRooms = true;
                this.addDiningDropDowns(moving_id, this.eigthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(6)) {
                this.showKitchen = true;
                this.addkitchenDropDowns(moving_id, this.ninthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(7)) {
                this.showBasement = true;
                this.addBasementDropDowns(moving_id, this.tenthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(8)) {
                this.showGarage = true;
                this.addGaragesDropDowns(moving_id, this.eleventhFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(9)) {
                this.showPatiyoYards = true;
                this.addPatioyardDropDowns(moving_id, this.tweleveFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(10)) {
                this.showOffices = true;
                this.addPatioyardDropDowns(moving_id, this.thirteenFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(11)) {
                this.showOversized = true;
                this.addPatioyardDropDowns(moving_id, this.fourteenFormGroup, serv_type, this.movingData);
            }
            var jobID = localStorage.getItem('jobID');
            var start_date = this.angOptionsForm.value.job_start_date;
            var basic_info = { moving: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
            this.showLoader = true;
            this.jobservice.updateServicesInJobTemp(jobID, basic_info, 'moving').subscribe(function (result) {
                _this.submitted_moving = false;
                if (result.success) {
                    console.log(result);
                    localStorage.setItem('jobID', result.jobId);
                    _this.showLoader = false;
                    setTimeout(function () {
                        stepper.next();
                    }, 0);
                }
                else {
                    _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                }
            });
        }
    };
    CreateJobComponent.prototype.setPackingOptionsAvailable = function (stepper, type) {
        var _this = this;
        console.log('here');
        if (type == 'forPacking') {
            //this.packing_forms();
            var selectedOptionsIds = this.angPackedOptionsForm.value.packingoptions
                .map(function (v, i) { return v ? _this.optionsPackedData[i].id : null; })
                .filter(function (v) { return v !== null; });
            console.log(selectedOptionsIds);
            if (this.angPackedOptionsForm.invalid) {
                this.submitted_packing = true;
                return;
            }
            else {
                if (selectedOptionsIds.length == 0) {
                    this.showErrorMessage2 = true;
                    return;
                }
                if (localStorage.getItem('jobType') == 'saved') {
                    this.geSavedJob('packing');
                }
                if (!this.selectedServices.includes(this.PACKING_ID)) {
                    this.setLocations(this.secondpackedFormGroup, '');
                }
                else {
                    this.setLocations(this.secondpackedFormGroup, this.packingData);
                }
                var moving_id = this.PACKING_ID;
                var serv_type = 'packing';
                if (selectedOptionsIds.includes(12)) {
                    this.showPackingAppliances = true;
                    this.addDropDowns(moving_id, this.fourthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(13)) {
                    this.showPackingBedrooms = true;
                    this.addBedDropDowns(moving_id, this.FifthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(14)) {
                    this.showPackingLivingRooms = true;
                    this.addLivingDropDowns(moving_id, this.sixthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(15)) {
                    this.showPackingFamilyRooms = true;
                    this.addFamilyDropDowns(moving_id, this.seventhpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(16)) {
                    this.showPackingDiningRooms = true;
                    this.addDiningDropDowns(moving_id, this.eigthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(17)) {
                    this.showPackingKitchen = true;
                    this.addkitchenDropDowns(moving_id, this.ninthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(18)) {
                    this.showPackingBasement = true;
                    this.addBasementDropDowns(moving_id, this.tenthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(19)) {
                    this.showPackingGarage = true;
                    this.addGaragesDropDowns(moving_id, this.eleventhpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(20)) {
                    this.showPackingPatiyoYards = true;
                    this.addPatioyardDropDowns(moving_id, this.twelevepackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(21)) {
                    this.showPackingOffices = true;
                    this.addPatioyardDropDowns(moving_id, this.thirteenpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(22)) {
                    this.showPackingOversized = true;
                    this.addPatioyardDropDowns(moving_id, this.fourteenpackedFormGroup, serv_type, this.packingData);
                }
                var jobID = localStorage.getItem('jobID');
                var start_date = this.angPackedOptionsForm.value.job_start_date_packing;
                var basic_info = { packing: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
                this.showLoader = true;
                this.jobservice.updateServicesInJobTemp(jobID, basic_info, 'packing').subscribe(function (result) {
                    _this.submitted_packing = false;
                    if (result.success) {
                        console.log(result);
                        _this.showLoader = false;
                        localStorage.setItem('jobID', result.jobId);
                        setTimeout(function () {
                            stepper.next();
                        }, 0);
                    }
                    else {
                        _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                    }
                });
            }
        }
        if (type == 'forUnpacking') {
            //this.unpacking_forms();
            var selectedOptionsIds = this.angunPackedOptionsForm.value.packingoptions
                .map(function (v, i) { return v ? _this.optionsPackedData[i].id : null; })
                .filter(function (v) { return v !== null; });
            console.log(selectedOptionsIds);
            if (this.angunPackedOptionsForm.invalid) {
                this.submitted_unpacking = true;
                return;
            }
            else {
                if (selectedOptionsIds.length == 0) {
                    this.showErrorMessage3 = true;
                    return;
                }
                var moving_id = this.UNPACKING_ID;
                var serv_type = 'unpacking';
                //this.setLocations(this.secondunpackedFormGroup,'');	
                if (!this.selectedServices.includes(this.UNPACKING_ID)) {
                    this.setLocations(this.secondunpackedFormGroup, '');
                }
                else {
                    this.setLocations(this.secondunpackedFormGroup, this.unpackingData);
                }
                if (selectedOptionsIds.includes(12)) {
                    this.addDropDowns(moving_id, this.fourthunpackedFormGroup, serv_type, this.unpackingData);
                    this.showUnpackingAppliances = true;
                }
                if (selectedOptionsIds.includes(13)) {
                    this.showUnpackingBedrooms = true;
                    this.addBedDropDowns(moving_id, this.FifthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(14)) {
                    this.showUnpackingLivingRooms = true;
                    this.addLivingDropDowns(moving_id, this.sixthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(15)) {
                    this.showUnpackingFamilyRooms = true;
                    this.addFamilyDropDowns(moving_id, this.seventhunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(16)) {
                    this.showUnpackingDiningRooms = true;
                    this.addDiningDropDowns(moving_id, this.eigthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(17)) {
                    this.showUnpackingKitchen = true;
                    this.addkitchenDropDowns(moving_id, this.ninthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(18)) {
                    this.showUnpackingBasement = true;
                    this.addBasementDropDowns(moving_id, this.tenthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(19)) {
                    this.showUnpackingGarage = true;
                    this.addGaragesDropDowns(moving_id, this.eleventhunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(20)) {
                    this.showUnpackingPatiyoYards = true;
                    this.addPatioyardDropDowns(moving_id, this.tweleveunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(21)) {
                    this.showUnpackingOffices = true;
                    this.addPatioyardDropDowns(moving_id, this.thirteenunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(22)) {
                    this.showUnpackingOversized = true;
                    this.addPatioyardDropDowns(moving_id, this.fourteenunpackedFormGroup, serv_type, this.unpackingData);
                }
                var jobID = localStorage.getItem('jobID');
                var start_date = this.angunPackedOptionsForm.value.job_start_date_unpacking;
                var basic_info1 = { unpacking: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
                this.showLoader = true;
                this.jobservice.updateServicesInJobTemp(jobID, basic_info1, 'unpacking').subscribe(function (result) {
                    _this.submitted_unpacking = false;
                    if (result.success) {
                        console.log(result);
                        _this.showLoader = false;
                        localStorage.setItem('jobID', result.jobId);
                        setTimeout(function () {
                            stepper.next();
                        }, 0);
                    }
                    else {
                        _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                    }
                });
            }
        }
    };
    CreateJobComponent.prototype.setLoadingOptionsAvailable = function (stepper) {
        var _this = this;
        //this.loading_forms();
        var selectedOptionsIds = this.angLoadingOptionsForm.value.packingoptions
            .map(function (v, i) { return v ? _this.optionsPackedData[i].id : null; })
            .filter(function (v) { return v !== null; });
        if (this.angLoadingOptionsForm.invalid) {
            this.submitted_loading = true;
            return;
        }
        else {
            if (selectedOptionsIds.length == 0) {
                this.showErrorMessage4 = true;
                return;
            }
            if (localStorage.getItem('jobType') == 'saved') {
                this.geSavedJob('loading');
            }
            console.log(selectedOptionsIds);
            var moving_id = this.LOADING_ID;
            var serv_type = 'loading';
            if (this.selectedServices && !this.selectedServices.includes(this.LOADING_ID)) {
                this.setLocations(this.secondloadingFormGroup, '');
            }
            else {
                this.setLocations(this.secondloadingFormGroup, this.loadingData);
            }
            if (selectedOptionsIds.includes(12)) {
                this.addDropDowns(moving_id, this.FourthloadingFormGroup, serv_type, this.loadingData);
                this.showLoadingAppliances = true;
            }
            if (selectedOptionsIds.includes(13)) {
                this.showLoadingBedrooms = true;
                this.addBedDropDowns(moving_id, this.FifthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(14)) {
                this.showLoadingLivingRooms = true;
                this.addLivingDropDowns(moving_id, this.sixthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(15)) {
                this.showLoadingFamilyRooms = true;
                this.addFamilyDropDowns(moving_id, this.seventhloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(16)) {
                this.showLoadingDiningRooms = true;
                this.addDiningDropDowns(moving_id, this.eigthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(17)) {
                this.showLoadingKitchen = true;
                this.addkitchenDropDowns(moving_id, this.ninthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(18)) {
                this.showLoadingBasement = true;
                this.addBasementDropDowns(moving_id, this.tenthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(19)) {
                this.showLoadingGarage = true;
                this.addGaragesDropDowns(moving_id, this.eleventhloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(20)) {
                this.showLoadingPatiyoYards = true;
                this.addPatioyardDropDowns(moving_id, this.tweleveloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(21)) {
                this.showLoadingOffices = true;
                this.addPatioyardDropDowns(moving_id, this.thirteenloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(22)) {
                this.showLoadingOversized = true;
                this.addPatioyardDropDowns(moving_id, this.fourteenloadingFormGroup, serv_type, this.loadingData);
            }
            var jobID = localStorage.getItem('jobID');
            var start_date = this.angLoadingOptionsForm.value.job_start_date_loading;
            var basic_info3 = { loading: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
            this.showLoader = true;
            this.jobservice.updateServicesInJobTemp(jobID, basic_info3, 'loading').subscribe(function (result) {
                _this.submitted_loading = false;
                if (result.success) {
                    console.log(result);
                    _this.showLoader = false;
                    localStorage.setItem('jobID', result.jobId);
                    setTimeout(function () {
                        stepper.next();
                    }, 0);
                }
                else {
                    _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                }
            });
        }
    };
    CreateJobComponent.prototype.setUnloadingOptionsAvailable = function (stepper) {
        var _this = this;
        //this.unloading_forms();	
        var selectedOptionsIds = this.angUnloadingOptionsForm.value.packingoptions
            .map(function (v, i) { return v ? _this.optionsPackedData[i].id : null; })
            .filter(function (v) { return v !== null; });
        if (this.angUnloadingOptionsForm.invalid) {
            this.submitted_unloading = true;
            return;
        }
        else {
            if (selectedOptionsIds.length == 0) {
                this.showErrorMessage5 = true;
                return;
            }
            if (localStorage.getItem('jobType') == 'saved') {
                this.geSavedJob('unloading');
            }
            console.log(selectedOptionsIds);
            var moving_id = this.UNLOADING_ID;
            var serv_type = 'unloading';
            if (this.selectedServices && !this.selectedServices.includes(this.UNLOADING_ID)) {
                this.setToLocations(this.thirdunloadingFormGroup, '');
            }
            else {
                this.setToLocations(this.thirdunloadingFormGroup, this.unloadingData);
            }
            if (selectedOptionsIds.includes(12)) {
                this.addDropDowns(moving_id, this.fourthunloadingFormGroup, serv_type, this.unloadingData);
                this.showUnloadingAppliances = true;
            }
            if (selectedOptionsIds.includes(13)) {
                this.showUnloadingBedrooms = true;
                this.addBedDropDowns(moving_id, this.FifthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(14)) {
                this.showUnloadingLivingRooms = true;
                this.addLivingDropDowns(moving_id, this.sixthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(15)) {
                this.showUnloadingFamilyRooms = true;
                this.addFamilyDropDowns(moving_id, this.seventhunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(16)) {
                this.showUnloadingDiningRooms = true;
                this.addDiningDropDowns(moving_id, this.eigthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(17)) {
                this.showUnloadingKitchen = true;
                this.addkitchenDropDowns(moving_id, this.ninthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(18)) {
                this.showUnloadingBasement = true;
                this.addBasementDropDowns(moving_id, this.tenthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(19)) {
                this.showUnloadingGarage = true;
                this.addGaragesDropDowns(moving_id, this.eleventhunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(20)) {
                this.showUnloadingPatiyoYards = true;
                this.addPatioyardDropDowns(moving_id, this.tweleveunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(21)) {
                this.showUnloadingOffices = true;
                this.addPatioyardDropDowns(moving_id, this.thirteenunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(22)) {
                this.showUnloadingOversized = true;
                this.addPatioyardDropDowns(moving_id, this.fourteenunloadingFormGroup, serv_type, this.unloadingData);
            }
            var jobID = localStorage.getItem('jobID');
            var start_date = this.angUnloadingOptionsForm.value.job_start_date_unloading;
            var basic_info2 = { unloading: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
            this.showLoader = true;
            this.jobservice.updateServicesInJobTemp(jobID, basic_info2, 'unloading').subscribe(function (result) {
                _this.submitted_unloading = false;
                if (result.success) {
                    console.log(result);
                    _this.showLoader = false;
                    localStorage.setItem('jobID', result.jobId);
                    setTimeout(function () {
                        stepper.next();
                    }, 0);
                }
                else {
                    _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                }
            });
        }
    };
    CreateJobComponent.prototype.saveFromLocation = function (stepper, whichFromGroup, serviceType, nextFromGroup) {
        this.whichFromGroup = whichFromGroup;
        this.nextFromGroup = nextFromGroup;
        if (this.whichFromGroup.controls.itemRows.invalid) {
            this.submitted_2 = true;
            return;
        }
        else {
            if (serviceType == 'moving') {
                if (!this.selectedServices.includes(this.MOVING_ID)) {
                    this.setToLocations(this.nextFromGroup, '');
                }
                else {
                    this.setToLocations(this.nextFromGroup, this.movingData);
                }
            }
            if (serviceType == 'packing') {
                if (!this.selectedServices.includes(this.PACKING_ID)) {
                    this.setToLocations(this.nextFromGroup, '');
                }
                else {
                    this.setToLocations(this.nextFromGroup, this.packingData);
                }
            }
            if (serviceType == 'unpacking') {
                if (!this.selectedServices.includes(this.UNPACKING_ID)) {
                    this.setToLocations(this.nextFromGroup, '');
                }
                else {
                    this.setToLocations(this.nextFromGroup, this.unpackingData);
                }
            }
            var job_moving_from_info = this.whichFromGroup.value;
            var jobID = localStorage.getItem('jobID');
            this.submit_final_job(stepper, job_moving_from_info, 'step3', jobID, serviceType);
        }
    };
    CreateJobComponent.prototype.saveFromLoadingLocation = function (stepper, whichFromGroup, serviceType, nextFromGroup) {
        this.whichFromGroup = whichFromGroup;
        this.nextFromGroup = nextFromGroup;
        if (this.whichFromGroup.controls.itemRows.invalid) {
            return;
        }
        else {
            var job_moving_from_info = this.whichFromGroup.value;
            console.log(job_moving_from_info);
            var jobID = localStorage.getItem('jobID');
            this.submit_final_job(stepper, job_moving_from_info, 'step3', jobID, serviceType);
        }
    };
    CreateJobComponent.prototype.saveToLocation = function (stepper, whichFromGroup, serviceType) {
        this.whichFromGroup = whichFromGroup;
        console.log('this is called');
        if (this.whichFromGroup.controls.itemRowsTo.invalid) {
            this.submitted_3 = true;
            return;
        }
        else {
            console.log(this.showAppliances);
            console.log(this.showMoving);
            console.log(this.showPacking);
            var job_moving_to_info = this.whichFromGroup.value;
            console.log(job_moving_to_info);
            var jobID = localStorage.getItem('jobID');
            this.submit_final_job(stepper, job_moving_to_info, 'step4', jobID, serviceType);
        }
    };
    CreateJobComponent.prototype.saveAppliances = function (stepper, whichFromGroup, serviceType) {
        this.submitted_4 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.allappliances;
        var misc_info = this.whichFromGroup.value.appliance_misc;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                test['items'] = newstring[0];
                test['applianceItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var jobID = localStorage.getItem('jobID');
        var misc_info = this.whichFromGroup.value.appliance_misc;
        var assembly_info = this.whichFromGroup.value.appliance_assembly;
        console.log(assembly_info);
        var final_submit = { appliances: new_arr, appliances_misc: misc_info, appliances_assembly: assembly_info };
        console.log(final_submit);
        this.submit_final_job(stepper, final_submit, 'step5', jobID, serviceType);
    };
    CreateJobComponent.prototype.saveBedrooms = function (stepper, whichFromGroup, serviceType) {
        this.submitted_5 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.bedrooms;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['bedRoomsItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.bedrooms_misc;
        var jobID = localStorage.getItem('jobID');
        var assembly_info = this.whichFromGroup.value.bedrooms_assembly;
        var final_submit1 = { bedRooms: new_arr, bedrooms_misc: misc_info, bedrooms_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit1, 'step6', jobID, serviceType);
    };
    CreateJobComponent.prototype.saveLivingRooms = function (stepper, whichFromGroup, serviceType) {
        this.submitted_6 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.livingrooms;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['livingRoomsItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.livingRooms_misc;
        var assembly_info = this.whichFromGroup.value.livingRooms_assembly;
        var jobID = localStorage.getItem('jobID');
        var final_submit2 = { livingRooms: new_arr, livingRooms_misc: misc_info, livingRooms_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit2, 'step7', jobID, serviceType);
    };
    CreateJobComponent.prototype.saveFamilyRooms = function (stepper, whichFromGroup, serviceType) {
        this.submitted_7 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.familyrooms;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['familyRoomsItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.familyRooms_misc;
        var assembly_info = this.whichFromGroup.value.familyRooms_assembly;
        var jobID = localStorage.getItem('jobID');
        var final_submit3 = { familyRooms: new_arr, familyRooms_misc: misc_info, familyRooms_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit3, 'step8', jobID, serviceType);
    };
    CreateJobComponent.prototype.saveDiningRooms = function (stepper, whichFromGroup, serviceType) {
        this.submitted_7 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.diningrooms;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['diningRoomsItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.dininRooms_misc;
        var assembly_info = this.whichFromGroup.value.dininRooms_assembly;
        var jobID = localStorage.getItem('jobID');
        var final_submit4 = { diningRooms: new_arr, dininRooms_misc: misc_info, dininRooms_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit4, 'step9', jobID, serviceType);
    };
    CreateJobComponent.prototype.saveKitchens = function (stepper, whichFromGroup, serviceType) {
        this.submitted_8 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.kitchens;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['kitchenItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.kitchen_misc;
        var assembly_info = this.whichFromGroup.value.kitchen_assembly;
        var jobID = localStorage.getItem('jobID');
        var final_submit5 = { kitchen: new_arr, kitchen_misc: misc_info, kitchen_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit5, 'step10', jobID, serviceType);
    };
    CreateJobComponent.prototype.saveBasements = function (stepper, whichFromGroup, serviceType) {
        this.submitted_8 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.basements;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['basementItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.basement_misc;
        var assembly_info = this.whichFromGroup.value.basement_assembly;
        var jobID = localStorage.getItem('jobID');
        var final_submit6 = { basement: new_arr, basement_misc: misc_info, basement_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit6, 'step11', jobID, serviceType);
    };
    CreateJobComponent.prototype.saveGarages = function (stepper, whichFromGroup, serviceType) {
        this.submitted_9 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.garages;
        console.log(appliance_info);
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['garageItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.garage_misc;
        var assembly_info = this.whichFromGroup.value.garage_assembly;
        var jobID = localStorage.getItem('jobID');
        var final_submit7 = { garage: new_arr, garage_misc: misc_info, garage_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit7, 'step12', jobID, serviceType);
    };
    CreateJobComponent.prototype.savePatiyoyards = function (stepper, whichFromGroup, serviceType) {
        this.submitted_10 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.patioyards;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['patioYardItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.patioYard_misc;
        var assembly_info = this.whichFromGroup.value.patioYard_assembly;
        var jobID = localStorage.getItem('jobID');
        var final_submit8 = { patioYard: new_arr, patioYard_misc: misc_info, patioYard_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit8, 'step13', jobID, serviceType);
    };
    CreateJobComponent.prototype.saveOffices = function (stepper, whichFromGroup, serviceType) {
        this.submitted_10 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.patioyards;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['patioYardItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.patioYard_misc;
        var assembly_info = this.whichFromGroup.value.patioYard_assembly;
        var jobID = localStorage.getItem('jobID');
        var final_submit8 = { patioYard: new_arr, patioYard_misc: misc_info, patioYard_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit8, 'step14', jobID, serviceType);
    };
    CreateJobComponent.prototype.saveOverSized = function (stepper, whichFromGroup, serviceType) {
        this.submitted_10 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.patioyards;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['patioYardItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.patioYard_misc;
        var assembly_info = this.whichFromGroup.value.patioYard_assembly;
        var jobID = localStorage.getItem('jobID');
        var final_submit8 = { patioYard: new_arr, patioYard_misc: misc_info, patioYard_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit8, 'step15', jobID, serviceType);
    };
    CreateJobComponent.prototype.submit_final_job = function (stepper, final_submit, step, jobID, serviceType) {
        var _this = this;
        console.log('sdfsdf' + serviceType);
        this.showLoader = true;
        this.jobservice.updateJob(final_submit, step, jobID, serviceType).subscribe(function (result) {
            var flashMessagesService = _this._flashMessagesService;
            _this.submitted_10 = false;
            if (result.success) {
                if (step != 'step3' && step != 'step4') {
                    _this.jobservice.getSavedJob().subscribe(function (result) {
                        _this.jobData = result.message[0];
                        if (result.message[0].moving.length > 0) {
                            _this.movingData = result.message[0].moving[0];
                        }
                        if (result.message[0].packing.length > 0) {
                            _this.packingData = result.message[0].packing[0];
                        }
                        if (result.message[0].unpacking.length > 0) {
                            _this.unpackingData = result.message[0].unpacking[0];
                        }
                        if (result.message[0].loading.length > 0) {
                            _this.loadingData = result.message[0].loading[0];
                        }
                        if (result.message[0].unloading.length > 0) {
                            _this.unloadingData = result.message[0].unloading[0];
                        }
                    });
                }
                _this.showLoader = false;
                setTimeout(function () {
                    stepper.next();
                }, 1);
            }
            else {
                flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    CreateJobComponent.prototype.setupJob = function (stepper) {
        var _this = this;
        this.showLoader = true;
        this.jobservice.submitJob().subscribe(function (result) {
            var flashMessagesService = _this._flashMessagesService;
            if (result.success) {
                setTimeout(function () {
                    stepper.next();
                }, 1);
                _this.showLoader = false;
                flashMessagesService.show("Job Created Successfully", { cssClass: 'alert-success', timeout: 2000 });
                setTimeout(function () {
                    _this.router.navigate(['/jobs']);
                }, 2500);
            }
            else {
                flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    /*------------------Extra --------------------------------*/
    CreateJobComponent.prototype.clearForm = function () {
        this.angOptionsForm.reset();
        this.secondFormGroup.reset();
        this.thirdFormGroup.reset();
        this.FourthFormGroup.reset();
        this.FifthFormGroup.reset();
        this.sixthFormGroup.reset();
        this.seventhFormGroup.reset();
        this.eigthFormGroup.reset();
        this.ninthFormGroup.reset();
        this.tenthFormGroup.reset();
        this.eleventhFormGroup.reset();
        this.tweleveFormGroup.reset();
        this.thirteenFormGroup.reset();
        this.fourteenFormGroup.reset();
        this.angPackedOptionsForm.reset();
        this.secondpackedFormGroup.reset();
        this.thirdpackedFormGroup.reset();
        this.fourthpackedFormGroup.reset();
        this.FifthpackedFormGroup.reset();
        this.sixthpackedFormGroup.reset();
        this.seventhpackedFormGroup.reset();
        this.eigthpackedFormGroup.reset();
        this.ninthpackedFormGroup.reset();
        this.tenthpackedFormGroup.reset();
        this.eleventhpackedFormGroup.reset();
        this.twelevepackedFormGroup.reset();
        this.thirteenpackedFormGroup.reset();
        this.fourteenpackedFormGroup.reset();
        this.angunPackedOptionsForm.reset();
        this.secondunpackedFormGroup.reset();
        this.thirdunpackedFormGroup.reset();
        this.fourthunpackedFormGroup.reset();
        this.FifthunpackedFormGroup.reset();
        this.sixthunpackedFormGroup.reset();
        this.seventhunpackedFormGroup.reset();
        this.eigthunpackedFormGroup.reset();
        this.ninthunpackedFormGroup.reset();
        this.tenthunpackedFormGroup.reset();
        this.eleventhunpackedFormGroup.reset();
        this.tweleveunpackedFormGroup.reset();
        this.thirteenunpackedFormGroup.reset();
        this.fourteenunpackedFormGroup.reset();
        this.angUnloadingOptionsForm.reset();
        this.secondunloadingFormGroup.reset();
        this.thirdunloadingFormGroup.reset();
        this.fourthunloadingFormGroup.reset();
        this.FifthunloadingFormGroup.reset();
        this.sixthunloadingFormGroup.reset();
        this.seventhunloadingFormGroup.reset();
        this.eigthunloadingFormGroup.reset();
        this.ninthunloadingFormGroup.reset();
        this.tenthunloadingFormGroup.reset();
        this.eleventhunloadingFormGroup.reset();
        this.tweleveunloadingFormGroup.reset();
        this.thirteenunloadingFormGroup.reset();
        this.fourteenunloadingFormGroup.reset();
        this.angLoadingOptionsForm.reset();
        this.secondloadingFormGroup.reset();
        this.thirdloadingFormGroup.reset();
        this.FourthloadingFormGroup.reset();
        this.FifthloadingFormGroup.reset();
        this.sixthloadingFormGroup.reset();
        this.seventhloadingFormGroup.reset();
        this.eigthloadingFormGroup.reset();
        this.ninthloadingFormGroup.reset();
        this.tenthloadingFormGroup.reset();
        this.eleventhloadingFormGroup.reset();
        this.tweleveloadingFormGroup.reset();
        this.thirteenloadingFormGroup.reset();
        this.fourteenloadingFormGroup.reset();
    };
    CreateJobComponent.prototype.onStepperSelectionChange = function (event) {
        this.scrollToSectionHook();
    };
    CreateJobComponent.prototype.scrollToSectionHook = function () {
        var element = document.querySelector('.stepperTop');
        if (element) {
            setTimeout(function () {
                element.scrollIntoView({ behavior: 'smooth', block: 'start', inline: 'nearest' });
            }, 0);
        }
    };
    CreateJobComponent.prototype.checkName = function (servicename) {
        if (servicename == 'Moving') {
            this.totalIndex = 14;
        }
        else {
            this.totalIndex = 15;
        }
    };
    CreateJobComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./createjob.component.html */ "./src/app/frontend/views/jobs/users/createjob/createjob.component.html"),
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"].Emulated,
            styles: [__webpack_require__(/*! ./createjob.component.css */ "./src/app/frontend/views/jobs/users/createjob/createjob.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__["FlashMessagesService"], _services_user_service__WEBPACK_IMPORTED_MODULE_3__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_4__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], CreateJobComponent);
    return CreateJobComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.css":
/*!***********************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.css ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".hire-panel .info .rate span{font-size:14px;font-weight:500}\r\n.hire-panel .info .completedjob {\r\n\tcolor: #1691be;\r\n\tfont-weight: 700;\r\n\tfont-size: 14px;\r\n\tdisplay: inline-flex;\r\n}\r\n.rating {\r\n    float:left;\r\n}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  float: left;\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\n.ratingclass label{line-height:45px}\r\n.rating {\r\n    float:left;\r\n\tdisplay:block;\r\n}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:28px;\r\n    line-height:32px;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: green;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: green;\r\n}\r\n\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9lZGl0ZmVlZGJhY2svZWRpdGZlZWRiYWNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkJBQTZCLGNBQWMsQ0FBQyxlQUFlO0FBQzNEO0NBQ0MsY0FBYztDQUNkLGdCQUFnQjtDQUNoQixlQUFlO0NBQ2Ysb0JBQW9CO0FBQ3JCO0FBR0E7SUFDSSxVQUFVO0FBQ2Q7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmO0FBRUYsbUJBQW1CLGdCQUFnQjtBQUNuQztJQUNJLFVBQVU7Q0FDYixhQUFhO0FBQ2Q7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksWUFBWTtBQUNoQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvZWRpdGZlZWRiYWNrL2VkaXRmZWVkYmFjay5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpcmUtcGFuZWwgLmluZm8gLnJhdGUgc3Bhbntmb250LXNpemU6MTRweDtmb250LXdlaWdodDo1MDB9XHJcbi5oaXJlLXBhbmVsIC5pbmZvIC5jb21wbGV0ZWRqb2Ige1xyXG5cdGNvbG9yOiAjMTY5MWJlO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0Zm9udC1zaXplOiAxNHB4O1xyXG5cdGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG59XHJcblxyXG5cclxuLnJhdGluZyB7XHJcbiAgICBmbG9hdDpsZWZ0O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBpbnB1dCB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDotOTk5OXB4O1xyXG4gICAgY2xpcDpyZWN0KDAsMCwwLDApO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICAgIHdpZHRoOjFlbTtcclxuICAgIHBhZGRpbmc6MC4xZW07XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZToxMDAlO1xyXG4gICAgbGluZS1oZWlnaHQ6MS4yO1xyXG4gICAgY29sb3I6I2RkZDtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6ICfimIUgJztcclxufVxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICMxNjkxYmU7XHJcbn1cclxuXHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsOmhvdmVyIH4gbGFiZWwsXHJcbi5yYXRpbmcgPiBsYWJlbDpob3ZlciB+IGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzUxYjYwODtcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlIHtcclxuICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgZm9udC1zaXplOiAwO1xyXG4gIGhlaWdodDogMjFweDtcclxuICBsaW5lLWhlaWdodDogMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtaW5kZW50OiAtOTk5ZW07XHJcbiAgd2lkdGg6IDExMHB4O1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUtcmF0aW5ne1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBoZWlnaHQ6IDIxcHg7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gIH1cclxuICBcclxuLnJhdGluZ2NsYXNzIGxhYmVse2xpbmUtaGVpZ2h0OjQ1cHh9XHJcbi5yYXRpbmcge1xyXG4gICAgZmxvYXQ6bGVmdDtcclxuXHRkaXNwbGF5OmJsb2NrO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBpbnB1dCB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIHRvcDotOTk5OXB4O1xyXG4gICAgY2xpcDpyZWN0KDAsMCwwLDApO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbCB7XHJcbiAgICBmbG9hdDpyaWdodDtcclxuICAgIHdpZHRoOjFlbTtcclxuICAgIHBhZGRpbmc6MC4xZW07XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZToyOHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6MzJweDtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuXHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper w-950\">\r\n\r\n\t<div class=\"container-fluid titlebar\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t<h1>Ratings and Feedback</h1>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\r\n\r\n\t<div class=\"container joblisting-panel-wrap\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info signup-form\">\r\n\t\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t\t<flash-messages></flash-messages>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<form [formGroup]=\"angForm\"  class=\"form-main\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12 ratingclass\">\r\n\t\t\t\t\t\t\t<label>Rating</label>\r\n\t\t\t\t\t\t\t<fieldset class=\"rating\">\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"5\" [checked]=\"rating===5\" />\r\n\t\t\t\t\t\t\t  <label title=\"Rocks!\" (click)='onClick(5)'>5 stars</label>\r\n\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"4\" [checked]=\"rating===4\" />\r\n\t\t\t\t\t\t\t  <label title=\"Pretty good\" (click)='onClick(4)'>4 stars</label>\r\n\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"3\" [checked]=\"rating===3\" />\r\n\t\t\t\t\t\t\t  <label title=\"Meh\" (click)='onClick(3)'>3 stars</label>\r\n\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"2\" [checked]=\"rating===2\" />\r\n\t\t\t\t\t\t\t  <label title=\"Kinda bad\" (click)='onClick(2)'>2 stars</label>\r\n\r\n\t\t\t\t\t\t\t  <input type=\"radio\" [name]=\"inputName\" value=\"1\" [checked]=\"rating===1\" />\r\n\t\t\t\t\t\t\t  <label title=\"Sucks big time\" (click)='onClick(1)'>1 star</label>\r\n\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" style=\"display: none;\" readonly=\"readonly\" id=\"ratingSelected\" formControlName=\"ratingSelected\" [ngClass]=\"{ 'is-invalid': submitted && f.ratingSelected.errors }\" [ngModel]=\"ratingClicked\">\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted && f.ratingSelected.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"f.ratingSelected.errors.required\">Rating is required</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t\t <div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<label>Feedback</label>\r\n\t\t\t\t\t\t\t<textarea class=\"form-control\" id=\"jobFeedback\" placeholder=\"Job Feedback\"  formControlName=\"jobFeedback\" [ngClass]=\"{ 'is-invalid': submitted && f.jobFeedback.errors }\" [(ngModel)]=\"jobfeedback\"></textarea>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted && f.jobFeedback.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"f.jobFeedback.errors.required\">Feedback is Required</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary\" type=\"submit\" (click)=\"onSubmit()\"  (ngSubmit)=\"onSubmit()\">Submit</button> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t</div> \r\n\t\t\t\t\t</form>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t\r\n\t \r\n</div> \r\n "

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.ts ***!
  \**********************************************************************************/
/*! exports provided: EditFeedbackComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditFeedbackComponent", function() { return EditFeedbackComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");






//import { PasswordValidator } from '../../../validator/password.validator';


var ImageSnippet = /** @class */ (function () {
    function ImageSnippet(src, file) {
        this.src = src;
        this.file = file;
        this.pending = false;
        this.status = 'init';
    }
    return ImageSnippet;
}());
var EditFeedbackComponent = /** @class */ (function () {
    function EditFeedbackComponent(_flashMessagesService, route, router, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.route = route;
        this.router = router;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.ratingClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.reviewid = '';
        this.jobfeedback = '';
        this.userslist = '';
        this.jobData = '';
        this.thisisdone = "";
        this.alllocations = "";
        this.states = '';
        this.counties = '';
        this.cities = '';
        this.allappliances = '';
        this.show_dialog = false;
        this.button_text = '';
        this.submitted = '';
        this.ratingClicked = '';
        this.makeBidForm();
        this.getFeedback();
        this.titleService.setTitle('Edit Feedback | MoveLaunch');
    }
    EditFeedbackComponent.prototype.makeBidForm = function () {
        this.angForm = this.fb.group({
            // name: ['',  Validators.required ],
            ratingSelected: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobFeedback: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
    };
    EditFeedbackComponent.prototype.getFeedback = function () {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        this.reviewid = this.route.snapshot.paramMap.get('reviewid');
        console.log(this.reviewid);
        this.jobservice.getUserFeedback(this.reviewid).subscribe(function (result) {
            /* this.createFromLocationForm(); */
            if (result.success) {
                _this.rating = result.review.rating;
                _this.ratingClicked = result.review.rating;
                _this.jobfeedback = result.review.feedback;
            }
            else {
                _this._flashMessagesService.show("No Review Found.", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
        /* this.jobservice.getJobBids(this.jobid).subscribe(result=>{
        
            
            $.each(result.users, function(index, value) {
                result.users[index].width = value.userRating*10;
            });
            this.userslist = result.users;
            console.log(this.userslist);
        }); */
    };
    EditFeedbackComponent.prototype.onClick = function (rating) {
        this.rating = rating;
        this.ratingClick.emit({
            itemId: this.itemId,
            rating: rating
        });
        this.ratingClicked = this.rating;
    };
    Object.defineProperty(EditFeedbackComponent.prototype, "f", {
        get: function () { return this.angForm.controls; },
        enumerable: true,
        configurable: true
    });
    EditFeedbackComponent.prototype.onSubmit = function () {
        var _this = this;
        this.submitted = true;
        if (this.angForm.invalid) {
            return;
        }
        else {
            var rating_info = this.angForm.value;
            this.reviewid = this.route.snapshot.paramMap.get('reviewid');
            this.jobservice.updateReviews(rating_info, this.reviewid).subscribe(function (result) {
                if (result.success) {
                    _this._flashMessagesService.show('Your review has been submit successfully.', { cssClass: 'alert-success', timeout: 5000 });
                }
                else {
                    _this._flashMessagesService.show(result.message, { cssClass: 'alert-danger', timeout: 5000 });
                }
            });
        }
    };
    EditFeedbackComponent.prototype.deleteJob = function (jobID) {
        var _this = this;
        this.jobservice.deleteJob(jobID).subscribe(function (result) {
            if (result.success) {
                _this._flashMessagesService.show("job has been deleted successfully", { cssClass: 'alert-success', timeout: 6000 });
            }
            else {
                _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    EditFeedbackComponent.prototype.toggle = function () {
        this.show_dialog = !this.show_dialog;
        this.button_text = this.show_dialog ? 'View Less' : 'View More';
    };
    EditFeedbackComponent.prototype.ngOnInit = function () {
        this.inputName = this.itemId + '_rating';
        this.first_show = true;
        this.button_text = 'View More';
        this.ratingClicked = '';
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], EditFeedbackComponent.prototype, "rating", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], EditFeedbackComponent.prototype, "itemId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])
    ], EditFeedbackComponent.prototype, "ratingClick", void 0);
    EditFeedbackComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./editfeedback.component.html */ "./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.html"),
            styles: [__webpack_require__(/*! ./editfeedback.component.css */ "./src/app/frontend/views/jobs/users/editfeedback/editfeedback.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__["FlashMessagesService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_5__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], EditFeedbackComponent);
    return EditFeedbackComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/users/editjob/editjob.component.css":
/*!*************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/editjob/editjob.component.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-step-icon{\r\n\theight:32px !important;\r\n\twidth:32px !important;\r\n}\r\n.mat-icon-no-color{\r\ncolor: #1691be;\r\nfont-size: 20px;\r\nvertical-align: top !important;\r\n\t\r\n}\r\n.mat-icon-button.cdk-focused.cdk-program-focused{outline:none!important}\r\n.mat-icon-button:focus{\r\n\toutline:none!important\r\n}\r\n.invalid_field{\r\n\twidth: 100%;\r\n    margin-top: .25rem;\r\n    font-size: 80%;\r\n    color: #dc3545;\r\n}\r\n.job_change_step_page form .custom-control-label{\r\n\tpadding-left:30px\r\n}\r\n::ng-deep .mat-horizontal-stepper-header-container{display:none !important}\r\n::ng-deep .mat-horizontal-stepper-header{\r\n    pointer-events: none !important;\r\n}\r\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\r\nspan.itemcount{width:25px; float:right}\r\n.mat-datepicker-toggle {\r\n\tposition: absolute;\r\n\ttop: 12px;\r\n\tright: 12px;\r\n\tline-height: 45px;\r\n}\r\n.desc .loc_lable{    width: 100px;\r\n    position: relative;\r\n    display: inline-block;\r\n\ttext-align: right;\r\n\tfont-weight:600;\r\n\tfont-size:14px\r\n}\r\n.desc .loc_lable::after{content:\":\"}\r\n.job-info{\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n}\r\n.items-moved .job-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.joblisting-panel .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.job-info .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.items-moved.joblisting-panel .title {\r\n\tcolor:#303030;\r\n    font-weight: 900;  \r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9lZGl0am9iL2VkaXRqb2IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLHNCQUFzQjtDQUN0QixxQkFBcUI7QUFDdEI7QUFDQTtBQUNBLGNBQWM7QUFDZCxlQUFlO0FBQ2YsOEJBQThCOztBQUU5QjtBQUVBLGlEQUFpRCxzQkFBc0I7QUFDdkU7Q0FDQztBQUNEO0FBRUE7Q0FDQyxXQUFXO0lBQ1Isa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0FBQ2xCO0FBRUE7Q0FDQztBQUNEO0FBQ0EsbURBQW1ELHVCQUF1QjtBQUUxRTtJQUNJLCtCQUErQjtBQUNuQztBQUNBLGVBQWUsVUFBVSxDQUFDLGVBQWUsQ0FBQyxlQUFlO0FBQ3pELGVBQWUsVUFBVSxFQUFFLFdBQVc7QUFDdEM7Q0FDQyxrQkFBa0I7Q0FDbEIsU0FBUztDQUNULFdBQVc7Q0FDWCxpQkFBaUI7QUFDbEI7QUFDQSxxQkFBcUIsWUFBWTtJQUM3QixrQkFBa0I7SUFDbEIscUJBQXFCO0NBQ3hCLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2Y7QUFDRDtBQUNBLHdCQUF3QixXQUFXO0FBRW5DO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2QjtBQUNBO0lBR0ksYUFBYTtJQUVULGVBQWU7QUFDdkI7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0NBQ0MsYUFBYTtJQUNWLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvZWRpdGpvYi9lZGl0am9iLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXN0ZXAtaWNvbntcclxuXHRoZWlnaHQ6MzJweCAhaW1wb3J0YW50O1xyXG5cdHdpZHRoOjMycHggIWltcG9ydGFudDtcclxufVxyXG4ubWF0LWljb24tbm8tY29sb3J7XHJcbmNvbG9yOiAjMTY5MWJlO1xyXG5mb250LXNpemU6IDIwcHg7XHJcbnZlcnRpY2FsLWFsaWduOiB0b3AgIWltcG9ydGFudDtcclxuXHRcclxufVx0XHJcblxyXG4ubWF0LWljb24tYnV0dG9uLmNkay1mb2N1c2VkLmNkay1wcm9ncmFtLWZvY3VzZWR7b3V0bGluZTpub25lIWltcG9ydGFudH1cclxuLm1hdC1pY29uLWJ1dHRvbjpmb2N1c3tcclxuXHRvdXRsaW5lOm5vbmUhaW1wb3J0YW50XHJcbn1cclxuXHJcbi5pbnZhbGlkX2ZpZWxke1xyXG5cdHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLXRvcDogLjI1cmVtO1xyXG4gICAgZm9udC1zaXplOiA4MCU7XHJcbiAgICBjb2xvcjogI2RjMzU0NTtcclxufVxyXG5cclxuLmpvYl9jaGFuZ2Vfc3RlcF9wYWdlIGZvcm0gLmN1c3RvbS1jb250cm9sLWxhYmVse1xyXG5cdHBhZGRpbmctbGVmdDozMHB4XHJcbn1cclxuOjpuZy1kZWVwIC5tYXQtaG9yaXpvbnRhbC1zdGVwcGVyLWhlYWRlci1jb250YWluZXJ7ZGlzcGxheTpub25lICFpbXBvcnRhbnR9XHJcblxyXG46Om5nLWRlZXAgLm1hdC1ob3Jpem9udGFsLXN0ZXBwZXItaGVhZGVye1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5zcGFuLml0ZW1uYW1leyB3aWR0aDoyMHB4O2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MTRweCB9XHJcbnNwYW4uaXRlbWNvdW50e3dpZHRoOjI1cHg7IGZsb2F0OnJpZ2h0fVxyXG4ubWF0LWRhdGVwaWNrZXItdG9nZ2xlIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0dG9wOiAxMnB4O1xyXG5cdHJpZ2h0OiAxMnB4O1xyXG5cdGxpbmUtaGVpZ2h0OiA0NXB4O1xyXG59XHJcbi5kZXNjIC5sb2NfbGFibGV7ICAgIHdpZHRoOiAxMDBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRmb250LXdlaWdodDo2MDA7XHJcblx0Zm9udC1zaXplOjE0cHhcclxufVxyXG4uZGVzYyAubG9jX2xhYmxlOjphZnRlcntjb250ZW50OlwiOlwifVxyXG5cclxuLmpvYi1pbmZve1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuLml0ZW1zLW1vdmVkIC5qb2ItaW5mbyB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG59IFxyXG5cclxuLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbi5qb2ItaW5mbyAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLml0ZW1zLW1vdmVkLmpvYmxpc3RpbmctcGFuZWwgLnRpdGxlIHtcclxuXHRjb2xvcjojMzAzMDMwO1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDsgIFxyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/editjob/editjob.component.html":
/*!**************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/editjob/editjob.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_change_step_page\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\t\t\t<flash-messages></flash-messages>\r\n\t\t\t<mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\r\n\t\t\t\t\r\n\t\t\t\t<mat-step >\r\n\t\t\t\t\t\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"angForm\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">You can select more then one option</h3>\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"services\" *ngFor=\"let option of angForm.controls.services.controls; let i=index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(selectedServices && selectedServices.includes(jobservices[i]._id))?true : false\" [formControlName]=\"i\"  (click)=\"checkName(option.name)\" type=\"checkbox\" class=\"custom-control-input\" id=\"moving_{{i}}\" value=\"{{jobservices[i]._id}}\" [ngModel] = \"(selectedServices && selectedServices.includes(jobservices[i]._id))?true : false\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"moving_{{i}}\">{{jobservices[i].name}}</label>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\" (click)=\"isChangeheading(stepper);\" type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showMoving\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"angOptionsForm\" >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to move:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepicker.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepicker\" class=\"form-control\" id=\"job_start_date\" formControlName=\"job_start_date\"   [ngClass]=\"{ 'is-invalid': submitted_moving && f.job_start_date.errors}\" [(ngModel)] = \"movingData && movingData.jobStart\"  placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepicker\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepicker></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_moving && f.job_start_date.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"f.job_start_date.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"f.job_start_date.errors.matDatepickerMin\">Job Date is passed. This is an old job</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help moving?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"options\" *ngFor=\"let option of angOptionsForm.controls.options.controls; let i = index;\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(movingData && movingData.selected_options.includes(optionsData[i].id))?true : false\" [ngModel] = \"(movingData && movingData.selected_options.includes(optionsData[i].id))?true : false\" [formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"options_{{i}}\" >\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"options_{{i}}\">{{optionsData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage1\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage1\">Select at least one options for moving</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\"  (click)=\"setOptionsAvailable(stepper);\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showMoving\">\r\n\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"secondFormGroup\">\r\n\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t<h1 class=\"step-title\">Moving from Location</h1> \r\n\t\t\t\t\t\t <div formArrayName=\"itemRows\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of secondFormGroup.controls.itemRows['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Where are you moving from ?</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from\" (change)=\"toggleMovingFrom($event,i,itemrow)\" formControlName=\"moving_from\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving from ?</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"f2.controls[i].controls.moving_from.errors.required\">Moving From is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_floor\"  formControlName=\"moving_from_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_floor.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_floor.errors.required\">Moving From floor is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_state\" formControlName=\"moving_from_state\" class=\"form-control \" (change)= \"getCountiesFrom($event,secondFormGroup)\" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_state.errors }\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_state.errors.required\">Moving From state is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_county\" formControlName=\"moving_from_county\" class=\"form-control \" (change)= \"getCitiesFrom($event,i,secondFormGroup)\" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties1\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_county.errors.required\">Moving From county is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> \r\n \r\n \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_city\" formControlName=\"moving_from_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_city.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities1\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_city.errors.required\">Moving From city is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>zipcode</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"  maxlength=\"5\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"  id=\"moving_from_zipcode\" formControlName=\"moving_from_zipcode\" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_zipcode.errors.required\">Moving From zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_from_address\" formControlName=\"moving_from_address\" [ngClass]=\"{ 'is-invalid': submitted_2 && f2.controls[i].controls.moving_from_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_2 && f2.controls[i].controls.moving_from_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f2.controls[i].controls.moving_from_address.errors.required\">Moving From address is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"secondFormGroup.controls.itemRows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button (click)=\"addNewRow()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFromLocation(stepper,secondFormGroup,'moving',thirdFormGroup);\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t</form>\r\n\t\t\t  </mat-step>\r\n\t\t\t  <mat-step *ngIf = \"showMoving\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirdFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Moving to Location</h1> \r\n\t\t\t\t\t\t   <div formArrayName=\"itemRowsTo\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of thirdFormGroup.controls.itemRowsTo['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Where are you moving to ?</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to\" (change)=\"toggleMovingTo($event,i,itemrow)\" formControlName=\"moving_to\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to.errors}\" >\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving to ?</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to.errors.required\">Moving To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_floor\" formControlName=\"moving_to_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_floor.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_floor.errors.required\">Moving To floor is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_state\" formControlName=\"moving_to_state\" class=\"form-control \" (change)= \"getCountiesTo($event,thirdFormGroup)\" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_state.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_state.errors.required\">Moving To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_county\" formControlName=\"moving_to_county\" class=\"form-control \" (change)= \"getCitiesTo($event,i,thirdFormGroup)\" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties2\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t    </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_county.errors.required\">Moving To county is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_city\" formControlName=\"moving_to_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_city.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities2\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_city.errors.required\">Moving To city is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Zipcode</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\"  maxlength=\"5\" class=\"form-control\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\" id=\"moving_to_zipcode\" formControlName=\"moving_to_zipcode\" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_zipcode.errors.required\">Moving To zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_to_address\" formControlName=\"moving_to_address\" [ngClass]=\"{ 'is-invalid': submitted_3 && f3.controls[i].controls.moving_to_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submitted_3 && f3.controls[i].controls.moving_to_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"f3.controls[i].controls.moving_to_address.errors.required\">Moving To address is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button *ngIf=\"thirdFormGroup.controls.itemRowsTo.controls.length > 1\" (click)=\"deleteRowTo(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"addNewRowTo()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveToLocation(stepper,thirdFormGroup,'moving');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form> \r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showAppliances\" >\r\n\t\t\t\t\t<form [formGroup]=\"FourthFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of FourthFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}} </label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_moving[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"movingData && movingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"appliance_assembly\" [(ngModel)]=\"movingData && movingData.appliance_assembly\" formControlName=\"appliance_assembly\"> <label class=\"custom-control-label\" for=\"appliance_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,FourthFormGroup,'moving');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showMoving && showBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_moving[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"movingData && movingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"bedrooms_assembly\" [(ngModel)]=\"movingData && movingData.abedrooms_assembly\" formControlName=\"bedrooms_assembly\"> <label class=\"custom-control-label\" for=\"bedrooms_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthFormGroup,'moving');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showLivingRooms\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"movingData && movingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"livingRooms_assembly\" [(ngModel)]=\"movingData && movingData.livingRooms_assembly\" formControlName=\"livingRooms_assembly\"> <label class=\"custom-control-label\" for=\"livingRooms_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthFormGroup,'moving');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"movingData && movingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"familyRooms_assembly\" [(ngModel)]=\"movingData && movingData.familyRooms_assembly\" formControlName=\"familyRooms_assembly\"> <label class=\"custom-control-label\" for=\"familyRooms_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhFormGroup,'moving');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"movingData && movingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"diningRooms_assembly\" [(ngModel)]=\"movingData && movingData.diningRooms_assembly\" formControlName=\"diningRooms_assembly\"> <label class=\"custom-control-label\" for=\"diningRooms_assembly\">Need Help in Dining Rooms assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthFormGroup,'moving');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step   *ngIf = \"showMoving && showKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let appliance of ninthFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"movingData && movingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"kitchen_assembly\" [(ngModel)]=\"movingData && movingData.kitchen_assembly\" formControlName=\"kitchen_assembly\"> <label class=\"custom-control-label\" for=\"kitchen_assembly\">Need Help in Kitchen assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthFormGroup,'moving');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"movingData && movingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"basement_assembly\" [(ngModel)]=\"movingData && movingData.basement_assembly\" formControlName=\"basement_assembly\"> <label class=\"custom-control-label\" for=\"basement_assembly\">Need Help in Basements assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthFormGroup,'moving');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"movingData && movingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"garage_assembly\" [(ngModel)]=\"movingData && movingData.garage_assembly\" formControlName=\"garage_assembly\"> <label class=\"custom-control-label\" for=\"garage_assembly\">Need Help in Garages assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhFormGroup,'moving');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showPatiyoYards\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tweleveFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of tweleveFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"movingData && movingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"patioyards_assembly\" [(ngModel)]=\"movingData && movingData.patioyards_assembly\" formControlName=\"patioyards_assembly\"> <label class=\"custom-control-label\" for=\"patioyards_assembly\">Need Help in patioyards assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,tweleveFormGroup,'moving');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"movingData && movingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"patioyards_assembly\" [(ngModel)]=\"movingData && movingData.patioyards_assembly\" formControlName=\"patioyards_assembly\"> <label class=\"custom-control-label\" for=\"patioyards_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOffices(stepper,thirteenFormGroup,'moving');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showMoving && showOversized\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be Moved</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_moving[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"movingData && movingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12 custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"custom-control-input\" id=\"patioyards_assembly\" [(ngModel)]=\"movingData && movingData.patioyards_assembly\" formControlName=\"patioyards_assembly\"> <label class=\"custom-control-label\" for=\"patioyards_assembly\">Need Help in Appliances assembly/disassembly ?</label> \r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOverSized(stepper,fourteenFormGroup,'moving');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n<!---------------------------------------------------- Packing Overview ------------------------------------------------------------------>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showPacking\">\r\n\t\t\t\t\t<form [formGroup] = \"angPackedOptionsForm\"  class=\"esitame-form\"  >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to pack:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepickerPacking.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepickerPacking\" class=\"form-control\" id=\"job_start_date_packing\" formControlName=\"job_start_date_packing\"   [ngClass]=\"{ 'is-invalid': submitted_packing && _f1.job_start_date_packing.errors}\" [(ngModel)] = \"packingData && packingData.jobStart\"  placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepickerPacking\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepickerPacking></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_packing && _f1.job_start_date_packing.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_f1.job_start_date_packing.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_f1.job_start_date_packing.errors.matDatepickerMin\">Job Date is passed. This is an old job</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help Packing?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"packingoptions\" *ngFor=\"let packingoption of angPackedOptionsForm.controls.packingoptions.controls; let i = index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(packingData && packingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [ngModel] = \"(packingData && packingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"packingoptions_{{i}}\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"packingoptions_{{i}}\">{{optionsPackedData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage2\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage2\">Select at least one options for moving</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\"  (click)=\"setPackingOptionsAvailable(stepper,'forPacking');\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showPacking\">\r\n\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"secondpackedFormGroup\">\r\n\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t<h1 class=\"step-title\">Packing from Location</h1> \r\n\t\t\t\t\t\t <div formArrayName=\"itemRows\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of secondpackedFormGroup.controls.itemRows['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Where are you moving from ?</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from\" (change)=\"toggleMovingFrom($event,i,itemrow)\" formControlName=\"moving_from\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving from ?</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"_f2.controls[i].controls.moving_from.errors.required\">Moving From is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_floor\" formControlName=\"moving_from_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_floor.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_floor.errors.required\">Moving From floor is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_state\" formControlName=\"moving_from_state\" class=\"form-control \" (change)= \"getCountiesFrom($event,secondpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_state.errors }\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_state.errors.required\">Moving From state is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_county\" formControlName=\"moving_from_county\" class=\"form-control \" (change)= \"getCitiesFrom($event,i,secondpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties1\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_county.errors.required\">Moving From county is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> \r\n \r\n \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_city\" formControlName=\"moving_from_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_city.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities1\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_city.errors.required\">Moving From city is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>zipcode</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"  maxlength=\"5\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"  id=\"moving_from_zipcode\" formControlName=\"moving_from_zipcode\" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_zipcode.errors.required\">Moving From zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_from_address\" formControlName=\"moving_from_address\" [ngClass]=\"{ 'is-invalid': submittedP_2 && _f2.controls[i].controls.moving_from_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_2 && _f2.controls[i].controls.moving_from_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f2.controls[i].controls.moving_from_address.errors.required\">Moving From address is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"secondpackedFormGroup.controls.itemRows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button (click)=\"addNewRow()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFromLocation(stepper,secondpackedFormGroup,'packing',thirdpackedFormGroup);\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t</form>\r\n\t\t\t  </mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showPacking\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirdpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Packing to Location</h1> \r\n\t\t\t\t\t\t   <div formArrayName=\"itemRowsTo\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of thirdpackedFormGroup.controls.itemRowsTo['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Where are you moving to ?</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to\" (change)=\"toggleMovingTo($event,i,itemrow)\" formControlName=\"moving_to\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to.errors}\" >\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving to ?</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to.errors.required\">Packing To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_floor\"  formControlName=\"moving_to_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_floor.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_floor.errors.required\">Packing To floor is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_state\" formControlName=\"moving_to_state\" class=\"form-control \" (change)= \"getCountiesTo($event,thirdpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_state.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_state.errors.required\">Packing To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_county\" formControlName=\"moving_to_county\" class=\"form-control \" (change)= \"getCitiesTo($event,i,thirdpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties2\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t    </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_county.errors.required\">Moving To county is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_city\" formControlName=\"moving_to_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_city.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities2\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_city.errors.required\">Packing To city is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Zipcode</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\"  maxlength=\"5\" class=\"form-control\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\" id=\"moving_to_zipcode\" formControlName=\"moving_to_zipcode\" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_zipcode.errors.required\">Packing To zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_to_address\" formControlName=\"moving_to_address\" [ngClass]=\"{ 'is-invalid': submittedP_3 && _f3.controls[i].controls.moving_to_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedP_3 && _f3.controls[i].controls.moving_to_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_f3.controls[i].controls.moving_to_address.errors.required\">Packing To address is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button *ngIf=\"thirdpackedFormGroup.controls.itemRowsTo.controls.length > 1\" (click)=\"deleteRowTo(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"addNewRowTo()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveToLocation(stepper,thirdpackedFormGroup,'packing');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form> \r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t <mat-step *ngIf = \"showPacking && showPackingAppliances\" >\r\n\t\t\t\t\t<form [formGroup] = \"fourthpackedFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of fourthpackedFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_packing[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"packingData && packingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,fourthpackedFormGroup,'packing');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showPacking && showPackingBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthpackedFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_packing[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"packingData && packingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthpackedFormGroup,'packing');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingLivingRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthpackedFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"packingData && packingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthpackedFormGroup,'packing');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhpackedFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"packingData && packingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhpackedFormGroup,'packing');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthpackedFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"packingData && packingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthpackedFormGroup,'packing');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showPacking && showPackingKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let appliance of ninthpackedFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"packingData && packingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthpackedFormGroup,'packing');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthpackedFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"packingData && packingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthpackedFormGroup,'packing');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhpackedFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"packingData && packingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhpackedFormGroup,'packing');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingPatiyoYards\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"twelevepackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of twelevepackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"packingData && packingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,twelevepackedFormGroup,'packing');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"packingData && packingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,thirteenpackedFormGroup,'packing');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showPacking && showPackingOversized\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be Packed</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_packing[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"packingData && packingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,fourteenpackedFormGroup,'packing');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n<!---------------------------------------------------- Packing Overview ------------------------------------------------------------------>\r\n<!---------------------------------------------------- Unpacking Overview ------------------------------------------------------------------>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<mat-step *ngIf = \"showUnPacking\">\r\n\t\t\t\t\t<form [formGroup] = \"angunPackedOptionsForm\"  class=\"esitame-form\"  >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to Unpack:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepickerunPacking.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepickerunPacking\" class=\"form-control\" id=\"job_start_date_unpacking\" formControlName=\"job_start_date_unpacking\"   [ngClass]=\"{ 'is-invalid': submitted_unpacking && _Uf1.job_start_date_unpacking.errors}\" [(ngModel)] = \"unpackingData && unpackingData.jobStart\"  placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepickerunPacking\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepickerunPacking></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_unpacking && _Uf1.job_start_date_unpacking.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_Uf1.job_start_date_unpacking.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_Uf1.job_start_date_unpacking.errors.matDatepickerMin\">Job Date is passed. This is an old job</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help Unpacking?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"packingoptions\" *ngFor=\"let packingoption of angunPackedOptionsForm.controls.packingoptions.controls; let i = index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(unpackingData && unpackingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [ngModel] = \"(unpackingData && unpackingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"unpackingoptions_{{i}}\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"unpackingoptions_{{i}}\">{{optionsPackedData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage3\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage3\">Select at least one options for moving</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\" (click)=\"setPackingOptionsAvailable(stepper,'forUnpacking');\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\t\t\r\n\t\t\t\t<mat-step *ngIf = \"showUnPacking\">\r\n\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"secondunpackedFormGroup\">\r\n\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t<h1 class=\"step-title\">Unpacking from Location</h1> \r\n\t\t\t\t\t\t <div formArrayName=\"itemRows\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of secondunpackedFormGroup.controls.itemRows['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Where are you moving from ?</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from\" (change)=\"toggleMovingFrom($event,i,itemrow)\" formControlName=\"moving_from\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving from ?</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"_UPf2.controls[i].controls.moving_from.errors.required\">Moving From is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_floor\" formControlName=\"moving_from_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_floor.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_floor.errors.required\">Moving From floor is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_state\" formControlName=\"moving_from_state\" class=\"form-control \" (change)= \"getCountiesFrom($event,secondunpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_state.errors }\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_state.errors.required\">Moving From state is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_county\" formControlName=\"moving_from_county\" class=\"form-control \" (change)= \"getCitiesFrom($event,i,secondunpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties1\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_county.errors.required\">Moving From county is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> \r\n \r\n \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_city\" formControlName=\"moving_from_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_city.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities1\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_city.errors.required\">Moving From city is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>zipcode</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"  maxlength=\"5\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"  id=\"moving_from_zipcode\" formControlName=\"moving_from_zipcode\" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_zipcode.errors.required\">Moving From zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_from_address\" formControlName=\"moving_from_address\" [ngClass]=\"{ 'is-invalid': submittedUP_2 && _UPf2.controls[i].controls.moving_from_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_2 && _UPf2.controls[i].controls.moving_from_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf2.controls[i].controls.moving_from_address.errors.required\">Moving From address is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"secondunpackedFormGroup.controls.itemRows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button (click)=\"addNewRow()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFromLocation(stepper,secondunpackedFormGroup,'unpacking',thirdunpackedFormGroup);\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t</form>\r\n\t\t\t  </mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showUnPacking\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirdunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Unpacking to Location</h1> \r\n\t\t\t\t\t\t   <div formArrayName=\"itemRowsTo\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of thirdunpackedFormGroup.controls.itemRowsTo['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Where are you moving to ?</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to\" (change)=\"toggleMovingTo($event,i,itemrow)\" formControlName=\"moving_to\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to.errors}\" >\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving to ?</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to.errors.required\">Packing To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_floor\"  formControlName=\"moving_to_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_floor.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_floor.errors.required\">Packing To floor is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_state\" formControlName=\"moving_to_state\" class=\"form-control \" (change)= \"getCountiesTo($event,thirdunpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_state.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_state.errors.required\">Packing To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_county\" formControlName=\"moving_to_county\" class=\"form-control \" (change)= \"getCitiesTo($event,i,thirdunpackedFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties2\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t    </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_county.errors.required\">Moving To county is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_city\" formControlName=\"moving_to_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_city.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities2\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_city.errors.required\">Packing To city is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Zipcode</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\"  maxlength=\"5\" class=\"form-control\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\" id=\"moving_to_zipcode\" formControlName=\"moving_to_zipcode\" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_zipcode.errors.required\">Packing To zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_to_address\" formControlName=\"moving_to_address\" [ngClass]=\"{ 'is-invalid': submittedUP_3 && _UPf3.controls[i].controls.moving_to_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedUP_3 && _UPf3.controls[i].controls.moving_to_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"_UPf3.controls[i].controls.moving_to_address.errors.required\">Packing To address is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button *ngIf=\"thirdunpackedFormGroup.controls.itemRowsTo.controls.length > 1\" (click)=\"deleteRowTo(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"addNewRowTo()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveToLocation(stepper,thirdunpackedFormGroup,'unpacking');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form> \r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t<mat-step *ngIf = \"showUnPacking && showUnpackingAppliances\" >\r\n\t\t\t\t\t<form [formGroup] = \"fourthunpackedFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of fourthunpackedFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}} </label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_unpacking[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"unpackingData && unpackingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,fourthunpackedFormGroup,'unpacking');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showUnPacking && showUnpackingBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthunpackedFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_unpacking[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"unpackingData && unpackingData && unpackingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthunpackedFormGroup,'unpacking');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingLivingRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthunpackedFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"unpackingData && unpackingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthunpackedFormGroup,'unpacking');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhunpackedFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"unpackingData && unpackingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhunpackedFormGroup,'unpacking');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthunpackedFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"unpackingData && unpackingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthunpackedFormGroup,'unpacking');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showUnPacking && showUnpackingKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let appliance of ninthunpackedFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"unpackingData && unpackingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthunpackedFormGroup,'unpacking');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthunpackedFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"unpackingData && unpackingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthunpackedFormGroup,'unpacking');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhunpackedFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"unpackingData && unpackingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhunpackedFormGroup,'unpacking');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingPatiyoYards\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tweleveunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of tweleveunpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unpackingData && unpackingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,tweleveunpackedFormGroup,'unpacking');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenunpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unpackingData && unpackingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,thirteenunpackedFormGroup,'unpacking');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showUnPacking && showUnpackingOversized\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenunpackedFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be Unpacked</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenunpackedFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unpacking[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unpackingData && unpackingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,fourteenunpackedFormGroup,'unpacking');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\t\r\n<!---------------------------------------------------- Unpacking Overview ------------------------------------------------------------------>\r\n<!---------------------------------------------------- Loading Overview ------------------------------------------------------------------>\r\n\t\t\t\t <mat-step *ngIf = \"showLoading\">\r\n\t\t\t\t\t<form [formGroup] = \"angLoadingOptionsForm\"  class=\"esitame-form\"  >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to Loading:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepickerLoading.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepickerLoading\" class=\"form-control\" id=\"job_start_date_loading\" formControlName=\"job_start_date_loading\"   [ngClass]=\"{ 'is-invalid': submitted_loading && _fL1.job_start_date_laoding.errors}\" [(ngModel)] = \"loadingData && loadingData.jobStart\"  placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepickerLoading\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepickerLoading></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_loading && _fL1.job_start_date_loading.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_fL1.job_start_date_loading.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_fL1.job_start_date_loading.errors.matDatepickerMin\">Job Date is passed. This is an old job</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help Loading?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"packingoptions\" *ngFor=\"let packingoption of angLoadingOptionsForm.controls.packingoptions.controls; let i = index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(loadingData && loadingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [ngModel] = \"(loadingData && loadingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"loadinggoptions_{{i}}\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"loadinggoptions_{{i}}\">{{optionsPackedData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage4\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage4\">Select at least one options for moving</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\"  (click)=\"setLoadingOptionsAvailable(stepper);\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\t\t\t\r\n\t\t\t\t<mat-step *ngIf = \"showLoading\">\r\n\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"secondloadingFormGroup\">\r\n\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t<h1 class=\"step-title\">Loading from Location</h1> \r\n\t\t\t\t\t\t <div formArrayName=\"itemRows\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of secondloadingFormGroup.controls.itemRows['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Where are you loading from ?</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from\" (change)=\"toggleMovingFrom($event,i,itemrow)\" formControlName=\"moving_from\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you loading from ?</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"fL2.controls[i].controls.moving_from.errors.required\">Moving From is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_floor\" formControlName=\"moving_from_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t <div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_floor.errors\" class=\"invalid-feedback\"> \r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_floor.errors.required\">Moving From floor is required</div> \r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_state\" formControlName=\"moving_from_state\" class=\"form-control \" (change)= \"getCountiesFrom($event,secondloadingFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_state.errors }\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_state.errors.required\">Moving From state is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_county\" formControlName=\"moving_from_county\" class=\"form-control \" (change)= \"getCitiesFrom($event,i,secondloadingFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties1\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_county.errors.required\">Moving From county is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> \r\n \r\n \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<select id=\"moving_from_city\" formControlName=\"moving_from_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_city.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities1\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_city.errors.required\">Moving From city is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>zipcode</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"  maxlength=\"5\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"  id=\"moving_from_zipcode\" formControlName=\"moving_from_zipcode\" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_zipcode.errors.required\">Moving From zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_from_address\" formControlName=\"moving_from_address\" [ngClass]=\"{ 'is-invalid': submittedL_2 && fL2.controls[i].controls.moving_from_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedL_2 && fL2.controls[i].controls.moving_from_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fL2.controls[i].controls.moving_from_address.errors.required\">Moving From address is required</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</div>  \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"secondloadingFormGroup.controls.itemRows.controls.length > 1\" (click)=\"deleteRow(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button (click)=\"addNewRow()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFromLoadingLocation(stepper,secondloadingFormGroup,'loading',thirdloadingFormGroup);\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t</form>\r\n\t\t\t  </mat-step>\r\n\t\t\t \r\n\t\t\t\t  <mat-step *ngIf = \"showLoadingAppliances\" >\r\n\t\t\t\t\t<form [formGroup]=\"FourthloadingFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of FourthloadingFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}} </label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_loading[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"loadingData && loadingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,FourthloadingFormGroup,'loading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showLoading && showLoadingBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthloadingFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_loading[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"loadingData && loadingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthloadingFormGroup,'loading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingLivingRooms\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthloadingFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"loadingData && loadingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthloadingFormGroup,'loading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhloadingFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"loadingData && loadingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhloadingFormGroup,'loading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthloadingFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"loadingData && loadingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthloadingFormGroup,'loading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step   *ngIf = \"showLoading && showLoadingKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let appliance of ninthloadingFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"loadingData && loadingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthloadingFormGroup,'loading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthloadingFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"loadingData && loadingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthloadingFormGroup,'loading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhloadingFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"loadingData && loadingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhloadingFormGroup,'loading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingPatiyoYards\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tweleveloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of tweleveloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"loadingData && loadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,tweleveloadingFormGroup,'loading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"loadingData && loadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOffices(stepper,thirteenloadingFormGroup,'loading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showLoadingOversized\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be Loaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_loading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"loadingData && loadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOverSized(stepper,fourteenloadingFormGroup,'loading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t<mat-step *ngIf = \"showUnLoading\">\r\n\t\t\t\t\t<form [formGroup] = \"angUnloadingOptionsForm\"  class=\"esitame-form\"  >\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<h3 class=\"title\">What day would you like to Unloading:</h3>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t<input type=\"text\" matInput readonly=\"readonly\" (click) = \"startDatepickerUnloading.open()\" [min]=\"minDate\" (ngModelChange)=\"updateCalcs($event)\" [matDatepicker]=\"startDatepickerUnloading\" class=\"form-control\" id=\"job_start_date_unloading\" formControlName=\"job_start_date_unloading\"   [ngClass]=\"{ 'is-invalid': submitted_unloading && _fUL1.job_start_date_unloading.errors}\" [(ngModel)] = \"unloadingData && unloadingData.jobStart\"  placeholder=\"Job Date\">\r\n\t\t\t\t\t\t\t <mat-datepicker-toggle matSuffix [for]=\"startDatepickerUnloading\"><mat-icon matDatepickerToggleIcon><i class=\"fa fa-calendar\" aria-hidden=\"true\"></i></mat-icon></mat-datepicker-toggle>\r\n\t\t\t\t\t\t\t <mat-datepicker touchUi #startDatepickerUnloading></mat-datepicker>\r\n\t\t\t\t\t\t\t<div *ngIf=\"submitted_unloading && _fUL1.job_start_date_unloading.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_fUL1.job_start_date_unloading.errors.required\">Job Date is required</div>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"_fUL1.job_start_date_unloading.errors.matDatepickerMin\">Job Date is passed. This is an old job</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t\t\t<div role=\"separator\" class=\"divider\"></div>\r\n\t\t\t\t\t\t<h3 class=\"mb-4\">Which room(s) do you need to help Unloading?</h3>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<div formArrayName=\"packingoptions\" *ngFor=\"let packingoption of angUnloadingOptionsForm.controls.packingoptions.controls; let i = index\">\r\n\t\t\t\t\t\t\t<div class=\"custom-control custom-checkbox mb-3\">\r\n\t\t\t\t\t\t\t  <input [attr.checked]=\"(unloadingData && unloadingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [ngModel] = \"(unloadingData && unloadingData.selected_options.includes(optionsPackedData[i].id))?true : false\" [formControlName]=\"i\" type=\"checkbox\" class=\"custom-control-input\" id=\"unloadingoptions_{{i}}\">\r\n\t\t\t\t\t\t\t  <label class=\"custom-control-label\" for=\"unloadingoptions_{{i}}\">{{optionsPackedData[i].name}}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"showErrorMessage1\">\r\n\t\t\t\t\t\t\t<div class=\"invalid_field\" *ngIf=\"showErrorMessage1\">Select at least one options for moving</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious  type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\"  (click)=\"setUnloadingOptionsAvailable(stepper);\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</mat-step>\t\t\r\n\t\t\t\t<mat-step *ngIf = \"showUnLoading\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirdunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1 jobGroup\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Unloading to Location</h1> \r\n\t\t\t\t\t\t   <div formArrayName=\"itemRowsTo\">\r\n\t\t\t\t\t\t\t <div *ngFor=\"let itemrow of thirdunloadingFormGroup.controls.itemRowsTo['controls']; let i=index\"  [formGroupName]=\"i\">\r\n\t\t\t\t\t\t\t  <h4>Location #{{ i + 1 }}</h4>\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Where are you moving to ?</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to\" (change)=\"toggleMovingTo($event,i,itemrow)\" formControlName=\"moving_to\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to.errors}\" >\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Where are you moving to ?</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"house\">House</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"apartment\">Apartments</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to.errors.required\">Moving To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Floor</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_floor\"  formControlName=\"moving_to_floor\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_floor.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Floor</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_floor.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_floor.errors.required\">Moving To floor is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>State</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_state\" formControlName=\"moving_to_state\" class=\"form-control \" (change)= \"getCountiesTo($event,thirdunloadingFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_state.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select State</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" title=\"{{ state.abbv }}\" value=\"{{ state.abbv }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ state.name }}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_state.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_state.errors.required\">Moving To is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>County</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_county\" formControlName=\"moving_to_county\" class=\"form-control \" (change)= \"getCitiesTo($event,i,thirdunloadingFormGroup)\" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_county.errors }\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select County</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let county of counties2\" title=\"{{ county }}\" value=\"{{ county }}\">\r\n\t\t\t\t\t\t\t\t\t\t  {{ county | titlecase }}\r\n\t\t\t\t\t\t\t\t\t    </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_county.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_county.errors.required\">Moving To county is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\r\n\r\n\t\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>City</label>\r\n\t\t\t\t\t\t\t\t\t<select id=\"moving_to_city\" formControlName=\"moving_to_city\" class=\"form-control \" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_city.errors}\">\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select City</option>\r\n\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities2\" title=\"{{ city }}\" value=\"{{ city }}\">\r\n\t\t\t\t\t\t\t\t\t\t\t{{ city | titlecase }}\r\n\t\t\t\t\t\t\t\t\t\t  </option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_city.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_city.errors.required\">Moving To city is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<label>Zipcode</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\"  maxlength=\"5\" class=\"form-control\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\" id=\"moving_to_zipcode\" formControlName=\"moving_to_zipcode\" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_zipcode.errors}\" placeholder=\"Zipcode*\">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_zipcode.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_zipcode.errors.required\">Moving To zipcode is required</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_zipcode.errors.maxLength\">5 Digits are allowed in zipcode</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col\">\r\n\t\t\t\t\t\t\t\t\t<label>Address</label>\r\n\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"  id=\"moving_to_address\" formControlName=\"moving_to_address\" [ngClass]=\"{ 'is-invalid': submittedU_3 && fUL2.controls[i].controls.moving_to_address.errors}\"  placeholder=\"Address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"submittedU_3 && fUL2.controls[i].controls.moving_to_address.errors\" class=\"invalid-feedback\">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"fUL2.controls[i].controls.moving_to_address.errors.required\">Moving To address is required</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button *ngIf=\"thirdunloadingFormGroup.controls.itemRowsTo.controls.length > 1\" (click)=\"deleteRowTo(i)\" class=\"btn btn-lg btn-primary mt-2\">Remove Location <i class=\"fas fa-minus-circle\"></i></button>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button (click)=\"addNewRowTo()\" class=\"btn btn-lg btn-primary mt-2\">Add Location <i class=\"fas fa-plus-circle\"></i></button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveToLocation(stepper,thirdunloadingFormGroup,'unloading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form> \r\n\t\t\t\t  </mat-step>\r\n\t\t\t \r\n\t\t\t\t  <mat-step *ngIf = \"showUnloadingAppliances\" >\r\n\t\t\t\t\t<form [formGroup]=\"fourthunloadingFormGroup\" class=\"esitame-form\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Appliances To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"allappliances\" *ngFor=\"let appliance of fourthunloadingFormGroup.controls.allappliances['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<label>{{allappliances[i].name}} </label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"appliance\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"apppli_unloading[i]\" name=\"appliances\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{allappliances[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"appliance_misc\" [(ngModel)]=\"unloadingData && unloadingData.appliances_misc\" formControlName=\"appliance_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveAppliances(stepper,fourthunloadingFormGroup,'unloading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step  *ngIf = \"showLoading && showUnloadingBedrooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"FifthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Bedrooms To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li formArrayName=\"bedrooms\" *ngFor=\"let bedroom of FifthunloadingFormGroup.controls.bedrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{bedrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"bedrooms\" class=\"form-control\" [formControlName]=\"i\" [(ngModel)]=\"beds_unloading[i]\"  name=\"bedrooms\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{bedrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"bedrooms_misc\" [(ngModel)]=\"unloadingData && unloadingData.bedrooms_misc\" formControlName=\"bedrooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t \r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveBedrooms(stepper,FifthunloadingFormGroup,'unloading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showUnloadingLivingRooms\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"sixthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Living Rooms To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"livingrooms\" *ngFor=\"let livingroom of sixthunloadingFormGroup.controls.livingrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{livingrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"livingrooms\" class=\"form-control\" [formControlName]=\"i\" name=\"livingrooms\" [(ngModel)]=\"living_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{livingrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"livingRooms_misc\" [(ngModel)]=\"unloadingData && unloadingData.livingRooms_misc\"  formControlName=\"livingRooms_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveLivingRooms(stepper,sixthunloadingFormGroup,'unloading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showUnloadingFamilyRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"seventhunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Family Rooms To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"familyrooms\" *ngFor=\"let appliance of seventhunloadingFormGroup.controls.familyrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{familyrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"familyroom\" class=\"form-control\" [formControlName]=\"i\" name=\"familyrooms\" [(ngModel)]=\"family_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{familyrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"familyRooms_misc\" [(ngModel)]=\"unloadingData && unloadingData.familyRooms_misc\" formControlName=\"familyRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveFamilyRooms(stepper,seventhunloadingFormGroup,'unloading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showUnloadingDiningRooms\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eigthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Dining Rooms To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"diningrooms\" *ngFor=\"let diningroom of eigthunloadingFormGroup.controls.diningrooms['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{diningrooms[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"diningroom\" class=\"form-control\" [formControlName]=\"i\" name=\"diningrooms\" [(ngModel)]=\"dining_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{diningrooms[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"dininRooms_misc\" [(ngModel)]=\"unloadingData && unloadingData.diningRooms_misc\" formControlName=\"dininRooms_misc\"  placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveDiningRooms(stepper,eigthunloadingFormGroup,'unloading');\"   >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step   *ngIf = \"showLoading && showUnloadingKitchen\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"ninthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Kitchens To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"kitchens\" *ngFor=\"let appliance of ninthunloadingFormGroup.controls.kitchens['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{kitchens[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"kitchen\" class=\"form-control\" [formControlName]=\"i\" name=\"kitchens\" [(ngModel)]=\"kitch_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{kitchens[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"kitchen_misc\" [(ngModel)]=\"unloadingData && unloadingData.kitchen_misc\"  formControlName=\"kitchen_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveKitchens(stepper,ninthunloadingFormGroup,'unloading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showUnloadingBasement\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tenthunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Basements To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"basements\" *ngFor=\"let basement of tenthunloadingFormGroup.controls.basements['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{basements[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"basement\" class=\"form-control\" [formControlName]=\"i\" name=\"basements\" [(ngModel)]=\"base_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{basements[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"basement_misc\" [(ngModel)]=\"unloadingData && unloadingData.basement_misc\" formControlName=\"basement_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  (click)=\"saveBasements(stepper,tenthunloadingFormGroup,'unloading');\"  >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showUnloadingGarage\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"eleventhunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Garages To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"garages\" *ngFor=\"let garage of eleventhunloadingFormGroup.controls.garages['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{garages[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"garage\" class=\"form-control\" [formControlName]=\"i\" name=\"garages\" [(ngModel)]=\"garge_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{garages[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"garage_misc\" [(ngModel)]=\"unloadingData && unloadingData.garage_misc\" formControlName=\"garage_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveGarages(stepper,eleventhunloadingFormGroup,'unloading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showUnloadingPatiyoYards\">\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"tweleveunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Patioyards To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of tweleveunloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unloadingData && unloadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"savePatiyoyards(stepper,tweleveunloadingFormGroup,'unloading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showUnloadingOffices\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"thirteenunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Office To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of thirteenunloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unloadingData && unloadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOffices(stepper,thirteenunloadingFormGroup,'unloading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step *ngIf = \"showLoading && showUnloadingOversized\" >\r\n\t\t\t\t\t<form class=\"esitame-form\" [formGroup]=\"fourteenunloadingFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Oversized Items To be Unloaded</h1> \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t<ul class=\"form-row\" >\r\n\t\t\t\t\t\t\t\t<li  formArrayName=\"patioyards\" *ngFor=\"let patioyard of fourteenunloadingFormGroup.controls.patioyards['controls']; let i = index\" class=\"form-row col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<label>{{patioyards[i].name}}</label>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"appliance_id\" [formControlName]=\"i\" value=\"\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t\t\t\t<select id=\"patioyard\" class=\"form-control\" [formControlName]=\"i\" name=\"patioyards\" [(ngModel)]=\"patio_unloading[i]\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<option value = \"null\" title=\"select\">Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let x of [1,2,3,4,5,6,7,8,9,10]\" value=\"{{x}}_{{patioyards[i]._id}}\">{{x}}</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<div class=\"form-group col-md-12\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"patioYard_misc\" [(ngModel)]=\"unloadingData && unloadingData.patioYard_misc\" formControlName=\"patioYard_misc\" placeholder=\"Do you want to provide any Instruction?\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t <div class=\"form-row\"> \r\n\t\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\"  matStepperPrevious><i class=\"fas fa-arrow-left\"></i> Back</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-2\" (click)=\"saveOverSized(stepper,fourteenunloadingFormGroup,'unloading');\" >Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t  </div> \t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n<!---------------------------------------------------- Loading Overview ------------------------------------------------------------------>\r\n<!---------------------------------------------------- Unloading Overview ------------------------------------------------------------------>\r\n\t\t\t\t\t\r\n\t\t\t\t  <mat-step>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<div class=\"step1\" >\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Basic Information</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Firstname </span> {{ jobData.firstname }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ jobData.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{ jobData.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{jobData.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Lastname </span>  {{ jobData.lastname }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{ jobData.county }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Phone </span>  {{ jobData.phone }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{jobData.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t \t<div class=\"step1\" *ngIf=\"showMoving && movingData\" >\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Moving Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{movingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\"  *ngIf=\"movingData && movingData.moving_from.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of movingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"movingData && movingData.moving_to.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of movingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Moved\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.appliances  && movingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of movingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.appliances_misc\">{{ movingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.appliances_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.appliances_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.appliances && movingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.bedRooms  && movingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of movingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.bedrooms_misc\">{{ movingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.bedRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.bedRooms_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.bedRooms && movingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.livingRooms && movingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of movingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.livingRooms_misc\">{{ movingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.livingRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.livingRooms_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.livingRooms && movingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.familyRooms && movingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of movingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.familyRooms_misc\">{{ movingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.familyRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.familyRooms_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.familyRooms && movingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.diningRooms  && movingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of movingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.diningRooms_misc\">{{ movingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.diningRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.diningRooms_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.diningRooms && movingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.kitchen && movingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of movingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.kitchen_misc\">{{ movingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.kitchen_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.kitchen_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.kitchen && movingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.basement && movingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of movingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.basement_misc\">{{ movingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.basement_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.basement_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.basement && movingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.garage  && movingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of movingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.garage_misc\">{{ movingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.garage_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.garage_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.garage && movingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.patioYard  && movingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of movingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.patioYard_misc\">{{ movingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.patioYard_assembly\">Yes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.patioYard_assembly\">No</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"movingData.patioYard && movingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t<div class=\"step1\" *ngIf=\"showPacking && packingData\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Packing Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{packingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"packingData && packingData.moving_from.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of packingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"packingData && packingData.moving_from.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of packingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Packed\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.appliances  && packingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of packingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.appliances_misc\">{{ packingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.appliances && packingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.bedRooms  && packingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of packingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.bedrooms_misc\">{{ packingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.bedRooms && packingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.livingRooms && packingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of packingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.livingRooms_misc\">{{ packingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.livingRooms && packingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.familyRooms && packingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of packingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.familyRooms_misc\">{{ packingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.familyRooms && packingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.diningRooms  && packingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of packingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.diningRooms_misc\">{{ packingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.diningRooms && packingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.kitchen && packingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of packingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.kitchen_misc\">{{ packingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.kitchen && packingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.basement && packingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of packingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.basement_misc\">{{ packingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.basement && packingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.garage  && packingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of packingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.garage_misc\">{{ packingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.garage && packingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.patioYard  && packingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of packingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.patioYard_misc\">{{ packingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"packingData.patioYard && packingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t<div class=\"step1\" *ngIf=\"showUnPacking && unpackingData\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Unpacking Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{unpackingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"unpackingData && unpackingData.moving_from.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div  *ngFor=\"let movingfrom of unpackingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"unpackingData && unpackingData.moving_to.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div  *ngFor=\"let movingto of unpackingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Unpacked\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.appliances  && unpackingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of unpackingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.appliances_misc\">{{ unpackingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.appliances && unpackingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.bedRooms  && unpackingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of unpackingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.bedrooms_misc\">{{ unpackingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.bedRooms && unpackingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.livingRooms && unpackingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of unpackingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.livingRooms_misc\">{{ unpackingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.livingRooms && unpackingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.familyRooms && unpackingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of unpackingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.familyRooms_misc\">{{ unpackingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.familyRooms && unpackingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.diningRooms  && unpackingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of unpackingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.diningRooms_misc\">{{ unpackingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.diningRooms && unpackingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.kitchen && unpackingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of unpackingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.kitchen_misc\">{{ unpackingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.kitchen && unpackingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.basement && unpackingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of unpackingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.basement_misc\">{{ unpackingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.basement && unpackingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.garage  && unpackingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of unpackingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.garage_misc\">{{ unpackingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.garage && unpackingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.patioYard  && unpackingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of unpackingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.patioYard_misc\">{{ unpackingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unpackingData.patioYard && unpackingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"step1\" *ngIf=\"showLoading && loadingData\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Loading Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{loadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-12\"  *ngIf=\"loadingData && loadingData.moving_from.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of loadingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Loaded\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.appliances  && loadingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of loadingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.appliances_misc\">{{ loadingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.appliances && loadingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.bedRooms  && loadingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of loadingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.bedrooms_misc\">{{ loadingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.bedRooms && loadingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.livingRooms && loadingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of loadingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.livingRooms_misc\">{{ loadingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.livingRooms && loadingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.familyRooms && loadingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of loadingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.familyRooms_misc\">{{ loadingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.familyRooms && loadingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.diningRooms  && loadingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of loadingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.diningRooms_misc\">{{ loadingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.diningRooms && loadingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.kitchen && loadingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of loadingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.kitchen_misc\">{{ loadingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.kitchen && loadingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.basement && loadingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of loadingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.basement_misc\">{{ loadingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.basement && loadingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.garage  && loadingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of loadingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.garage_misc\">{{ loadingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.garage && loadingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.patioYard  && loadingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of loadingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.patioYard_misc\">{{ loadingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"loadingData.patioYard && loadingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t<div class=\"step1\" *ngIf=\"showUnLoading && unloadingData\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h3 class=\"step-title\">Selected Unloading Data</h3> \r\n\t\t\t\t\t\t\t<div class=\"form-header \">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Date : {{unloadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-12\"  *ngIf=\"unloadingData && unloadingData.moving_to.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unloadingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">State </span>  {{ movingto.state }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"loc_lable\">Address </span>  {{movingto.address1}}<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"container title-icon-bar items-moved\">\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"\" > \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tItems to be Unloaded\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.appliances  && unloadingData.appliances.length > 0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of unloadingData.appliances\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.appliances_misc\">{{ unloadingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.appliances && unloadingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.bedRooms  && unloadingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of unloadingData.bedRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.bedrooms_misc\">{{ unloadingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.bedRooms && unloadingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.livingRooms && unloadingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of unloadingData.livingRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.livingRooms_misc\">{{ unloadingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.livingRooms && unloadingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.familyRooms && unloadingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of unloadingData.familyRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.familyRooms_misc\">{{ unloadingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.familyRooms && unloadingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.diningRooms  && unloadingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of unloadingData.diningRooms\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.diningRooms_misc\">{{ unloadingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.diningRooms && unloadingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.kitchen && unloadingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of unloadingData.kitchen\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.kitchen_misc\">{{ unloadingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.kitchen && unloadingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.basement && unloadingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of unloadingData.basement\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.basement_misc\">{{ unloadingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.basement && unloadingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.garage  && unloadingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of unloadingData.garage\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.garage_misc\">{{ unloadingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.garage && unloadingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.patioYard  && unloadingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of unloadingData.patioYard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.patioYard_misc\">{{ unloadingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"unloadingData.patioYard && unloadingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t<div class=\"form-row\">\r\n\t\t\t\t\t\t\t<div class=\"form-group col text-center\">\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4 mr-3\" matStepperPrevious type=\"submit\">Back <i class=\"fas fa-arrow-left\"></i></button>\r\n\t\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary mt-4\" (click)=\"setupJob(stepper);\"  type=\"submit\">Next <i class=\"fas fa-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  \r\n\t\t\t\t   <mat-step>\r\n\t\t\t\t  <form [formGroup]=\"secondFormGroup\">\r\n\t\t\t\t\t\t<div class=\"step1\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h1 class=\"step-title\">Updated!</h1> \r\n\t\t\t\t\t\t\t<div class=\"form-header text-center\">\r\n\t\t\t\t\t\t\t\t<i class=\"fas fa-check\"></i>\r\n\t\t\t\t\t\t\t\t<h3>Thank You</h3>\r\n\t\t\t\t\t\t\t\t<br> \r\n\t\t\t\t\t\t\t\t<h2>Job has been Updated Successfully</h2>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t\r\n\t\t\t</mat-horizontal-stepper>\r\n\t\t</div>\r\n\t</div>\r\n</div> "

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/editjob/editjob.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/editjob/editjob.component.ts ***!
  \************************************************************************/
/*! exports provided: EditJobComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditJobComponent", function() { return EditJobComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");






//import { PasswordValidator } from '../../../validator/password.validator';


var EditJobComponent = /** @class */ (function () {
    function EditJobComponent(_flashMessagesService, route, router, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.route = route;
        this.router = router;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.title = 'SignUp';
        this.result = '';
        this.response = "";
        this.states = '';
        this.user = "";
        this.counties = '';
        this.counties1 = '';
        this.counties2 = '';
        this.roles = '';
        this.cities = '';
        this.cities1 = '';
        this.cities2 = '';
        this.first_show = false;
        this.show = false;
        this.stateName = '';
        this.statename = '';
        this.countyName = '';
        this.submitted = false;
        this.jobid = '';
        this.submitted_1_2 = false;
        this.submitted_2 = false;
        this.submitted_4 = false;
        this.submitted_3 = false;
        this.submitted_5 = false;
        this.submitted_6 = false;
        this.submitted_7 = false;
        this.submitted_8 = false;
        this.submitted_9 = false;
        this.submitted_10 = false;
        this.submitted_11 = false;
        this.submitted_12 = false;
        this.submitted_13 = false;
        this.submitted_14 = false;
        this.first_submitted = false;
        this.isLinear = false;
        this.show_dialog = false;
        this.button_text = '';
        this.showMoving = false;
        this.showPacking = false;
        this.showUnPacking = false;
        this.showLoading = false;
        this.showUnLoading = false;
        this.showBedrooms = false;
        this.showLivingRooms = false;
        this.showFamilyRooms = false;
        this.showDiningRooms = false;
        this.showKitchen = false;
        this.showBasement = false;
        this.showGarage = false;
        this.showPatiyoYards = false;
        this.showOffices = false;
        this.showOversized = false;
        this.showAppliances = false;
        this.showPackingAppliances = false;
        this.showPackingBedrooms = false;
        this.showPackingLivingRooms = false;
        this.showPackingFamilyRooms = false;
        this.showPackingDiningRooms = false;
        this.showPackingKitchen = false;
        this.showPackingBasement = false;
        this.showPackingGarage = false;
        this.showPackingPatiyoYards = false;
        this.showPackingOffices = false;
        this.showPackingOversized = false;
        this.showLoadingAppliances = false;
        this.showLoadingBedrooms = false;
        this.showLoadingLivingRooms = false;
        this.showLoadingFamilyRooms = false;
        this.showLoadingDiningRooms = false;
        this.showLoadingKitchen = false;
        this.showLoadingBasement = false;
        this.showLoadingGarage = false;
        this.showLoadingPatiyoYards = false;
        this.showLoadingOffices = false;
        this.showLoadingOversized = false;
        this.showUnloadingAppliances = false;
        this.showUnloadingBedrooms = false;
        this.showUnloadingLivingRooms = false;
        this.showUnloadingFamilyRooms = false;
        this.showUnloadingDiningRooms = false;
        this.showUnloadingKitchen = false;
        this.showUnloadingBasement = false;
        this.showUnloadingGarage = false;
        this.showUnloadingPatiyoYards = false;
        this.showUnloadingOffices = false;
        this.showUnloadingOversized = false;
        this.showUnpackingAppliances = false;
        this.showUnpackingBedrooms = false;
        this.showUnpackingLivingRooms = false;
        this.showUnpackingFamilyRooms = false;
        this.showUnpackingDiningRooms = false;
        this.showUnpackingKitchen = false;
        this.showUnpackingBasement = false;
        this.showUnpackingGarage = false;
        this.showUnpackingPatiyoYards = false;
        this.showUnpackingOffices = false;
        this.showUnpackingOversized = false;
        this.movingData = '';
        this.packingData = '';
        this.unpackingData = '';
        this.loadingData = '';
        this.unloadingData = '';
        this.whichFromGroup = '';
        this.nextFromGroup = '';
        this.topHeading = '';
        this.showThis = '';
        this.mindateset = '';
        this.minDate2 = '';
        this.setmindate = '';
        this.minDate = '';
        this.appliances = '';
        this.basements = '';
        this.diningrooms = '';
        this.bedrooms = '';
        this.familyrooms = '';
        this.garages = '';
        this.kitchens = '';
        this.livingrooms = '';
        this.patioyards = '';
        this.itemRows = '';
        this.allappliances = '';
        this.final_submit = '';
        this.job_basic_info_final = '';
        this.jobservices = '';
        this.firstService = '';
        this.secondService = '';
        this.thirdService = '';
        this.jobData = '';
        this.apppli = "";
        this.beds = "";
        this.dining = "";
        this.family = "";
        this.base = "";
        this.garge = "";
        this.kitch = "";
        this.living = "";
        this.patio = "";
        this.thisisdone = "";
        this.alllocations = "";
        this.currentIndex = "";
        this.totalIndex = "";
        this.bedroomsPack = "";
        this.kitchensPack = "";
        this.diningRoomsPack = "";
        this.basementPack = "";
        this.garagePack = "";
        this.shedPack = "";
        this.officePack = "";
        this.bedroomsPack_misc = "";
        this.kitchensPack_misc = "";
        this.diningRoomsPack_misc = "";
        this.basementPack_misc = "";
        this.garagePack_misc = "";
        this.shedPack_misc = "";
        this.officePack_misc = "";
        this.serviceFormArray = '';
        this.serviceNameArray = '';
        this.myGroup = '';
        this.myGroup3 = '';
        this.selectedServices = '';
        this.submitted_unloading = '';
        this.submitted_loading = '';
        this.submitted_unpacking = '';
        this.submitted_packing = '';
        this.submitted_moving = '';
        this.showErrorMessage1 = false;
        this.showErrorMessage2 = false;
        this.showErrorMessage3 = false;
        this.showErrorMessage4 = false;
        this.showErrorMessage5 = false;
        this.apppli_unloading = "";
        this.beds_unloading = "";
        this.base_unloading = "";
        this.dining_unloading = "";
        this.family_unloading = "";
        this.garge_unloading = "";
        this.kitch_unloading = "";
        this.living_unloading = "";
        this.patio_unloading = "";
        this.apppli_loading = "";
        this.beds_loading = "";
        this.base_loading = "";
        this.dining_loading = "";
        this.family_loading = "";
        this.garge_loading = "";
        this.kitch_loading = "";
        this.living_loading = "";
        this.patio_loading = "";
        this.apppli_unpacking = "";
        this.beds_unpacking = "";
        this.base_unpacking = "";
        this.dining_unpacking = "";
        this.family_unpacking = "";
        this.garge_unpacking = "";
        this.kitch_unpacking = "";
        this.living_unpacking = "";
        this.patio_unpacking = "";
        this.apppli_packing = "";
        this.beds_packing = "";
        this.base_packing = "";
        this.dining_packing = "";
        this.family_packing = "";
        this.garge_packing = "";
        this.kitch_packing = "";
        this.living_packing = "";
        this.patio_packing = "";
        this.apppli_moving = "";
        this.beds_moving = "";
        this.base_moving = "";
        this.dining_moving = "";
        this.family_moving = "";
        this.garge_moving = "";
        this.kitch_moving = "";
        this.living_moving = "";
        this.patio_moving = "";
        this.optionsData = [
            { id: 1, name: 'Appliances (includes Washing machine, Dryer, refrigerator, Freezer, Stove, Dishwasher..etc)' },
            { id: 2, name: 'Bedrooms' },
            { id: 3, name: 'Living Room' },
            { id: 4, name: 'Family Room Services' },
            { id: 5, name: 'Dining Room' },
            { id: 6, name: 'Kitchen' },
            { id: 7, name: 'Basement' },
            { id: 8, name: 'Garage' },
            { id: 9, name: 'Patio/Yard items' },
            { id: 10, name: 'Office' },
            { id: 11, name: 'Oversized items/other (Piano, Safe Machinery, Exercise equipment..etc)' },
        ];
        this.optionsPackedData = [
            { id: 12, name: 'Appliances (includes Washing machine, Dryer, refrigerator, Freezer, Stove, Dishwasher..etc)' },
            { id: 13, name: 'Bedrooms' },
            { id: 14, name: 'Living Room' },
            { id: 15, name: 'Family Room Services' },
            { id: 16, name: 'Dining Room' },
            { id: 17, name: 'Kitchen' },
            { id: 18, name: 'Basement' },
            { id: 19, name: 'Garage' },
            { id: 20, name: 'Patio/Yard items' },
            { id: 21, name: 'Office' },
            { id: 22, name: 'Oversized items/other (Piano, Safe Machinery, Exercise equipment..etc)' },
        ];
        this.MOVING_ID = '5c544a8515f5bb0c908b3014';
        this.PACKING_ID = '5c544a9315f5bb0c908b3015';
        this.UNPACKING_ID = '5c544aa115f5bb0c908b3016';
        this.LOADING_ID = '5e96e418ddfd4f5624b0a404';
        this.UNLOADING_ID = '5e96e428ddfd4f5624b0a405';
        this.createForm();
        this.getServices();
        this.addCheckboxes();
        this.addServicesCheckboxes();
        this.addPackedCheckboxes();
        this.addUnPackedCheckboxes();
        this.addLoadingCheckboxes();
        this.addUnLoadingCheckboxes();
        this.titleService.setTitle('Edit jobs | MoveLaunch');
    }
    EditJobComponent.prototype.addServicesCheckboxes = function () {
        var _this = this;
        this.jobservice.getServices().subscribe(function (result) {
            _this.jobservices = result.data;
            _this.jobservices.forEach(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](); // if first item set to true, else false
                _this.angForm.controls.services.push(control);
            });
        });
    };
    EditJobComponent.prototype.addCheckboxes = function () {
        var _this = this;
        this.optionsData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angOptionsForm.controls.options.push(control);
        });
    };
    EditJobComponent.prototype.addPackedCheckboxes = function () {
        var _this = this;
        this.optionsPackedData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angPackedOptionsForm.controls.packingoptions.push(control);
        });
    };
    EditJobComponent.prototype.addUnPackedCheckboxes = function () {
        var _this = this;
        this.optionsPackedData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angunPackedOptionsForm.controls.packingoptions.push(control);
        });
    };
    EditJobComponent.prototype.addLoadingCheckboxes = function () {
        var _this = this;
        this.optionsPackedData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angLoadingOptionsForm.controls.packingoptions.push(control);
        });
    };
    EditJobComponent.prototype.addUnLoadingCheckboxes = function () {
        var _this = this;
        this.optionsPackedData.forEach(function (o, i) {
            var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
            _this.angUnloadingOptionsForm.controls.packingoptions.push(control);
        });
    };
    /* Signup Form validation */
    EditJobComponent.prototype.createForm = function () {
        this.getSate();
        this.firstFormGroup = this.fb.group({
            firstname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            lastname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            phone: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern('^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$')])],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            job_start_date: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.angForm = this.fb.group({
            services: this.fb.array([]),
            jobtype: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"]('new')
        });
        this.angOptionsForm = this.fb.group({
            options: this.fb.array([]),
            job_start_date: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.secondFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.FourthFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
            appliance_assembly: ['']
        });
        this.FifthFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
            bedrooms_assembly: ['']
        });
        this.sixthFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
            livingRooms_assembly: ['']
        });
        this.seventhFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
            familyRooms_assembly: ['']
        });
        this.eigthFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
            diningRooms_assembly: ['']
        });
        this.ninthFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
            kitchen_assembly: ['']
        });
        this.tenthFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
            basement_assembly: ['']
        });
        this.eleventhFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
            garage_assembly: ['']
        });
        this.tweleveFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
            patioyards_assembly: ['']
        });
        this.thirteenFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
            patioyards_assembly: ['']
        });
        this.fourteenFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
            patioyards_assembly: ['']
        });
        this.angPackedOptionsForm = this.fb.group({
            packingoptions: this.fb.array([]),
            job_start_date_packing: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.secondpackedFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdpackedFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.fourthpackedFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
        });
        this.FifthpackedFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
        });
        this.sixthpackedFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
        });
        this.seventhpackedFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
        });
        this.eigthpackedFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
        });
        this.ninthpackedFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
        });
        this.tenthpackedFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
        });
        this.eleventhpackedFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
        });
        this.twelevepackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.thirteenpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.fourteenpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.angunPackedOptionsForm = this.fb.group({
            packingoptions: this.fb.array([]),
            job_start_date_unpacking: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.secondunpackedFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdunpackedFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.fourthunpackedFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
        });
        this.FifthunpackedFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
        });
        this.sixthunpackedFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
        });
        this.seventhunpackedFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
        });
        this.eigthunpackedFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
        });
        this.ninthunpackedFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
        });
        this.tenthunpackedFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
        });
        this.eleventhunpackedFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
        });
        this.tweleveunpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.thirteenunpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.fourteenunpackedFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.angUnloadingOptionsForm = this.fb.group({
            packingoptions: this.fb.array([]),
            job_start_date_unloading: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.secondunloadingFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdunloadingFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.fourthunloadingFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
        });
        this.FifthunloadingFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
        });
        this.sixthunloadingFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
        });
        this.seventhunloadingFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
        });
        this.eigthunloadingFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
        });
        this.ninthunloadingFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
        });
        this.tenthunloadingFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
        });
        this.eleventhunloadingFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
        });
        this.tweleveunloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.thirteenunloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.fourteenunloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.angLoadingOptionsForm = this.fb.group({
            packingoptions: this.fb.array([]),
            job_start_date_loading: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
        this.secondloadingFormGroup = this.fb.group({
            itemRows: this.fb.array([])
        });
        this.thirdloadingFormGroup = this.fb.group({
            // itemRowsTo: this.fb.array([this.initItemRowsTo()])
            itemRowsTo: this.fb.array([])
        });
        this.FourthloadingFormGroup = this.fb.group({
            allappliances: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            appliance_misc: [''],
        });
        this.FifthloadingFormGroup = this.fb.group({
            bedrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            bedrooms_misc: [''],
        });
        this.sixthloadingFormGroup = this.fb.group({
            livingrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            livingRooms_misc: [''],
        });
        this.seventhloadingFormGroup = this.fb.group({
            familyrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            familyRooms_misc: [''],
        });
        this.eigthloadingFormGroup = this.fb.group({
            diningrooms: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            dininRooms_misc: [''],
        });
        this.ninthloadingFormGroup = this.fb.group({
            kitchens: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            kitchen_misc: [''],
        });
        this.tenthloadingFormGroup = this.fb.group({
            basements: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            basement_misc: [''],
        });
        this.eleventhloadingFormGroup = this.fb.group({
            garages: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            garage_misc: [''],
        });
        this.tweleveloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.thirteenloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
        this.fourteenloadingFormGroup = this.fb.group({
            patioyards: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormArray"]([]),
            patioYard_misc: [''],
        });
    };
    EditJobComponent.prototype.toggleMovingFrom = function (event, number, row) {
        if (event.target.value == 'house') {
            row.controls.moving_from_floor.disable();
        }
        else {
            row.controls.moving_from_floor.enable();
        }
    };
    EditJobComponent.prototype.toggleMovingTo = function (event, number, row) {
        if (event.target.value == 'house') {
            row.controls.moving_to_floor.disable();
        }
        else {
            row.controls.moving_to_floor.enable();
        }
    };
    EditJobComponent.prototype.setLocations = function (myFormGroup, savedDataToLocation) {
        var _this = this;
        this.myGroup = myFormGroup;
        console.log('setLocations' + localStorage.getItem('jobType'));
        if (localStorage.getItem('jobType') == 'saved') {
            var control_1 = this.myGroup.controls.itemRows;
            if (savedDataToLocation && savedDataToLocation.moving_from.length > 0) {
                this.alllocations = savedDataToLocation.moving_from;
                this.alllocations.forEach(function (x) {
                    _this.userservice.getCounties(x.state).subscribe(function (result) {
                        _this.counties1 = result;
                    });
                    _this.userservice.getCities(x.county, x.state).subscribe(function (result) {
                        _this.cities1 = result;
                    });
                    control_1.push(_this.fb.group({
                        moving_from: x.movingType,
                        moving_from_floor: x.floor,
                        moving_from_state: x.state,
                        moving_from_county: x.county,
                        moving_from_city: x.city,
                        moving_from_zipcode: x.zipcode,
                        moving_from_address: x.address1,
                    }));
                });
            }
            else {
                control_1.push(this.fb.group({
                    moving_from: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_from_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
                }));
            }
        }
        else {
            var control = this.myGroup.controls.itemRows;
            control.push(this.fb.group({
                moving_from: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_from_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
            }));
        }
    };
    EditJobComponent.prototype.initItemRows = function () {
        return this.fb.group({
            moving_from: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_from_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
    };
    Object.defineProperty(EditJobComponent.prototype, "formArr", {
        get: function () {
            return this.myGroup.get('itemRows');
        },
        enumerable: true,
        configurable: true
    });
    EditJobComponent.prototype.addNewRow = function () {
        this.formArr.push(this.initItemRows());
    };
    EditJobComponent.prototype.deleteRow = function (index) {
        this.formArr.removeAt(index);
    };
    EditJobComponent.prototype.setToLocations = function (myFormGroup3, savedDataToLocation) {
        var _this = this;
        this.myGroup3 = myFormGroup3;
        console.log('setToLocations' + localStorage.getItem('jobType'));
        if (localStorage.getItem('jobType') == 'saved') {
            var control_2 = this.myGroup3.controls.itemRowsTo;
            if (savedDataToLocation && savedDataToLocation.moving_to.length > 0) {
                this.alllocations = savedDataToLocation.moving_to;
                this.alllocations.forEach(function (x) {
                    _this.userservice.getCounties(x.state).subscribe(function (result) {
                        _this.counties2 = result;
                    });
                    _this.userservice.getCities(x.county, x.state).subscribe(function (result) {
                        _this.cities2 = result;
                    });
                    control_2.push(_this.fb.group({
                        moving_to: x.movingType,
                        moving_to_floor: x.floor,
                        moving_to_state: x.state,
                        moving_to_county: x.county,
                        moving_to_city: x.city,
                        moving_to_zipcode: x.zipcode,
                        moving_to_address: x.address1,
                    }));
                });
            }
            else {
                control_2.push(this.fb.group({
                    moving_to: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                    moving_to_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
                }));
            }
        }
        else {
            var control = this.myGroup3.controls.itemRowsTo;
            control.push(this.fb.group({
                moving_to: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
                moving_to_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
            }));
        }
    };
    EditJobComponent.prototype.initItemRowsTo = function () {
        return this.fb.group({
            moving_to: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_floor: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_county: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            moving_to_address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
        });
    };
    Object.defineProperty(EditJobComponent.prototype, "formArrTo", {
        get: function () {
            return this.myGroup3.get('itemRowsTo');
        },
        enumerable: true,
        configurable: true
    });
    EditJobComponent.prototype.addNewRowTo = function () {
        this.formArrTo.push(this.initItemRowsTo());
    };
    EditJobComponent.prototype.deleteRowTo = function (index) {
        this.formArrTo.removeAt(index);
    };
    EditJobComponent.prototype.addDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp = [];
        this.jobservice.getAppliances(serviceId).subscribe(function (result) {
            _this.apppli_moving = '';
            _this.formtype = formtype;
            _this.formtype.reset({});
            _this.formtype.setControl('allappliances', _this.fb.array([]));
            _this.allappliances = result;
            _this.allappliances.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.allappliances.push(control);
            });
            if (saved_data && saved_data.appliances && saved_data.appliances.length > 0) {
                for (var i = 0; i < _this.allappliances.length; i++) {
                    setApp.push('null');
                    var jobdata = saved_data.appliances;
                    var _id = _this.allappliances[i]._id;
                    $.each(jobdata, function (index, value) {
                        if (value.applianceItem._id == _id) {
                            var item = value.items + '_' + value.applianceItem._id;
                            setApp[i] = item;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.allappliances.length; i++) {
                    setApp.push('null');
                }
            }
            if (ser_type == 'moving') {
                _this.apppli_moving = setApp;
            }
            if (ser_type == 'packing') {
                _this.apppli_packing = setApp;
            }
            if (ser_type == 'unpacking') {
                _this.apppli_unpacking = setApp;
            }
            if (ser_type == 'loading') {
                _this.apppli_loading = setApp;
            }
            if (ser_type == 'unloading') {
                _this.apppli_unloading = setApp;
            }
        });
    };
    /*--------------------------------------------- Fourth Group Elements ----------------------- */
    /*--------------------------------------------- Fifth Group Elements ----------------------- */
    EditJobComponent.prototype.addBedDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp1 = [];
        this.jobservice.getBedrooms(serviceId).subscribe(function (result) {
            _this.bedrooms = result;
            _this.formtype = formtype;
            _this.formtype.setControl('bedrooms', _this.fb.array([]));
            _this.bedrooms.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.bedrooms.push(control);
            });
            if (saved_data && saved_data.bedRooms && saved_data.bedRooms.length > 0) {
                for (var i = 0; i < _this.bedrooms.length; i++) {
                    setApp1.push('null');
                    var jobdata1 = saved_data.bedRooms;
                    var _id = _this.bedrooms[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.bedRoomsItem._id == _id) {
                            var item1 = value.items + '_' + value.bedRoomsItem._id;
                            setApp1[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.bedrooms.length; i++) {
                    setApp1.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.beds_moving = setApp1;
            }
            if (ser_type == 'packing') {
                _this.beds_packing = setApp1;
            }
            if (ser_type == 'unpacking') {
                _this.beds_unpacking = setApp1;
            }
            if (ser_type == 'loading') {
                _this.beds_loading = setApp1;
            }
            if (ser_type == 'unloading') {
                _this.beds_unloading = setApp1;
            }
        });
    };
    EditJobComponent.prototype.addkitchenDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp6 = [];
        this.jobservice.getKitchen(serviceId).subscribe(function (result) {
            _this.kitchens = result;
            _this.formtype = formtype;
            _this.formtype.setControl('kitchens', _this.fb.array([]));
            _this.kitchens.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.kitchens.push(control);
            });
            if (saved_data && saved_data.kitchen && saved_data.kitchen.length > 0) {
                for (var i = 0; i < _this.kitchens.length; i++) {
                    setApp6.push('null');
                    var jobdata1 = saved_data.kitchen;
                    var _id = _this.kitchens[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.kitchenItem._id == _id) {
                            var item1 = value.items + '_' + value.kitchenItem._id;
                            setApp6[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.kitchens.length; i++) {
                    setApp6.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.kitch_moving = setApp6;
            }
            if (ser_type == 'packing') {
                _this.kitch_packing = setApp6;
            }
            if (ser_type == 'unpacking') {
                _this.kitch_unpacking = setApp6;
            }
            if (ser_type == 'loading') {
                _this.kitch_loading = setApp6;
            }
            if (ser_type == 'unloading') {
                _this.kitch_unloading = setApp6;
            }
        });
    };
    /*--------------------------------------------- Fifth Group Elements ----------------------- */
    EditJobComponent.prototype.addDiningDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp3 = [];
        this.jobservice.getDiningrooms(serviceId).subscribe(function (result) {
            _this.diningrooms = result;
            _this.formtype = formtype;
            _this.formtype.setControl('diningrooms', _this.fb.array([]));
            _this.diningrooms.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.diningrooms.push(control);
            });
            if (saved_data && saved_data.diningRooms && saved_data.diningRooms.length > 0) {
                for (var i = 0; i < _this.diningrooms.length; i++) {
                    setApp3.push('null');
                    var jobdata1 = saved_data.diningRooms;
                    var _id = _this.diningrooms[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.diningRoomsItem._id == _id) {
                            var item1 = value.items + '_' + value.diningRoomsItem._id;
                            setApp3[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.diningrooms.length; i++) {
                    setApp3.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.dining_moving = setApp3;
            }
            if (ser_type == 'packing') {
                _this.dining_packing = setApp3;
            }
            if (ser_type == 'unpacking') {
                _this.dining_unpacking = setApp3;
            }
            if (ser_type == 'loading') {
                _this.dining_loading = setApp3;
            }
            if (ser_type == 'unloading') {
                _this.dining_unloading = setApp3;
            }
        });
    };
    EditJobComponent.prototype.addLivingDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp7 = [];
        this.jobservice.getLivingrooms(serviceId).subscribe(function (result) {
            _this.livingrooms = result;
            _this.formtype = formtype;
            _this.formtype.setControl('livingrooms', _this.fb.array([]));
            _this.livingrooms.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.livingrooms.push(control);
            });
            if (saved_data && saved_data.livingRooms && saved_data.livingRooms.length > 0) {
                for (var i = 0; i < _this.livingrooms.length; i++) {
                    setApp7.push('null');
                    var jobdata1 = saved_data.livingRooms;
                    var _id = _this.livingrooms[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.livingRoomsItem._id == _id) {
                            var item1 = value.items + '_' + value.livingRoomsItem._id;
                            setApp7[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.livingrooms.length; i++) {
                    setApp7.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.living_moving = setApp7;
            }
            if (ser_type == 'packing') {
                _this.living_packing = setApp7;
            }
            if (ser_type == 'unpacking') {
                _this.living_unpacking = setApp7;
            }
            if (ser_type == 'loading') {
                _this.living_loading = setApp7;
            }
            if (ser_type == 'unloading') {
                _this.living_unloading = setApp7;
            }
        });
    };
    EditJobComponent.prototype.addFamilyDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp4 = [];
        this.jobservice.getFamilyrooms(serviceId).subscribe(function (result) {
            _this.familyrooms = result;
            _this.formtype = formtype;
            _this.formtype.setControl('familyrooms', _this.fb.array([]));
            _this.familyrooms.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.familyrooms.push(control);
            });
            if (saved_data && saved_data.familyRooms && saved_data.familyRooms.length > 0) {
                for (var i = 0; i < _this.familyrooms.length; i++) {
                    setApp4.push('null');
                    var jobdata1 = saved_data.familyRooms;
                    var _id = _this.familyrooms[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.familyRoomsItem._id == _id) {
                            var item1 = value.items + '_' + value.familyRoomsItem._id;
                            setApp4[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.familyrooms.length; i++) {
                    setApp4.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.family_moving = setApp4;
            }
            if (ser_type == 'packing') {
                _this.family_packing = setApp4;
            }
            if (ser_type == 'unpacking') {
                _this.family_unpacking = setApp4;
            }
            if (ser_type == 'loading') {
                _this.family_loading = setApp4;
            }
            if (ser_type == 'unloading') {
                _this.family_unloading = setApp4;
            }
        });
    };
    EditJobComponent.prototype.addBasementDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp2 = [];
        this.jobservice.getBasement(serviceId).subscribe(function (result) {
            _this.basements = result;
            _this.formtype = formtype;
            _this.formtype.setControl('basements', _this.fb.array([]));
            _this.basements.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.basements.push(control);
            });
            if (saved_data && saved_data.basement && saved_data.basement.length > 0) {
                for (var i = 0; i < _this.basements.length; i++) {
                    setApp2.push('null');
                    var jobdata1 = saved_data.basement;
                    var _id = _this.basements[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.basementItem._id == _id) {
                            var item1 = value.items + '_' + value.basementItem._id;
                            setApp2[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.basements.length; i++) {
                    setApp2.push('null');
                }
            }
            if (ser_type == 'moving') {
                _this.base_moving = setApp2;
            }
            if (ser_type == 'packing') {
                _this.base_packing = setApp2;
            }
            if (ser_type == 'unpacking') {
                _this.base_unpacking = setApp2;
            }
            if (ser_type == 'loading') {
                _this.base_loading = setApp2;
            }
            if (ser_type == 'unloading') {
                _this.base_unloading = setApp2;
            }
        });
    };
    EditJobComponent.prototype.addGaragesDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp5 = [];
        this.jobservice.getGarages(serviceId).subscribe(function (result) {
            _this.garages = result;
            _this.formtype = formtype;
            _this.formtype.setControl('garages', _this.fb.array([]));
            _this.garages.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.garages.push(control);
            });
            if (saved_data && saved_data.garage && saved_data.garage.length > 0) {
                for (var i = 0; i < _this.garages.length; i++) {
                    setApp5.push('null');
                    var jobdata1 = saved_data.garage;
                    var _id = _this.garages[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.garageItem._id == _id) {
                            var item1 = value.items + '_' + value.garageItem._id;
                            setApp5[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.garages.length; i++) {
                    setApp5.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.garge_moving = setApp5;
            }
            if (ser_type == 'packing') {
                _this.garge_packing = setApp5;
            }
            if (ser_type == 'unpacking') {
                _this.garge_unpacking = setApp5;
            }
            if (ser_type == 'loading') {
                _this.garge_loading = setApp5;
            }
            if (ser_type == 'unloading') {
                _this.garge_unloading = setApp5;
            }
        });
    };
    EditJobComponent.prototype.addPatioyardDropDowns = function (serviceId, formtype, ser_type, saved_data) {
        var _this = this;
        var setApp8 = [];
        this.jobservice.getPatioyard(serviceId).subscribe(function (result) {
            _this.patioyards = result;
            _this.formtype = formtype;
            _this.formtype.setControl('patioyards', _this.fb.array([]));
            _this.patioyards.map(function (o, i) {
                var control = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](i === 0); // if first item set to true, else false
                _this.formtype.controls.patioyards.push(control);
            });
            if (saved_data && saved_data.patioYard && saved_data.patioYard.length > 0) {
                for (var i = 0; i < _this.patioyards.length; i++) {
                    setApp8.push('null');
                    var jobdata1 = saved_data.patioYard;
                    var _id = _this.patioyards[i]._id;
                    $.each(jobdata1, function (index, value) {
                        if (value.patioYardItem._id == _id) {
                            var item1 = value.items + '_' + value.patioYardItem._id;
                            setApp8[i] = item1;
                        }
                    });
                }
            }
            else {
                for (var i = 0; i < _this.patioyards.length; i++) {
                    setApp8.push('null');
                }
            }
            //this.beds = default1val;
            if (ser_type == 'moving') {
                _this.patio_moving = setApp8;
            }
            if (ser_type == 'packing') {
                _this.patio_packing = setApp8;
            }
            if (ser_type == 'unpacking') {
                _this.patio_unpacking = setApp8;
            }
            if (ser_type == 'loading') {
                _this.patio_loading = setApp8;
            }
            if (ser_type == 'unloading') {
                _this.patio_unloading = setApp8;
            }
        });
    };
    EditJobComponent.prototype.check = function () {
        this.first_submitted = true;
        if (this.angForm.controls['email'].invalid || this.angForm.controls['password'].invalid) {
            this.show = false;
            this.first_show = true;
        }
        else {
            this.show = true;
            this.first_show = false;
        }
    };
    EditJobComponent.prototype.getSate = function () {
        var _this = this;
        this.userservice.getStates().subscribe(function (result) {
            _this.states = result;
        });
    };
    EditJobComponent.prototype.getRoles = function (usertype) {
        var _this = this;
        this.userservice.getUserRoles(usertype).subscribe(function (result) {
            _this.roles = result;
        });
    };
    EditJobComponent.prototype.getCounties = function (event) {
        var _this = this;
        this.stateName = event.target.value;
        this.userservice.getCounties(this.stateName).subscribe(function (result) {
            _this.counties = result;
        });
    };
    EditJobComponent.prototype.getCountiesFrom = function (event) {
        var _this = this;
        this.stateName = event.target.value;
        this.userservice.getCounties(this.stateName).subscribe(function (result) {
            _this.counties1 = result;
        });
    };
    EditJobComponent.prototype.getCountiesTo = function (event) {
        var _this = this;
        this.stateName = event.target.value;
        this.userservice.getCounties(this.stateName).subscribe(function (result) {
            _this.counties2 = result;
        });
    };
    EditJobComponent.prototype.getCities = function (event) {
        var _this = this;
        this.countyName = event.target.value;
        this.statename = this.firstFormGroup.value.state;
        this.userservice.getCities(this.countyName, this.statename).subscribe(function (result) {
            _this.cities = result;
        });
    };
    EditJobComponent.prototype.getCitiesFrom = function (event, number, whichFromGroup) {
        var _this = this;
        this.whichFromGroup = whichFromGroup;
        this.countyName = event.target.value;
        this.statename = this.whichFromGroup.value.itemRows[number].moving_from_state;
        this.userservice.getCities(this.countyName, this.statename).subscribe(function (result) {
            _this.cities1 = result;
        });
    };
    EditJobComponent.prototype.getCitiesTo = function (event, number, whichFromGroup) {
        var _this = this;
        this.whichFromGroup = whichFromGroup;
        this.countyName = event.target.value;
        this.statename = this.whichFromGroup.value.itemRowsTo[number].moving_to_state;
        this.userservice.getCities(this.countyName, this.statename).subscribe(function (result) {
            _this.cities2 = result;
        });
    };
    EditJobComponent.prototype.getServices = function () {
        var _this = this;
        this.jobservice.getServices().subscribe(function (result) {
            _this.jobservices = result.data;
            console.log(_this.jobservices);
            /* this.firstService = result.data[0]._id;this.secondService = result.data[1]._id;this.thirdService = result.data[2]._id;  */
        });
    };
    Object.defineProperty(EditJobComponent.prototype, "f0", {
        get: function () { return this.angForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f", {
        get: function () { return this.angOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f2", {
        //get f() { return this.firstFormGroup.controls; }
        /* get f12() { return this.firstPartTwoFormGroup.controls; } */
        get: function () { return this.secondFormGroup.controls.itemRows; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f3", {
        get: function () { return this.thirdFormGroup.controls.itemRowsTo; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f4", {
        get: function () { return this.FourthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f5", {
        get: function () { return this.FifthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f6", {
        get: function () { return this.sixthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f7", {
        get: function () { return this.seventhFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f8", {
        get: function () { return this.eigthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f9", {
        get: function () { return this.ninthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f10", {
        get: function () { return this.tenthFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f11", {
        get: function () { return this.eleventhFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f13", {
        get: function () { return this.tweleveFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f14", {
        get: function () { return this.thirteenFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f15", {
        get: function () { return this.fourteenFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "_f1", {
        get: function () { return this.angPackedOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "_Uf1", {
        get: function () { return this.angunPackedOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "_fL1", {
        get: function () { return this.angLoadingOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "_fUL1", {
        get: function () { return this.angUnloadingOptionsForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "_f2", {
        get: function () { return this.secondpackedFormGroup.controls.itemRows; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "_f3", {
        get: function () { return this.thirdpackedFormGroup.controls.itemRowsTo; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "fL2", {
        get: function () { return this.secondloadingFormGroup.controls.itemRows; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "fUL2", {
        get: function () { return this.thirdunloadingFormGroup.controls.itemRowsTo; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "_UPf2", {
        get: function () { return this.secondunpackedFormGroup.controls.itemRows; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "_UPf3", {
        get: function () { return this.thirdunpackedFormGroup.controls.itemRowsTo; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditJobComponent.prototype, "f16", {
        get: function () { return this.fourthpackedFormGroup.controls; },
        enumerable: true,
        configurable: true
    });
    EditJobComponent.prototype.onSubmit = function () {
        // stop here if form is invalid
    };
    EditJobComponent.prototype.createNewJob = function () {
        localStorage.setItem('jobType', 'new');
        localStorage.removeItem('currentStop');
        localStorage.removeItem('jobID');
    };
    EditJobComponent.prototype.geSavedJob = function (whichstep) {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        localStorage.setItem('jobType', 'saved');
        this.jobid = this.route.snapshot.paramMap.get('jobid');
        this.jobservice.getEditJob(this.jobid).subscribe(function (result) {
            if (result.success) {
                //http://localhost:4200/edit-job/5ea8fd1593c4153e8010841c
                _this.selectedServices = result.job.serviceId;
                console.log(result);
                _this.jobData = result.job;
                _this.movingData = result.job.moving[0];
                _this.packingData = result.job.packing[0];
                _this.unpackingData = result.job.unpacking[0];
                _this.loadingData = result.job.loading[0];
                _this.unloadingData = result.job.unloading[0];
                if (_this.movingData && whichstep == 'moving') {
                    console.log(_this.movingData);
                    _this.showMoving = true;
                    _this.setLocations(_this.secondFormGroup, _this.movingData);
                    _this.setToLocations(_this.thirdFormGroup, _this.movingData);
                }
                if (_this.packingData && whichstep == 'packing') {
                    console.log(_this.packingData);
                    _this.showPacking = true;
                    _this.setLocations(_this.secondpackedFormGroup, _this.packingData);
                    _this.setToLocations(_this.thirdpackedFormGroup, _this.packingData);
                }
                if (_this.unpackingData && whichstep == 'unpacking') {
                    _this.showUnPacking = true;
                    _this.setLocations(_this.secondunpackedFormGroup, _this.unpackingData);
                    _this.setToLocations(_this.thirdunpackedFormGroup, _this.unpackingData);
                }
                if (_this.loadingData && whichstep == 'loading') {
                    _this.showLoading = true;
                    _this.setLocations(_this.secondloadingFormGroup, _this.loadingData);
                }
                if (_this.unloadingData && whichstep == 'unloading') {
                    _this.showUnLoading = true;
                    _this.setToLocations(_this.thirdunloadingFormGroup, _this.loadingData);
                }
                _this.userservice.getStates().subscribe(function (result) {
                    _this.states = result;
                });
                var currentState = _this.jobData.state;
                var currentCounty = _this.jobData.county;
                _this.userservice.getCounties(currentState).subscribe(function (result) {
                    _this.counties = result;
                });
                _this.userservice.getCities(currentCounty, currentState).subscribe(function (result) {
                    _this.cities = result;
                });
            }
            else {
                _this._flashMessagesService.show("No Saved Job Found.", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    /* *** Add User ** */
    EditJobComponent.prototype.updateCalcs = function (event) {
        var d = new Date(event);
        var month = '' + (d.getMonth() + 1);
        var day = '' + d.getDate();
        var year = d.getFullYear();
        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;
        this.mindateset = [year, month, day].join(',');
        this.minDate2 = new Date(this.mindateset);
    };
    EditJobComponent.prototype.ngOnInit = function () {
        this.geSavedJob('start');
        /* var jobType = this.angForm.value.jobtype;
        localStorage.setItem('jobType',jobType); */
        this.thisisdone = false;
        this.isLinear = true;
        this.button_text = 'View More';
        var minD = new Date();
        this.totalIndex = 14;
        var month1 = '' + (minD.getMonth() + 1);
        var day1 = '' + minD.getDate();
        var year1 = minD.getFullYear();
        if (month1.length < 2)
            month1 = '0' + month1;
        if (day1.length < 2)
            day1 = '0' + day1;
        this.setmindate = [year1, month1, day1].join(',');
        this.minDate = new Date(this.setmindate);
        /* this.userservice.getUsers().subscribe(result => {
            this.user = result[0];
        
            return this.user;
        });
         */
        this.first_show = true;
        /* if(localStorage.getItem('currentStop') != null){
            console.log(25);
            this.resetStepper(event);
        } */
        this.loadfirststep(1);
        this.bedroomsPack = "null";
        this.kitchensPack = "null";
        this.diningRoomsPack = "null";
        this.basementPack = "null";
        this.garagePack = "null";
        this.shedPack = "null";
        this.officePack = "null";
    };
    /* resetStepper(stepper: MatStepper){
        
        stepper.selectedIndex = 5;
    }
     */
    EditJobComponent.prototype.loadfirststep = function (nextstep) {
        this.topHeading = 'Contact Information';
        this.showThis = true;
    };
    EditJobComponent.prototype.onChange = function (_id, name, isChecked) {
        this.serviceFormArray = this.angForm.controls.services;
        this.serviceNameArray = this.angForm.controls.services;
        if (isChecked) {
            this.serviceFormArray.push(new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](_id));
            this.serviceNameArray.push(new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](name));
        }
        else {
            var index = this.serviceFormArray.controls.findIndex(function (x) { return x.value == _id; });
            this.serviceFormArray.removeAt(index);
            var index1 = this.serviceNameArray.controls.findIndex(function (y) { return y.value == name; });
            this.serviceNameArray.removeAt(index1);
        }
    };
    EditJobComponent.prototype.isChangeheading = function (stepper) {
        var _this = this;
        var myArray = [];
        var selectedOrderIds = this.angForm.value.services
            .map(function (v, i) { return (v ? _this.jobservices[i]._id : null); })
            .filter(function (v) { return v !== null; });
        var selectedOrderName = this.angForm.value.services
            .map(function (v, i) { return (v ? _this.jobservices[i].slug : null); })
            .filter(function (v) { return v !== null; });
        if (this.angForm.invalid) {
            return;
        }
        else {
            if (selectedOrderName.includes('moving')) {
                this.showMoving = true;
            }
            if (selectedOrderName.includes('packing')) {
                this.showPacking = true;
            }
            if (selectedOrderName.includes('unpacking')) {
                this.showUnPacking = true;
            }
            if (selectedOrderName.includes('loading')) {
                this.showLoading = true;
            }
            if (selectedOrderName.includes('unloading')) {
                this.showUnLoading = true;
            }
            var flashMessagesService = this._flashMessagesService;
            var jobID = this.route.snapshot.paramMap.get('jobid');
            /* setTimeout(() => {           // or do some API calls/ Async events
                stepper.next();
            }, 0);
             */
            this.jobservice.updateEditedJobServices(selectedOrderIds, jobID).subscribe(function (result) {
                //this.submitted = false;
                if (result.success) {
                    console.log(result);
                    localStorage.setItem('jobID', result.jobId);
                    //this.allEventHandle(nextstep,totalIndex);
                    setTimeout(function () {
                        stepper.next();
                    }, 0);
                }
                else {
                    flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                }
            });
        }
    };
    EditJobComponent.prototype.setOptionsAvailable = function (stepper) {
        var _this = this;
        if (this.angOptionsForm.invalid) {
            this.submitted_moving = true;
            return;
        }
        else {
            var selectedOptionsIds = this.angOptionsForm.value.options
                .map(function (v, i) { return v ? _this.optionsData[i].id : null; })
                .filter(function (v) { return v !== null; });
            if (selectedOptionsIds.length == 0) {
                this.showErrorMessage1 = true;
                return;
            }
            //this.submitted = true;		
            var moving_id = this.MOVING_ID;
            var serv_type = 'moving';
            //this.geSavedJob('moving');
            if (!this.selectedServices.includes(this.MOVING_ID)) {
                this.setLocations(this.secondFormGroup, '');
            }
            else {
                this.setLocations(this.secondFormGroup, this.movingData);
            }
            if (selectedOptionsIds.includes(1)) {
                this.showAppliances = true;
                this.addDropDowns(moving_id, this.FourthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(2)) {
                this.showBedrooms = true;
                this.addBedDropDowns(moving_id, this.FifthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(3)) {
                this.showLivingRooms = true;
                this.addLivingDropDowns(moving_id, this.sixthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(4)) {
                this.showFamilyRooms = true;
                this.addFamilyDropDowns(moving_id, this.seventhFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(5)) {
                this.showDiningRooms = true;
                this.addDiningDropDowns(moving_id, this.eigthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(6)) {
                this.showKitchen = true;
                this.addkitchenDropDowns(moving_id, this.ninthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(7)) {
                this.showBasement = true;
                this.addBasementDropDowns(moving_id, this.tenthFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(8)) {
                this.showGarage = true;
                this.addGaragesDropDowns(moving_id, this.eleventhFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(9)) {
                this.showPatiyoYards = true;
                this.addPatioyardDropDowns(moving_id, this.tweleveFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(10)) {
                this.showOffices = true;
                this.addPatioyardDropDowns(moving_id, this.thirteenFormGroup, serv_type, this.movingData);
            }
            if (selectedOptionsIds.includes(11)) {
                this.showOversized = true;
                this.addPatioyardDropDowns(moving_id, this.fourteenFormGroup, serv_type, this.movingData);
            }
            var start_date = this.angOptionsForm.value.job_start_date;
            var basic_info = { moving: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
            var jobID = this.route.snapshot.paramMap.get('jobid');
            this.jobservice.updateServicesInJob(jobID, basic_info, 'moving').subscribe(function (result) {
                _this.submitted = false;
                if (result.success) {
                    console.log(result);
                    localStorage.setItem('jobID', result.jobId);
                    setTimeout(function () {
                        stepper.next();
                    }, 0);
                }
                else {
                    _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                }
            });
        }
    };
    EditJobComponent.prototype.setPackingOptionsAvailable = function (stepper, type) {
        var _this = this;
        if (type == 'forPacking') {
            //this.geSavedJob('packing');
            var selectedOptionsIds = this.angPackedOptionsForm.value.packingoptions
                .map(function (v, i) { return v ? _this.optionsPackedData[i].id : null; })
                .filter(function (v) { return v !== null; });
            console.log(this.angPackedOptionsForm);
            if (this.angPackedOptionsForm.invalid) {
                this.submitted_packing = true;
                return;
            }
            else {
                if (selectedOptionsIds.length == 0) {
                    this.showErrorMessage2 = true;
                    return;
                }
                //this.geSavedJob('packing');
                var moving_id = this.PACKING_ID;
                var serv_type = 'packing';
                if (!this.selectedServices.includes(this.PACKING_ID)) {
                    this.setLocations(this.secondpackedFormGroup, '');
                }
                else {
                    this.setLocations(this.secondpackedFormGroup, this.packingData);
                }
                //if(localStorage.getItem('jobType') == 'new'){
                //}
                if (selectedOptionsIds.includes(12)) {
                    this.showPackingAppliances = true;
                    this.addDropDowns(moving_id, this.fourthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(13)) {
                    this.showPackingBedrooms = true;
                    this.addBedDropDowns(moving_id, this.FifthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(14)) {
                    this.showPackingLivingRooms = true;
                    this.addLivingDropDowns(moving_id, this.sixthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(15)) {
                    this.showPackingFamilyRooms = true;
                    this.addFamilyDropDowns(moving_id, this.seventhpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(16)) {
                    this.showPackingDiningRooms = true;
                    this.addDiningDropDowns(moving_id, this.eigthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(17)) {
                    this.showPackingKitchen = true;
                    this.addkitchenDropDowns(moving_id, this.ninthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(18)) {
                    this.showPackingBasement = true;
                    this.addBasementDropDowns(moving_id, this.tenthpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(19)) {
                    this.showPackingGarage = true;
                    this.addGaragesDropDowns(moving_id, this.eleventhpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(20)) {
                    this.showPackingPatiyoYards = true;
                    this.addPatioyardDropDowns(moving_id, this.twelevepackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(21)) {
                    this.showPackingOffices = true;
                    this.addPatioyardDropDowns(moving_id, this.thirteenpackedFormGroup, serv_type, this.packingData);
                }
                if (selectedOptionsIds.includes(22)) {
                    this.showPackingOversized = true;
                    this.addPatioyardDropDowns(moving_id, this.fourteenpackedFormGroup, serv_type, this.packingData);
                }
                var start_date = this.angPackedOptionsForm.value.job_start_date_packing;
                var basic_info1 = { packing: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
                var jobID = this.route.snapshot.paramMap.get('jobid');
                this.jobservice.updateServicesInJob(jobID, basic_info1, 'packing').subscribe(function (result) {
                    _this.submitted_packing = false;
                    if (result.success) {
                        console.log(result);
                        localStorage.setItem('jobID', result.jobId);
                        setTimeout(function () {
                            stepper.next();
                        }, 0);
                    }
                    else {
                        _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                    }
                });
            }
        }
        if (type == 'forUnpacking') {
            this.geSavedJob('unpacking');
            var selectedOptionsIds = this.angunPackedOptionsForm.value.packingoptions
                .map(function (v, i) { return v ? _this.optionsPackedData[i].id : null; })
                .filter(function (v) { return v !== null; });
            console.log(selectedOptionsIds);
            if (this.angunPackedOptionsForm.invalid) {
                this.submitted_unpacking = true;
                return;
            }
            else {
                if (selectedOptionsIds.length == 0) {
                    this.showErrorMessage3 = true;
                    return;
                }
                var moving_id = this.UNPACKING_ID;
                var serv_type = 'unpacking';
                if (!this.selectedServices.includes(this.UNPACKING_ID)) {
                    this.setLocations(this.secondunpackedFormGroup, '');
                }
                else {
                    this.setLocations(this.secondunpackedFormGroup, this.unpackingData);
                }
                if (selectedOptionsIds.includes(12)) {
                    this.addDropDowns(moving_id, this.fourthunpackedFormGroup, serv_type, this.unpackingData);
                    this.showUnpackingAppliances = true;
                }
                if (selectedOptionsIds.includes(13)) {
                    this.showUnpackingBedrooms = true;
                    this.addBedDropDowns(moving_id, this.FifthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(14)) {
                    this.showUnpackingLivingRooms = true;
                    this.addLivingDropDowns(moving_id, this.sixthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(15)) {
                    this.showUnpackingFamilyRooms = true;
                    this.addFamilyDropDowns(moving_id, this.seventhunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(16)) {
                    this.showUnpackingDiningRooms = true;
                    this.addDiningDropDowns(moving_id, this.eigthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(17)) {
                    this.showUnpackingKitchen = true;
                    this.addkitchenDropDowns(moving_id, this.ninthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(18)) {
                    this.showUnpackingBasement = true;
                    this.addBasementDropDowns(moving_id, this.tenthunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(19)) {
                    this.showUnpackingGarage = true;
                    this.addGaragesDropDowns(moving_id, this.eleventhunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(20)) {
                    this.showUnpackingPatiyoYards = true;
                    this.addPatioyardDropDowns(moving_id, this.tweleveunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(21)) {
                    this.showUnpackingOffices = true;
                    this.addPatioyardDropDowns(moving_id, this.thirteenunpackedFormGroup, serv_type, this.unpackingData);
                }
                if (selectedOptionsIds.includes(22)) {
                    this.showUnpackingOversized = true;
                    this.addPatioyardDropDowns(moving_id, this.fourteenunpackedFormGroup, serv_type, this.unpackingData);
                }
                var start_date = this.angunPackedOptionsForm.value.job_start_date_unpacking;
                var basic_info2 = { unpacking: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
                var jobID = this.route.snapshot.paramMap.get('jobid');
                this.jobservice.updateServicesInJob(jobID, basic_info2, 'unpacking').subscribe(function (result) {
                    _this.submitted_unpacking = false;
                    if (result.success) {
                        console.log(result);
                        localStorage.setItem('jobID', result.jobId);
                        setTimeout(function () {
                            stepper.next();
                        }, 0);
                    }
                    else {
                        _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                    }
                });
            }
        }
    };
    EditJobComponent.prototype.setLoadingOptionsAvailable = function (stepper) {
        var _this = this;
        var selectedOptionsIds = this.angLoadingOptionsForm.value.packingoptions
            .map(function (v, i) { return v ? _this.optionsPackedData[i].id : null; })
            .filter(function (v) { return v !== null; });
        if (this.angLoadingOptionsForm.invalid) {
            this.submitted_loading = true;
            return;
        }
        else {
            if (selectedOptionsIds.length == 0) {
                this.showErrorMessage4 = true;
                return;
            }
            var moving_id = this.LOADING_ID;
            this.geSavedJob('loading');
            var serv_type = 'loading';
            if (!this.selectedServices.includes(this.LOADING_ID)) {
                this.setLocations(this.secondloadingFormGroup, '');
            }
            else {
                this.setLocations(this.secondloadingFormGroup, this.loadingData);
            }
            if (selectedOptionsIds.includes(12)) {
                this.addDropDowns(moving_id, this.FourthloadingFormGroup, serv_type, this.loadingData);
                this.showLoadingAppliances = true;
            }
            if (selectedOptionsIds.includes(13)) {
                this.showLoadingBedrooms = true;
                this.addBedDropDowns(moving_id, this.FifthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(14)) {
                this.showLoadingLivingRooms = true;
                this.addLivingDropDowns(moving_id, this.sixthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(15)) {
                this.showLoadingFamilyRooms = true;
                this.addFamilyDropDowns(moving_id, this.seventhloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(16)) {
                this.showLoadingDiningRooms = true;
                this.addDiningDropDowns(moving_id, this.eigthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(17)) {
                this.showLoadingKitchen = true;
                this.addkitchenDropDowns(moving_id, this.ninthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(18)) {
                this.showLoadingBasement = true;
                this.addBasementDropDowns(moving_id, this.tenthloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(19)) {
                this.showLoadingGarage = true;
                this.addGaragesDropDowns(moving_id, this.eleventhloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(20)) {
                this.showLoadingPatiyoYards = true;
                this.addPatioyardDropDowns(moving_id, this.tweleveloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(21)) {
                this.showLoadingOffices = true;
                this.addPatioyardDropDowns(moving_id, this.thirteenloadingFormGroup, serv_type, this.loadingData);
            }
            if (selectedOptionsIds.includes(22)) {
                this.showLoadingOversized = true;
                this.addPatioyardDropDowns(moving_id, this.fourteenloadingFormGroup, serv_type, this.loadingData);
            }
            var start_date = this.angLoadingOptionsForm.value.job_start_date_loading;
            var basic_info3 = { loading: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
            var jobID = this.route.snapshot.paramMap.get('jobid');
            this.jobservice.updateServicesInJob(jobID, basic_info3, 'loading').subscribe(function (result) {
                _this.submitted_loading = false;
                if (result.success) {
                    console.log(result);
                    localStorage.setItem('jobID', result.jobId);
                    setTimeout(function () {
                        stepper.next();
                    }, 0);
                }
                else {
                    _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                }
            });
        }
    };
    EditJobComponent.prototype.setUnloadingOptionsAvailable = function (stepper) {
        var _this = this;
        this.geSavedJob('unloading');
        var selectedOptionsIds = this.angUnloadingOptionsForm.value.packingoptions
            .map(function (v, i) { return v ? _this.optionsPackedData[i].id : null; })
            .filter(function (v) { return v !== null; });
        if (this.angUnloadingOptionsForm.invalid) {
            this.submitted_unloading = true;
            return;
        }
        else {
            if (selectedOptionsIds.length == 0) {
                this.showErrorMessage5 = true;
                return;
            }
            console.log(selectedOptionsIds);
            var moving_id = this.UNLOADING_ID;
            var serv_type = 'unloading';
            if (!this.selectedServices.includes(this.UNLOADING_ID)) {
                this.setLocations(this.thirdunloadingFormGroup, '');
            }
            else {
                this.setLocations(this.thirdunloadingFormGroup, this.unloadingData);
            }
            if (selectedOptionsIds.includes(12)) {
                this.addDropDowns(moving_id, this.fourthunloadingFormGroup, serv_type, this.unloadingData);
                this.showUnloadingAppliances = true;
            }
            if (selectedOptionsIds.includes(13)) {
                this.showUnloadingBedrooms = true;
                this.addBedDropDowns(moving_id, this.FifthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(14)) {
                this.showUnloadingLivingRooms = true;
                this.addLivingDropDowns(moving_id, this.sixthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(15)) {
                this.showUnloadingFamilyRooms = true;
                this.addFamilyDropDowns(moving_id, this.seventhunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(16)) {
                this.showUnloadingDiningRooms = true;
                this.addDiningDropDowns(moving_id, this.eigthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(17)) {
                this.showUnloadingKitchen = true;
                this.addkitchenDropDowns(moving_id, this.ninthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(18)) {
                this.showUnloadingBasement = true;
                this.addBasementDropDowns(moving_id, this.tenthunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(19)) {
                this.showUnloadingGarage = true;
                this.addGaragesDropDowns(moving_id, this.eleventhunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(20)) {
                this.showUnloadingPatiyoYards = true;
                this.addPatioyardDropDowns(moving_id, this.tweleveunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(21)) {
                this.showUnloadingOffices = true;
                this.addPatioyardDropDowns(moving_id, this.thirteenunloadingFormGroup, serv_type, this.unloadingData);
            }
            if (selectedOptionsIds.includes(22)) {
                this.showUnloadingOversized = true;
                this.addPatioyardDropDowns(moving_id, this.fourteenunloadingFormGroup, serv_type, this.unloadingData);
            }
            var start_date = this.angUnloadingOptionsForm.value.job_start_date_unloading;
            var basic_info4 = { unloading: { serviceId: moving_id, selected_options: selectedOptionsIds, jobStart: start_date } };
            var jobID = this.route.snapshot.paramMap.get('jobid');
            this.jobservice.updateServicesInJob(jobID, basic_info4, 'unloading').subscribe(function (result) {
                _this.submitted = false;
                if (result.success) {
                    console.log(result);
                    localStorage.setItem('jobID', result.jobId);
                    setTimeout(function () {
                        stepper.next();
                    }, 0);
                }
                else {
                    _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
                }
            });
        }
    };
    EditJobComponent.prototype.saveFromLocation = function (stepper, whichFromGroup, serviceType, nextFromGroup) {
        this.whichFromGroup = whichFromGroup;
        this.nextFromGroup = nextFromGroup;
        this.submitted_2 = true;
        if (this.whichFromGroup.controls.itemRows.invalid) {
            return;
        }
        else {
            if (serviceType == 'moving') {
                if (!this.selectedServices.includes(this.MOVING_ID)) {
                    this.setToLocations(this.nextFromGroup, '');
                }
                else {
                    this.setToLocations(this.nextFromGroup, this.movingData);
                }
            }
            if (serviceType == 'packing') {
                if (!this.selectedServices.includes(this.PACKING_ID)) {
                    this.setToLocations(this.nextFromGroup, '');
                }
                else {
                    this.setToLocations(this.nextFromGroup, this.packingData);
                }
            }
            if (serviceType == 'unpacking') {
                if (!this.selectedServices.includes(this.UNPACKING_ID)) {
                    this.setToLocations(this.nextFromGroup, '');
                }
                else {
                    this.setToLocations(this.nextFromGroup, this.unpackingData);
                }
            }
            //if(localStorage.getItem('jobType') == 'new'){
            //}
            var job_moving_from_info = this.whichFromGroup.value;
            var jobID = this.route.snapshot.paramMap.get('jobid');
            this.submit_final_job(stepper, job_moving_from_info, 'step3', jobID, serviceType);
        }
    };
    EditJobComponent.prototype.saveFromLoadingLocation = function (stepper, whichFromGroup, serviceType, nextFromGroup) {
        this.whichFromGroup = whichFromGroup;
        this.nextFromGroup = nextFromGroup;
        this.submitted_2 = true;
        if (this.whichFromGroup.controls.itemRows.invalid) {
            return;
        }
        else {
            var job_moving_from_info = this.whichFromGroup.value;
            console.log(job_moving_from_info);
            var jobID = this.route.snapshot.paramMap.get('jobid');
            this.submit_final_job(stepper, job_moving_from_info, 'step3', jobID, serviceType);
        }
    };
    EditJobComponent.prototype.saveToLocation = function (stepper, whichFromGroup, serviceType) {
        this.whichFromGroup = whichFromGroup;
        console.log('this is called');
        this.submitted_3 = true;
        if (this.whichFromGroup.controls.itemRowsTo.invalid) {
            return;
        }
        else {
            /* console.log(this.showAppliances);
            console.log(this.showMoving);
            console.log(this.showPacking); */
            var job_moving_to_info = this.whichFromGroup.value;
            var jobID = this.route.snapshot.paramMap.get('jobid');
            console.log(job_moving_to_info);
            this.submit_final_job(stepper, job_moving_to_info, 'step4', jobID, serviceType);
        }
    };
    EditJobComponent.prototype.saveAppliances = function (stepper, whichFromGroup, serviceType) {
        this.submitted_4 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.allappliances;
        var misc_info = this.whichFromGroup.value.appliance_misc;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                test['items'] = newstring[0];
                test['applianceItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var misc_info = this.whichFromGroup.value.appliance_misc;
        var assembly_info = this.whichFromGroup.value.appliance_assembly;
        console.log(assembly_info);
        var final_submit = { appliances: new_arr, appliances_misc: misc_info, appliances_assembly: assembly_info };
        console.log(final_submit);
        this.submit_final_job(stepper, final_submit, 'step5', jobID, serviceType);
    };
    EditJobComponent.prototype.saveBedrooms = function (stepper, whichFromGroup, serviceType) {
        this.submitted_5 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.bedrooms;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['bedRoomsItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.bedrooms_misc;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var assembly_info = this.whichFromGroup.value.bedrooms_assembly;
        var final_submit1 = { bedRooms: new_arr, bedrooms_misc: misc_info, bedrooms_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit1, 'step6', jobID, serviceType);
    };
    EditJobComponent.prototype.saveLivingRooms = function (stepper, whichFromGroup, serviceType) {
        this.submitted_6 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.livingrooms;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['livingRoomsItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.livingRooms_misc;
        var assembly_info = this.whichFromGroup.value.livingRooms_assembly;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var final_submit2 = { livingRooms: new_arr, livingRooms_misc: misc_info, livingRooms_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit2, 'step7', jobID, serviceType);
    };
    EditJobComponent.prototype.saveFamilyRooms = function (stepper, whichFromGroup, serviceType) {
        this.submitted_7 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.familyrooms;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['familyRoomsItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.familyRooms_misc;
        var assembly_info = this.whichFromGroup.value.familyRooms_assembly;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var final_submit3 = { familyRooms: new_arr, familyRooms_misc: misc_info, familyRooms_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit3, 'step8', jobID, serviceType);
    };
    EditJobComponent.prototype.saveDiningRooms = function (stepper, whichFromGroup, serviceType) {
        this.submitted_7 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.diningrooms;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['diningRoomsItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.dininRooms_misc;
        var assembly_info = this.whichFromGroup.value.dininRooms_assembly;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var final_submit4 = { diningRooms: new_arr, dininRooms_misc: misc_info, dininRooms_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit4, 'step9', jobID, serviceType);
    };
    EditJobComponent.prototype.saveKitchens = function (stepper, whichFromGroup, serviceType) {
        this.submitted_8 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.kitchens;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['kitchenItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.kitchen_misc;
        var assembly_info = this.whichFromGroup.value.kitchen_assembly;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var final_submit5 = { kitchen: new_arr, kitchen_misc: misc_info, kitchen_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit5, 'step10', jobID, serviceType);
    };
    EditJobComponent.prototype.saveBasements = function (stepper, whichFromGroup, serviceType) {
        this.submitted_8 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.basements;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['basementItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.basement_misc;
        var assembly_info = this.whichFromGroup.value.basement_assembly;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var final_submit6 = { basement: new_arr, basement_misc: misc_info, basement_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit6, 'step11', jobID, serviceType);
    };
    EditJobComponent.prototype.saveGarages = function (stepper, whichFromGroup, serviceType) {
        this.submitted_9 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.garages;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['garageItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.garage_misc;
        var assembly_info = this.whichFromGroup.value.garage_assembly;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var final_submit7 = { garage: new_arr, garage_misc: misc_info, garage_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit7, 'step12', jobID, serviceType);
    };
    EditJobComponent.prototype.savePatiyoyards = function (stepper, whichFromGroup, serviceType) {
        this.submitted_10 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.patioyards;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['patioYardItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.patioYard_misc;
        var assembly_info = this.whichFromGroup.value.patioYard_assembly;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var final_submit8 = { patioYard: new_arr, patioYard_misc: misc_info, patioYard_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit8, 'step13', jobID, serviceType);
    };
    EditJobComponent.prototype.saveOffices = function (stepper, whichFromGroup, serviceType) {
        this.submitted_10 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.patioyards;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['patioYardItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.patioYard_misc;
        var assembly_info = this.whichFromGroup.value.patioYard_assembly;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var final_submit8 = { patioYard: new_arr, patioYard_misc: misc_info, patioYard_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit8, 'step14', jobID, serviceType);
    };
    EditJobComponent.prototype.saveOverSized = function (stepper, whichFromGroup, serviceType) {
        this.submitted_10 = true;
        this.whichFromGroup = whichFromGroup;
        var appliance_info = this.whichFromGroup.value.patioyards;
        //var new_arr = [];
        var new_arr = [];
        $.each(appliance_info, function (index, value) {
            if (value != "null") {
                var test = {};
                var newstring = value.split("_");
                console.log(newstring[0]);
                test['items'] = newstring[0];
                test['patioYardItem'] = newstring[1];
                new_arr.push(test);
            }
        });
        var misc_info = this.whichFromGroup.value.patioYard_misc;
        var assembly_info = this.whichFromGroup.value.patioYard_assembly;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        var final_submit8 = { patioYard: new_arr, patioYard_misc: misc_info, patioYard_assembly: assembly_info };
        this.submit_final_job(stepper, final_submit8, 'step15', jobID, serviceType);
    };
    EditJobComponent.prototype.submit_final_job = function (stepper, final_submit, step, jobID, serviceType) {
        var _this = this;
        console.log('sdfsdf' + serviceType);
        this.jobservice.updateEditedJob(final_submit, step, jobID, serviceType).subscribe(function (result) {
            var flashMessagesService = _this._flashMessagesService;
            _this.submitted_10 = false;
            if (result.success) {
                if (step != 'step3' && step != 'step4') {
                    var jobID = _this.route.snapshot.paramMap.get('jobid');
                    _this.jobservice.getEditJob(jobID).subscribe(function (result) {
                        if (result.success) {
                            //http://localhost:4200/edit-job/5ea8fd1593c4153e8010841c
                            _this.selectedServices = result.job.serviceId;
                            console.log(result);
                            _this.jobData = result.job;
                            _this.movingData = result.job.moving[0];
                            _this.packingData = result.job.packing[0];
                            _this.unpackingData = result.job.unpacking[0];
                            _this.loadingData = result.job.loading[0];
                            _this.unloadingData = result.job.unloading[0];
                        }
                    });
                }
                setTimeout(function () {
                    stepper.next();
                }, 1);
            }
            else {
                flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    EditJobComponent.prototype.setupJob = function (stepper) {
        var _this = this;
        var jobID = this.route.snapshot.paramMap.get('jobid');
        this.jobservice.submitEditJob(jobID).subscribe(function (result) {
            var flashMessagesService = _this._flashMessagesService;
            if (result.success) {
                setTimeout(function () {
                    stepper.next();
                }, 1);
                flashMessagesService.show("Job updated Successfully", { cssClass: 'alert-success', timeout: 2000 });
                setTimeout(function () {
                    _this.router.navigate(['/jobs']);
                }, 2500);
            }
            else {
                flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    EditJobComponent.prototype.checkName = function (servicename) {
        if (servicename == 'Moving') {
            this.totalIndex = 14;
        }
        else {
            this.totalIndex = 15;
        }
    };
    EditJobComponent.prototype.onStepperSelectionChange = function (event) {
        this.scrollToSectionHook();
    };
    EditJobComponent.prototype.toggle = function () {
        this.show_dialog = !this.show_dialog;
        this.button_text = this.show_dialog ? 'View Less' : 'View More';
    };
    EditJobComponent.prototype.scrollToSectionHook = function () {
        var element = document.querySelector('.stepperTop');
        if (element) {
            setTimeout(function () {
                element.scrollIntoView({ behavior: 'smooth', block: 'start', inline: 'nearest' });
            }, 0);
        }
    };
    EditJobComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./editjob.component.html */ "./src/app/frontend/views/jobs/users/editjob/editjob.component.html"),
            styles: [__webpack_require__(/*! ./editjob.component.css */ "./src/app/frontend/views/jobs/users/editjob/editjob.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__["FlashMessagesService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_4__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], EditJobComponent);
    return EditJobComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.css":
/*!***************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.css ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".action a{margin-right:7px}\r\n.joblisting-panel .content-left .time_ago{font-size:12px;}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  /* float: left; */\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\n.desc .loc_lable{    width: 100px;\r\n    position: relative;\r\n    display: inline-block;\r\n\ttext-align: right;\r\n\tfont-weight:600;\r\n\tfont-size:14px\r\n}\r\n.desc .loc_lable::after{content:\":\"}\r\n.job-info{\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n}\r\n.items-moved .job-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.joblisting-panel .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.job-info .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.items-moved.joblisting-panel .title {\r\n\tcolor:#303030;\r\n    font-weight: 900;  \r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9pbnByb2dyZXNzam9icy9pbnByb2dyZXNzam9icy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsZ0JBQWdCO0FBQzFCLDBDQUEwQyxjQUFjLENBQUM7QUFFekQ7SUFDSSxpQkFBaUI7SUFDakIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFNBQVM7SUFDVCxhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFDZixVQUFVO0FBQ2Q7QUFFQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCO0FBR0E7OztJQUdJLGNBQWM7QUFDbEI7QUFHQTtFQUNFLG9HQUFvRztFQUNwRyxZQUFZO0VBQ1osWUFBWTtFQUNaLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsY0FBYztBQUNoQjtBQUdBO0lBQ0ksb0dBQW9HO0lBQ3BHLDJCQUEyQjtJQUMzQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGFBQWE7RUFDZjtBQUdGLHFCQUFxQixZQUFZO0lBQzdCLGtCQUFrQjtJQUNsQixxQkFBcUI7Q0FDeEIsaUJBQWlCO0NBQ2pCLGVBQWU7Q0FDZjtBQUNEO0FBQ0Esd0JBQXdCLFdBQVc7QUFFbkM7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFHSSxhQUFhO0lBRVQsZUFBZTtBQUN2QjtBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7Q0FDQyxhQUFhO0lBQ1YsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9pbnByb2dyZXNzam9icy9pbnByb2dyZXNzam9icy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjdGlvbiBhe21hcmdpbi1yaWdodDo3cHh9XHJcbi5qb2JsaXN0aW5nLXBhbmVsIC5jb250ZW50LWxlZnQgLnRpbWVfYWdve2ZvbnQtc2l6ZToxMnB4O31cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGlucHV0IHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOi05OTk5cHg7XHJcbiAgICBjbGlwOnJlY3QoMCwwLDAsMCk7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsIHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6MWVtO1xyXG4gICAgcGFkZGluZzowLjFlbTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDoxLjI7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgLyogZmxvYXQ6IGxlZnQ7ICovXHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZS1yYXRpbmd7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gICBcclxuLmRlc2MgLmxvY19sYWJsZXsgICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cdGZvbnQtd2VpZ2h0OjYwMDtcclxuXHRmb250LXNpemU6MTRweFxyXG59XHJcbi5kZXNjIC5sb2NfbGFibGU6OmFmdGVye2NvbnRlbnQ6XCI6XCJ9XHJcblxyXG4uam9iLWluZm97XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG4uaXRlbXMtbW92ZWQgLmpvYi1pbmZvIHtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn0gXHJcblxyXG4uam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLmpvYi1pbmZvIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uaXRlbXMtbW92ZWQuam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG5cdGNvbG9yOiMzMDMwMzA7XHJcbiAgICBmb250LXdlaWdodDogOTAwOyAgXHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.html":
/*!****************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\t\t\t<h3 class=\"mb-4\">All Open Estimates</h3>\r\n\t\t\t<div class=\"table-responsive\">\r\n\t\t\t\t<table class=\"table table-striped text-center\">\r\n\t\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Job ID</th>\r\n\t\t\t\t\t\t\t<th>Request Date</th>\r\n\t\t\t\t\t\t\t<th>Company Name</th>\r\n\t\t\t\t\t\t\t<th>Response On</th>\r\n\t\t\t\t\t\t\t<th>$</th>\r\n\t\t\t\t\t\t\t<th>Attachments</th>\r\n\t\t\t\t\t\t\t<th>Rating</th>\r\n\t\t\t\t\t\t\t<th>Actions</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody *ngIf=\"userslist && userslist.length > 0\">\r\n\t\t\t\t\t\t<tr *ngFor=\"let jobs of userslist\">\r\n\t\t\t\t\t\t\t<td><a class=\"job_id\" routerLink=\"/detail-job/{{jobs._id}}\">{{jobs.jobId}}</a></td>\r\n\t\t\t\t\t\t\t<td>{{jobs.job_created | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>{{jobs.companyName}}</td>\r\n\t\t\t\t\t\t\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>${{jobs.bid_price}}</td>\r\n\t\t\t\t\t\t\t<td>{{jobs.attachemnt_pic}}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<div class=\"rate\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"star-ratings-sprite\"><span [style.width.%]=\"jobs.width\" class=\"star-ratings-sprite-rating\"></span></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\" routerLink=\"/detail-job/{{jobs.job_id}}\">View</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\" routerLink=\"/complete-job/{{jobs.job_id}}/{{jobs.bidder_id}}\">Complete Job</a>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<tbody *ngIf=\"!userslist || userslist.length == 0\" >\r\n\t\t\t\t\t\t<tr><td colspan=\"7\"><p class=\"text-center\">No Estimates posted</td></tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.ts ***!
  \**************************************************************************************/
/*! exports provided: UsersInProgressJobsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UsersInProgressJobsComponent", function() { return UsersInProgressJobsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");





//import { PasswordValidator } from '../../../validator/password.validator';


var UsersInProgressJobsComponent = /** @class */ (function () {
    function UsersInProgressJobsComponent(_flashMessagesService, userservice, jobservice, fb, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.titleService = titleService;
        this.first_show = false;
        this.val = '';
        this.userslist = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.isValid = false;
        this.name = '';
        this.animal = '';
        this.jobidisset = '';
        this.message = '';
        this.getAllJobs();
        this.titleService.setTitle('Jobs in Progress | MoveLaunch');
    }
    UsersInProgressJobsComponent.prototype.getAllJobs = function () {
        var _this = this;
        this.jobservice.getFilteredJobsForUser(1).subscribe(function (result) {
            console.log(result);
            if (result.success) {
                _this.isValid = true;
                var d = new Date();
                var month = '' + (d.getMonth() + 1);
                var day = '' + d.getDate();
                var year = d.getFullYear();
                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;
                var mindateset = [year, month, day].join('-');
                _this.allJobs = result.jobs;
                console.log(_this.allJobs);
                var userslist1_1 = [];
                _this.allJobs.forEach(function (x, key) {
                    x.bidsData.forEach(function (value, index) {
                        userslist1_1.push({ 'job_id': x._id, 'bidder_id': value.userId._id, 'bid_price': value.bid_price, 'created_at': value.created_at, 'bidStatus': value.bidStatus, 'companyName': value.userId.companyName, 'jobId': x.jobId, 'job_created': x.created_at, 'width': value.rating * 20 });
                    });
                });
                userslist1_1.sort(function (a, b) { return b.created_at.localeCompare(a.created_at); });
                _this.userslist = userslist1_1;
                /*this.allJobs.forEach((x,key) => {
                 this.jobservice.getJobBids(x._id).subscribe(result=>{
                    
                    $.each(result.users, function(index, value) {
                        
                        result.users[index].width = value.userRating*20;
                        result.users[index].jobId = x.jobId;
                        result.users[index].job_created = x.created_at;
                        result.users[index].user_id = value._id;
                        result.users[index].job_id = x._id;
                        //this.allJobs[index].userEmail =  value.email;
                    });
                    
                    this.userslist = result.users;
                    
                }); */
                /* 	this.jobservice.getBidsOnJobUser(x._id).subscribe(result1 =>
                    {
                        console.log(result1);
                        if(result1.success){
                            this.allJobs[key].bidsOn =  result1.data.hired_decline;
                            this.allJobs[key].bidder_id =  result1.data.userId;
                        }else{
                            this.allJobs[key].bidsOn =  result1.data.hired_decline;
                            this.allJobs[key].bidder_id =  result1.data.userId;
                        }
                    });
                });*/
                console.log(_this.userslist);
            }
            else {
                _this.isValid = true;
                //this._flashMessagesService.show("No job founds", { cssClass: 'alert-danger',timeout:6000});
            }
        });
    };
    UsersInProgressJobsComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.isValid = false;
    };
    UsersInProgressJobsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./inprogressjobs.component.html */ "./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.html"),
            styles: [__webpack_require__(/*! ./inprogressjobs.component.css */ "./src/app/frontend/views/jobs/users/inprogressjobs/inprogressjobs.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__["FlashMessagesService"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_3__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["Title"]])
    ], UsersInProgressJobsComponent);
    return UsersInProgressJobsComponent;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/users/jobdetails/dialog-hire-decline.css":
/*!******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/jobdetails/dialog-hire-decline.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-container{\r\n\tpadding:35px !important;\r\n}\r\n.mat-raised-button.mat-primary{\r\n\tbackground-color:#1695C2;\r\n}\r\n.mat-dialog-content{    margin: 0;\r\n    padding: 0;}\r\n.mat-dialog-actions{padding:13px !important;position:relative}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JkZXRhaWxzL2RpYWxvZy1oaXJlLWRlY2xpbmUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsdUJBQXVCO0FBQ3hCO0FBQ0E7Q0FDQyx3QkFBd0I7QUFDekI7QUFFQSx3QkFBd0IsU0FBUztJQUM3QixVQUFVLENBQUM7QUFDZixvQkFBb0IsdUJBQXVCLENBQUMsaUJBQWlCIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JkZXRhaWxzL2RpYWxvZy1oaXJlLWRlY2xpbmUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGFpbmVye1xyXG5cdHBhZGRpbmc6MzVweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeXtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiMxNjk1QzI7XHJcbn1cclxuXHJcbi5tYXQtZGlhbG9nLWNvbnRlbnR7ICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7fVxyXG4ubWF0LWRpYWxvZy1hY3Rpb25ze3BhZGRpbmc6MTNweCAhaW1wb3J0YW50O3Bvc2l0aW9uOnJlbGF0aXZlfSJdfQ== */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/jobdetails/dialog-hire-decline.html":
/*!*******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/jobdetails/dialog-hire-decline.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"type==1\" class=\"col-md-12\">\r\n\t<div mat-dialog-content class=\"row\"  >\r\n\t  <p>Do you want to accept this person's job propsal?</p>\r\n\t</div>\r\n\t<br />\r\n\t<div mat-dialog-actions class=\"row\" >\r\n\t\t<button mat-raised-button color=\"primary\" (click)=\"onYesClick('1')\" cdkFocusInitial>Yes</button>\r\n\t\t<button mat-raised-button color=\"warn\" (click)=\"onNoClick()\">No</button>\r\n\t</div>\r\n</div>\r\n<div *ngIf=\"type==2\" class=\"col-md-12\" >\r\n\t<div mat-dialog-content class=\"row\" >\r\n\t  <p>Do you want to decline this person's job propsal?</p>\r\n\t</div>\r\n\t<br />\r\n\t<div mat-dialog-actions class=\"row\" >\r\n\t\t<button mat-raised-button color=\"primary\" (click)=\"onYesClick('2')\" cdkFocusInitial>Yes</button>\r\n\t\t<button mat-raised-button color=\"warn\" (click)=\"onNoClick()\">No</button>\r\n\t</div>\r\n</div>"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.css ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".hire-panel .info .rate span{font-size:14px;font-weight:500}\r\n.hire-panel .info .completedjob {\r\n\tcolor: #1691be;\r\n\tfont-weight: 700;\r\n\tfont-size: 14px;\r\n\tdisplay: inline-flex;\r\n}\r\n.hire_edit {\r\n   background: #23bf07;\r\n    color: #fff;\r\n    padding: 3px 5px;\r\n    display: inline-block;\r\n    min-width: 70px;\r\n    text-align: center;\r\n    transition: all linear 0.5s;\r\n    font-size: 18px;\r\n\tmargin: 0 10px;\r\n}\r\n.rating {\r\n    float:left;\r\n}\r\n.job_status{\r\n    float: right;\r\n    color: green;\r\n    font-weight: bold;\r\n}\r\n.comp_button{color:#fff !important;\r\nfont-weight:bold}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  float: left;\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\n.img-view{\r\n\twidth: 136px;\r\n\theight: 136px;\r\n\t  \r\n  }\r\n.img-view img{\r\nwidth: 136px;\r\nheight: 136px;\r\n-o-object-fit: cover;\r\n   object-fit: cover;\r\nborder-radius: 50%;\r\n}\r\nspan.itemname{ width:20px;font-weight:600;font-size:14px }\r\nspan.itemcount{width:25px; float:right}\r\n.border-class{\r\n\tborder-bottom: 1px dashed #ccc;\r\n    width: 97%;\r\n    margin: 15px auto;\r\n}\r\n.desc .loc_lable{    width: 100px;\r\n    position: relative;\r\n    display: inline-block;\r\n\ttext-align: right;\r\n\tfont-weight:600;\r\n\tfont-size:14px\r\n}\r\n.desc .loc_lable::after{content:\":\"}\r\n.job-info{\r\n    padding: 20px;\r\n    margin-bottom: 30px;\r\n}\r\n.items-moved .job-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.joblisting-panel .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.job-info .title {\r\n    font-size: 16px;\r\n    margin-top: 15px;\r\n    font-weight: 600;\r\n}\r\n.items-moved.joblisting-panel .title {\r\n\tcolor:#303030;\r\n    font-weight: 900;  \r\n}\r\n@media (max-width: 575.98px){\r\n\t.job_status{\r\n\t\tfloat: none;\r\n\t}\r\n\t\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JkZXRhaWxzL2pvYmRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2QkFBNkIsY0FBYyxDQUFDLGVBQWU7QUFDM0Q7Q0FDQyxjQUFjO0NBQ2QsZ0JBQWdCO0NBQ2hCLGVBQWU7Q0FDZixvQkFBb0I7QUFDckI7QUFFQTtHQUNHLG1CQUFtQjtJQUNsQixXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLDJCQUEyQjtJQUMzQixlQUFlO0NBQ2xCLGNBQWM7QUFDZjtBQUNBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGlCQUFpQjtBQUNyQjtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDLGdCQUFnQjtBQUNoQjtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmO0FBQ0E7Q0FDRCxZQUFZO0NBQ1osYUFBYTs7RUFFWjtBQUNBO0FBQ0YsWUFBWTtBQUNaLGFBQWE7QUFDYixvQkFBaUI7R0FBakIsaUJBQWlCO0FBQ2pCLGtCQUFrQjtBQUNsQjtBQUNDLGVBQWUsVUFBVSxDQUFDLGVBQWUsQ0FBQyxlQUFlO0FBQzFELGVBQWUsVUFBVSxFQUFFLFdBQVc7QUFFdEM7Q0FDQyw4QkFBOEI7SUFDM0IsVUFBVTtJQUNWLGlCQUFpQjtBQUNyQjtBQUVBLHFCQUFxQixZQUFZO0lBQzdCLGtCQUFrQjtJQUNsQixxQkFBcUI7Q0FDeEIsaUJBQWlCO0NBQ2pCLGVBQWU7Q0FDZjtBQUNEO0FBQ0Esd0JBQXdCLFdBQVc7QUFFbkM7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFHSSxhQUFhO0lBRVQsZUFBZTtBQUN2QjtBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7Q0FDQyxhQUFhO0lBQ1YsZ0JBQWdCO0FBQ3BCO0FBQ0E7Q0FDQztFQUNDLFdBQVc7Q0FDWjs7QUFFRCIsImZpbGUiOiJzcmMvYXBwL2Zyb250ZW5kL3ZpZXdzL2pvYnMvdXNlcnMvam9iZGV0YWlscy9qb2JkZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlyZS1wYW5lbCAuaW5mbyAucmF0ZSBzcGFue2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH1cclxuLmhpcmUtcGFuZWwgLmluZm8gLmNvbXBsZXRlZGpvYiB7XHJcblx0Y29sb3I6ICMxNjkxYmU7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbn1cclxuXHJcbi5oaXJlX2VkaXQge1xyXG4gICBiYWNrZ3JvdW5kOiAjMjNiZjA3O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBwYWRkaW5nOiAzcHggNXB4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWluLXdpZHRoOiA3MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIGxpbmVhciAwLjVzO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG5cdG1hcmdpbjogMCAxMHB4O1xyXG59XHJcbi5yYXRpbmcge1xyXG4gICAgZmxvYXQ6bGVmdDtcclxufVxyXG4uam9iX3N0YXR1c3tcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbi5jb21wX2J1dHRvbntjb2xvcjojZmZmICFpbXBvcnRhbnQ7XHJcbmZvbnQtd2VpZ2h0OmJvbGR9XHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGlucHV0IHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgdG9wOi05OTk5cHg7XHJcbiAgICBjbGlwOnJlY3QoMCwwLDAsMCk7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsIHtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6MWVtO1xyXG4gICAgcGFkZGluZzowLjFlbTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOjEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDoxLjI7XHJcbiAgICBjb2xvcjojZGRkO1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ+KYhSAnO1xyXG59XHJcblxyXG4ucmF0aW5nID4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlcixcclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWw6aG92ZXIgfiBsYWJlbCB7XHJcbiAgICBjb2xvcjogIzE2OTFiZTtcclxufVxyXG5cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIsXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWw6aG92ZXIgfiBsYWJlbCxcclxuLnJhdGluZyA+IGxhYmVsOmhvdmVyIH4gaW5wdXQ6Y2hlY2tlZCB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjNTFiNjA4O1xyXG59XHJcblxyXG5cclxuLnN0YXItcmF0aW5ncy1zcHJpdGUge1xyXG4gIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgaGVpZ2h0OiAyMXB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1pbmRlbnQ6IC05OTllbTtcclxuICB3aWR0aDogMTEwcHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZS1yYXRpbmd7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3MuY2Rwbi5pby8yNjA1L3N0YXItcmF0aW5nLXNwcml0ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgfVxyXG4gIC5pbWctdmlld3tcclxuXHR3aWR0aDogMTM2cHg7XHJcblx0aGVpZ2h0OiAxMzZweDtcclxuXHQgIFxyXG4gIH1cclxuICAuaW1nLXZpZXcgaW1ne1xyXG53aWR0aDogMTM2cHg7XHJcbmhlaWdodDogMTM2cHg7XHJcbm9iamVjdC1maXQ6IGNvdmVyO1xyXG5ib3JkZXItcmFkaXVzOiA1MCU7XHJcbn1cclxuIHNwYW4uaXRlbW5hbWV7IHdpZHRoOjIwcHg7Zm9udC13ZWlnaHQ6NjAwO2ZvbnQtc2l6ZToxNHB4IH1cclxuc3Bhbi5pdGVtY291bnR7d2lkdGg6MjVweDsgZmxvYXQ6cmlnaHR9XHJcblxyXG4uYm9yZGVyLWNsYXNze1xyXG5cdGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2NjYztcclxuICAgIHdpZHRoOiA5NyU7XHJcbiAgICBtYXJnaW46IDE1cHggYXV0bztcclxufVxyXG5cclxuLmRlc2MgLmxvY19sYWJsZXsgICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cdGZvbnQtd2VpZ2h0OjYwMDtcclxuXHRmb250LXNpemU6MTRweFxyXG59XHJcbi5kZXNjIC5sb2NfbGFibGU6OmFmdGVye2NvbnRlbnQ6XCI6XCJ9XHJcblxyXG4uam9iLWluZm97XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG4uaXRlbXMtbW92ZWQgLmpvYi1pbmZvIHtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn0gXHJcblxyXG4uam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuLmpvYi1pbmZvIC50aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4uaXRlbXMtbW92ZWQuam9ibGlzdGluZy1wYW5lbCAudGl0bGUge1xyXG5cdGNvbG9yOiMzMDMwMzA7XHJcbiAgICBmb250LXdlaWdodDogOTAwOyAgXHJcbn1cclxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NS45OHB4KXtcclxuXHQuam9iX3N0YXR1c3tcclxuXHRcdGZsb2F0OiBub25lO1xyXG5cdH1cclxuXHRcclxufVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\t\t<h3 class=\"mb-4\">Estimate Details</h3>\r\n\r\n\r\n\r\n\t\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"movingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"tc-wrap\">\r\n\t\t\t\t\tSelected Moving Data\r\n\t\t\t\t\t<span class=\"job_status\" *ngIf=\"jobData.jobStatus == 2\">Completed</span>\r\n\t\t\t\t\t<span class=\"job_status\" *ngIf=\"jobData.jobStatus == 1\">In Progress</span>\r\n\t\t\t\t\t<span class=\"job_status\" *ngIf=\"jobData.jobStatus == 0\">Open</span>\r\n\t\t\t\t\t<span class=\"job_status\"><a text-align=\"right\" routerLink=\"/edit-job/{{jobid}}\" class =\"hire_edit\">Edit</a></span>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"movingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tEstimate Date : {{movingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"movingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of movingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"movingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingto of movingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingto.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t \r\n<div class=\"container title-icon-bar items-moved\" *ngIf=\"movingData\">\r\n\t<div class=\"col-md-12\">\t\r\n\t\r\n\t\t<div class=\"\" > \r\n\t\t\t\r\n\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\tItems to be Moved\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.appliances  && movingData.appliances.length > 0\">\r\n\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of movingData.appliances\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.appliances_misc\">{{ movingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.appliances_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.appliances_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.appliances && movingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.bedRooms  && movingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of movingData.bedRooms\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.bedrooms_misc\">{{ movingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.bedRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.bedRooms_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.bedRooms && movingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.livingRooms && movingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of movingData.livingRooms\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.livingRooms_misc\">{{ movingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.livingRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.livingRooms_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.livingRooms && movingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.familyRooms && movingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of movingData.familyRooms\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.familyRooms_misc\">{{ movingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.familyRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.familyRooms_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.familyRooms && movingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.diningRooms  && movingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of movingData.diningRooms\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.diningRooms_misc\">{{ movingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.diningRooms_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.diningRooms_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.diningRooms && movingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.kitchen && movingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of movingData.kitchen\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.kitchen_misc\">{{ movingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.kitchen_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.kitchen_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.kitchen && movingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.basement && movingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of movingData.basement\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.basement_misc\">{{ movingData.basement_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.basement_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.basement_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.basement && movingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.garage  && movingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of movingData.garage\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.garage_misc\">{{ movingData.garage_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.garage_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.garage_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.garage && movingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-md-4\" *ngIf=\"movingData && movingData.patioYard  && movingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of movingData.patioYard\">\r\n\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.patioYard_misc\">{{ movingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<b>Need Help in Assembly/Deassembly : </b>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"movingData.patioYard_assembly\">Yes</span>\r\n\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!movingData.patioYard_assembly\">No</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"movingData.patioYard && movingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"packingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t<div class=\"tc-wrap\">Selected Packing Data</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"packingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tEstimate Date : {{packingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"packingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of packingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"packingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingto of packingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingto.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t\r\n\t<div class=\"container title-icon-bar items-moved\" *ngIf=\"packingData\">\r\n\t\t<div class=\"col-md-12\">\t\r\n\t\t\r\n\t\t\t<div class=\"\" > \r\n\t\t\t\t\r\n\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\tItems to be Packed\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.appliances  && packingData.appliances.length > 0\">\r\n\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of packingData.appliances\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.appliances_misc\">{{ packingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.appliances && packingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.bedRooms  && packingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of packingData.bedRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.bedrooms_misc\">{{ packingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.bedRooms && packingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.livingRooms && packingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of packingData.livingRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.livingRooms_misc\">{{ packingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.livingRooms && packingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.familyRooms && packingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of packingData.familyRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.familyRooms_misc\">{{ packingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.familyRooms && packingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.diningRooms  && packingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of packingData.diningRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.diningRooms_misc\">{{ packingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.diningRooms && packingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.kitchen && packingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of packingData.kitchen\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.kitchen_misc\">{{ packingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.kitchen && packingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.basement && packingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of packingData.basement\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.basement_misc\">{{ packingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.basement && packingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.garage  && packingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of packingData.garage\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.garage_misc\">{{ packingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.garage && packingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"packingData && packingData.patioYard  && packingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of packingData.patioYard\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"packingData.patioYard_misc\">{{ packingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!packingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"packingData.patioYard && packingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t<div class=\"container title-icon-bar\"  *ngIf=\"unpackingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t<div class=\"tc-wrap\">Selected Unpacking Data</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"unpackingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tEstimate Date : {{unpackingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"unpackingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of unpackingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-6\" *ngIf=\"unpackingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unpackingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingto.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t<div class=\"container title-icon-bar items-moved\" *ngIf=\"unpackingData\">\r\n\t\t<div class=\"col-md-12\">\t\r\n\t\t\r\n\t\t\t<div class=\"\" > \r\n\t\t\t\t\r\n\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\tItems to be Unpacked\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.appliances  && unpackingData.appliances.length > 0\">\r\n\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of unpackingData.appliances\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.appliances_misc\">{{ unpackingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.appliances && unpackingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.bedRooms  && unpackingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of unpackingData.bedRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.bedrooms_misc\">{{ unpackingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.bedRooms && unpackingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.livingRooms && unpackingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of unpackingData.livingRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.livingRooms_misc\">{{ unpackingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.livingRooms && unpackingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.familyRooms && unpackingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of unpackingData.familyRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.familyRooms_misc\">{{ unpackingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.familyRooms && unpackingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.diningRooms  && unpackingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of unpackingData.diningRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.diningRooms_misc\">{{ unpackingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.diningRooms && unpackingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.kitchen && unpackingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of unpackingData.kitchen\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.kitchen_misc\">{{ unpackingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.kitchen && unpackingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.basement && unpackingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of unpackingData.basement\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.basement_misc\">{{ unpackingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.basement && unpackingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.garage  && unpackingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of unpackingData.garage\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.garage_misc\">{{ unpackingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.garage && unpackingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unpackingData && unpackingData.patioYard  && unpackingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of unpackingData.patioYard\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unpackingData.patioYard_misc\">{{ unpackingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unpackingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unpackingData.patioYard && unpackingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t<div class=\"container title-icon-bar\"  *ngIf=\"loadingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t<div class=\"tc-wrap\">Selected Loading Data</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"loadingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tEstimate Date : {{loadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-12\" *ngIf=\"loadingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tFrom Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingfrom of loadingData.moving_from\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span> {{ movingfrom.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingfrom.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingfrom.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingfrom.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingfrom.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingfrom.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  {{movingfrom.address1}}<br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t<div class=\"container title-icon-bar items-moved\" *ngIf=\"loadingData\">\r\n\t\t<div class=\"col-md-12\">\t\r\n\t\t\r\n\t\t\t<div class=\"\" > \r\n\t\t\t\t\r\n\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\tItems to be Loaded\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.appliances  && loadingData.appliances.length > 0\">\r\n\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of loadingData.appliances\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.appliances_misc\">{{ loadingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.appliances && loadingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.bedRooms  && loadingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of loadingData.bedRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.bedrooms_misc\">{{ loadingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.bedRooms && loadingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.livingRooms && loadingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of loadingData.livingRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.livingRooms_misc\">{{ loadingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.livingRooms && loadingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.familyRooms && loadingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of loadingData.familyRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.familyRooms_misc\">{{ loadingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.familyRooms && loadingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.diningRooms  && loadingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of loadingData.diningRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.diningRooms_misc\">{{ loadingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.diningRooms && loadingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.kitchen && loadingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of loadingData.kitchen\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.kitchen_misc\">{{ loadingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.kitchen && loadingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.basement && loadingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of loadingData.basement\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.basement_misc\">{{ loadingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.basement && loadingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.garage  && loadingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of loadingData.garage\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.garage_misc\">{{ loadingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.garage && loadingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"loadingData && loadingData.patioYard  && loadingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of loadingData.patioYard\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"loadingData.patioYard_misc\">{{ loadingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!loadingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"loadingData.patioYard && loadingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\r\n\t\r\n\t\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"unloadingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col\">\r\n\t\t\t\t<div class=\"tc-wrap\">Selected Unloading Data</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"container title-icon-bar\" *ngIf=\"unloadingData\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"job-info\">\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\tEstimate Date : {{unloadingData.jobStart | date:'mediumDate'}}\r\n\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<div class=\"border-class\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"col-md-12\" *ngIf=\"unloadingData\" >\r\n\t\t\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t\t\tTo Location\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngFor=\"let movingto of unloadingData.moving_to\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Moving Type </span>  {{ movingto.movingType }} <br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Floor </span>  {{ movingto.floor }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">State </span>  {{ movingto.state }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">County </span>  {{movingto.county | titlecase}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">City </span>  {{movingto.city | titlecase }}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p class=\"data_row\"><span class=\"loc_lable\">Zipcode </span>  {{movingto.zipcode}}<br /></p>\r\n\t\t\t\t\t\t\t\t\t<p *ngIf=\"bidStatus == 1\"  class=\"data_row\"><span class=\"loc_lable\">Address </span>  <span>{{movingto.address1}}</span><br /></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\r\n\t<div class=\"container title-icon-bar items-moved\" *ngIf=\"unloadingData\">\r\n\t\t<div class=\"col-md-12\">\t\r\n\t\t\r\n\t\t\t<div class=\"\" > \r\n\t\t\t\t\r\n\t\t\t\t<div class=\"job-info row\">\r\n\t\t\t\t\t<div class=\"title col-12 mb-5 text-center\">\r\n\t\t\t\t\t\tItems to be Unloaded\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.appliances  && unloadingData.appliances.length > 0\">\r\n\t\t\t\t\t\t<div class=\"title\">Appliances</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let appliance of unloadingData.appliances\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ appliance.applianceItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ appliance.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.appliances_misc\">{{ unloadingData.appliances_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.appliances_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.appliances && unloadingData.appliances.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.bedRooms  && unloadingData.bedRooms.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Bedrooms</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let bedroom of unloadingData.bedRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ bedroom.bedRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ bedroom.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.bedrooms_misc\">{{ unloadingData.bedrooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.bedrooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.bedRooms && unloadingData.bedRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.livingRooms && unloadingData.livingRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Living Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let living of unloadingData.livingRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ living.livingRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ living.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.livingRooms_misc\">{{ unloadingData.livingRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.livingRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.livingRooms && unloadingData.livingRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.familyRooms && unloadingData.familyRooms.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Family Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let family of unloadingData.familyRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ family.familyRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ family.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.familyRooms_misc\">{{ unloadingData.familyRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.familyRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.familyRooms && unloadingData.familyRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.diningRooms  && unloadingData.diningRooms.length > 0\">\t\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Dining Room</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let dining of unloadingData.diningRooms\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ dining.diningRoomsItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ dining.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.diningRooms_misc\">{{ unloadingData.diningRooms_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.diningRooms_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.diningRooms && unloadingData.diningRooms.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.kitchen && unloadingData.kitchen.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Kitchen</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let kitchen of unloadingData.kitchen\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ kitchen.kitchenItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ kitchen.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.kitchen_misc\">{{ unloadingData.kitchen_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.kitchen_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.kitchen && unloadingData.kitchen.length == 0\">-- Nothing To Move --</div>\t  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.basement && unloadingData.basement.length > 0\">\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Basement</div>\r\n\t\t\t\t\t\t<div class=\"desc\" *ngFor=\"let basement of unloadingData.basement\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ basement.basementItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ basement.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.basement_misc\">{{ unloadingData.basement_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.basement_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.basement && unloadingData.basement.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.garage  && unloadingData.garage.length > 0\">\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Garage</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let garage of unloadingData.garage\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ garage.garageItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ garage.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.garage_misc\">{{ unloadingData.garage_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.garage_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.garage && unloadingData.garage.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-4\" *ngIf=\"unloadingData && unloadingData.patioYard  && unloadingData.patioYard.length > 0\" >\t  \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"title\">Patio/Yard</div>\r\n\t\t\t\t\t\t<div class=\"desc\"  *ngFor=\"let patioYard of unloadingData.patioYard\">\r\n\t\t\t\t\t\t\t<span class=\"itemname\">{{ patioYard.patioYardItem.name }}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemcount\">{{ patioYard.items }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t\t<b>Instructions : </b>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"unloadingData.patioYard_misc\">{{ unloadingData.patioYard_misc}}</span>\r\n\t\t\t\t\t\t\t<span class=\"itemname\" *ngIf=\"!unloadingData.patioYard_misc\">--- Nothing ---</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf=\"unloadingData.patioYard && unloadingData.patioYard.length == 0\">-- Nothing To Move --</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"container hire-panel-wrap\">\r\n\t\t<div class=\"col-12\">\r\n\t\t\t<flash-messages></flash-messages>\r\n\t\t</div>\r\n\t\t<div class=\"row\" *ngIf=\"jobData.jobStatus == 0\">\r\n\t\t\t<div class=\"col\" > \r\n\t\t\t\t<div class=\"hire-panel\" *ngFor=\"let list of userslist\">\r\n\t\t\t\t\t<div class=\"img-view\">\r\n\t\t\t\t\t\t<img *ngIf=\"list.image_url\" src=\"{{list.image_url}}\">\r\n\t\t\t\t\t\t<img *ngIf=\"!list.image_url\" src=\"../../../assets/images/no_user_images.jpg\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<div class=\"name\"><a class=\"tc-wrap\" routerLink=\"/partner-profile/{{list._id}}\">{{list.firstname}} {{list.lastname}}</a></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"info col-md-3 text-center\" >\r\n\t\t\t\t\t\t<div class=\"row rate\">\r\n\t\t\t\t\t\t\t<div class=\"star-ratings-sprite\"><span [style.width.%]=\"list.width\" class=\"star-ratings-sprite-rating\"></span></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"row completedjob\">\r\n\t\t\t\t\t\t\t{{list.totalCompletedJob}} jobs completed\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"action\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<a *ngIf =\"!list.bidStatus && list.bidStatus ==0\" (click)=\"openDialog(1,jobData._id,list._id)\" href=\"javascript:void(0)\"><i class=\"fas fa-check\"></i>{{hire_decline}}</a>\r\n\t\t\t\t\t\t\t<a *ngIf =\"!list.bidStatus && list.bidStatus ==0\" (click)=\"openDialog(2,jobData._id,list._id)\" href=\"javascript:void(0)\"><i class=\"fas fa-times\"></i>{{decline_hire}}</a>\r\n\t\t\t\t\t\t\t<a *ngIf =\"list.bidStatus && list.bidStatus ==1\" (click)=\"openDialog(1,jobData._id,list._id)\" href=\"javascript:void(0)\"><i class=\"fas fa-check\"></i>Hired</a>\r\n\t\t\t\t\t\t\t<a *ngIf =\"list.bidStatus && list.bidStatus ==2\" (click)=\"openDialog(1,jobData._id,list._id)\" href=\"javascript:void(0)\"><i class=\"fas fa-times\"></i>Declined</a>\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"action\">\r\n\t\t\t\t\t\t\t<a *ngIf =\"list.bidStatus && list.bidStatus ==1\" routerLink=\"/complete-job/{{jobData._id}}/{{list._id}}\">Complete Job</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"row\" *ngIf=\"jobData.jobStatus == 1\">\r\n\t\t\t<div class=\"col\" > \r\n\t\t\t\t<div class=\"hire-panel\" *ngFor=\"let list of userslist\">\r\n\t\t\t\t\t<div class=\"img-view\">\r\n\t\t\t\t\t\t<img *ngIf=\"list.image_url\" src=\"{{list.image_url}}\">\r\n\t\t\t\t\t\t<img *ngIf=\"!list.image_url\" src=\"../../../assets/images/no_user_images.jpg\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<div class=\"name\"><a class=\"tc-wrap\" routerLink=\"/partner-profile/{{list._id}}\">{{list.firstname}} {{list.lastname}}</a></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"info col-md-3\">\r\n\t\t\t\t\t\t<div class=\"rate\">\r\n\t\t\t\t\t\t\t<div class=\"star-ratings-sprite\"><span [style.width.%]=\"list.width\" class=\"star-ratings-sprite-rating\"></span></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"completedjob\">\r\n\t\t\t\t\t\t\t{{list.totalCompletedJob}} estimates completed\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"action\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<a *ngIf =\"!list.bidStatus && list.bidStatus ==0\" (click)=\"openDialog(1,jobData._id,list._id)\" href=\"javascript:void(0)\"><i class=\"fas fa-check\"></i>{{hire_decline}}</a>\r\n\t\t\t\t\t\t\t<a *ngIf =\"!list.bidStatus && list.bidStatus ==0\" (click)=\"openDialog(2,jobData._id,list._id)\" href=\"javascript:void(0)\"><i class=\"fas fa-times\"></i>{{decline_hire}}</a>\r\n\t\t\t\t\t\t\t<a *ngIf =\"list.bidStatus && list.bidStatus ==1\" (click)=\"openDialog(1,jobData._id,list._id)\" href=\"javascript:void(0)\"><i class=\"fas fa-check\"></i>Hired -  {{list.hired_decline | date:'mediumDate'}}</a>\r\n\t\t\t\t\t\t\t<a *ngIf =\"list.bidStatus && list.bidStatus ==2\" (click)=\"openDialog(1,jobData._id,list._id)\" href=\"javascript:void(0)\"><i class=\"fas fa-times\"></i>Declined -  {{list.hired_decline | date:'mediumDate'}}</a>\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"action\">\r\n\t\t\t\t\t\t\t<a class=\"btn btn-primary comp_button\" *ngIf =\"list.bidStatus && list.bidStatus ==1\" routerLink=\"/complete-job/{{jobData._id}}/{{list._id}}\">Complete Estimate</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"row\" *ngIf=\"jobData.jobStatus == 2\">\r\n\t\t\t<div class=\"col\" > \r\n\t\t\t\t<div class=\"hire-panel\" *ngFor=\"let list of userslist\">\r\n\t\t\t\t\t<div class=\"img-view\">\r\n\t\t\t\t\t\t<img *ngIf=\"list.image_url\" src=\"{{list.image_url}}\">\r\n\t\t\t\t\t\t<img *ngIf=\"!list.image_url\" src=\"../../../assets/images/no_user_images.jpg\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\t\t<div class=\"name\"><a class=\"tc-wrap\" routerLink=\"/partner-profile/{{list._id}}\">{{list.firstname}} {{list.lastname}}</a></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"info col-md-3\">\r\n\t\t\t\t\t\t<div class=\"rate\">\r\n\t\t\t\t\t\t\t<div class=\"star-ratings-sprite\"><span [style.width.%]=\"list.width\" class=\"star-ratings-sprite-rating\"></span></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"completedjob\">\r\n\t\t\t\t\t\t\t{{list.totalCompletedJob}} estimates completed\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"completedjob\">\r\n\t\t\t\t\t\t\tCompleted on {{jobData.completedAt | date:'mediumDate'}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n</div> \r\n</div> \r\n</div> \r\n "

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.ts ***!
  \******************************************************************************/
/*! exports provided: DetailsJobComponent, HireDeclineDialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetailsJobComponent", function() { return DetailsJobComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HireDeclineDialog", function() { return HireDeclineDialog; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");






//import { PasswordValidator } from '../../../validator/password.validator';




var DetailsJobComponent = /** @class */ (function () {
    function DetailsJobComponent(_flashMessagesService, route, router, userservice, jobservice, fb, dialog, titleService) {
        var _this = this;
        this._flashMessagesService = _flashMessagesService;
        this.route = route;
        this.router = router;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.dialog = dialog;
        this.titleService = titleService;
        this.ratingClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.jobid = '';
        this.appliances = '';
        this.basements = '';
        this.diningrooms = '';
        this.bedrooms = '';
        this.familyrooms = '';
        this.garages = '';
        this.kitchens = '';
        this.livingrooms = '';
        this.patioyards = '';
        this.userslist = '';
        this.jobData = '';
        this.thisisdone = "";
        this.alllocations = "";
        this.states = '';
        this.counties = '';
        this.cities = '';
        this.allappliances = '';
        this.show_dialog = false;
        this.button_text = '';
        this.image_url = '';
        this.hire_decline = '';
        this.decline_hire = '';
        this.movingData = '';
        this.packingData = '';
        this.unpackingData = '';
        this.loadingData = '';
        this.unloadingData = '';
        this.getSavedJob();
        this.titleService.setTitle('Job Detail | MoveLaunch');
        this.router.routeReuseStrategy.shouldReuseRoute = function () {
            return false;
        };
        this.router.events.subscribe(function (evt) {
            if (evt instanceof _angular_router__WEBPACK_IMPORTED_MODULE_3__["NavigationEnd"]) {
                // trick the Router into believing it's last link wasn't previously loaded
                _this.router.navigated = false;
                // if you need to scroll back to top, here is the right place
                window.scrollTo(0, 0);
            }
        });
    }
    DetailsJobComponent.prototype.openDialog = function (type, jobID, userid) {
        var _this = this;
        var dialogRef = this.dialog.open(HireDeclineDialog, {
            width: '450px',
            data: { jobID: jobID, type: type, userid: userid }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            if (result == 'Success') {
                _this._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success', timeout: 6000 });
            }
            console.log(result);
            if (result == 'Hired') {
                _this.hire_decline = _this.hire_decline ? 'Hired' : 'Hire';
                _this.decline_hire = _this.decline_hire ? 'Decline' : 'Declined';
                setTimeout(function () {
                    _this.router.navigate(['/user-in-progress-jobs']);
                }, 1200);
            }
            if (result == 'Declined') {
                _this.decline_hire = _this.decline_hire ? 'Declined' : 'Decline';
                _this.hire_decline = _this.decline_hire ? 'Hire' : 'Hired';
            }
        });
    };
    DetailsJobComponent.prototype.getUserListonJob = function () {
        var _this = this;
        this.jobid = this.route.snapshot.paramMap.get('jobid');
        this.jobservice.getJobBids(this.jobid).subscribe(function (result) {
            $.each(result.users, function (index, value) {
                result.users[index].width = value.userRating * 20;
                if (value.profile_pic) {
                    result.users[index].image_url = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].partner_image_url + value._id + '/' + value.profile_pic;
                }
            });
            console.log(result);
            _this.userslist = result.users;
        });
    };
    DetailsJobComponent.prototype.getSavedJob = function () {
        var _this = this;
        var user_id = localStorage.getItem('userid');
        localStorage.setItem('jobType', 'saved');
        this.jobid = this.route.snapshot.paramMap.get('jobid');
        this.jobservice.getEditJob(this.jobid).subscribe(function (result) {
            console.log(result);
            /* this.createFromLocationForm(); */
            if (result.success) {
                _this.jobData = result.job;
                //this.jobData.servicename = this.jobData.serviceId.name;
                if (result.job.moving && result.job.moving.length > 0) {
                    _this.movingData = result.job.moving[0];
                }
                console.log(_this.movingData);
                if (result.job.packing && result.job.packing.length > 0) {
                    _this.packingData = result.job.packing[0];
                }
                if (result.job.unpacking && result.job.unpacking.length > 0) {
                    _this.unpackingData = result.job.unpacking[0];
                }
                if (result.job.loading && result.job.loading.length > 0) {
                    _this.loadingData = result.job.loading[0];
                }
                if (result.job.unloading && result.job.unloading.length > 0) {
                    _this.unloadingData = result.job.unloading[0];
                }
                _this.getUserListonJob();
            }
            else {
                _this._flashMessagesService.show("No Saved Job Found.", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    DetailsJobComponent.prototype.deleteJob = function (jobID) {
        var _this = this;
        this.jobservice.deleteJob(jobID).subscribe(function (result) {
            if (result.success) {
                _this._flashMessagesService.show("job has been deleted successfully", { cssClass: 'alert-success', timeout: 6000 });
            }
            else {
                _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    DetailsJobComponent.prototype.toggle = function () {
        this.show_dialog = !this.show_dialog;
        this.button_text = this.show_dialog ? 'View Less' : 'View More';
    };
    DetailsJobComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.jobid = this.route.snapshot.paramMap.get('jobid');
        this.button_text = 'View More';
        this.hire_decline = 'Hire';
        this.decline_hire = 'Decline';
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], DetailsJobComponent.prototype, "rating", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], DetailsJobComponent.prototype, "itemId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])
    ], DetailsJobComponent.prototype, "ratingClick", void 0);
    DetailsJobComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./jobdetails.component.html */ "./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.html"),
            styles: [__webpack_require__(/*! ./jobdetails.component.css */ "./src/app/frontend/views/jobs/users/jobdetails/jobdetails.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_6__["FlashMessagesService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_5__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__["Title"]])
    ], DetailsJobComponent);
    return DetailsJobComponent;
}());

var HireDeclineDialog = /** @class */ (function () {
    function HireDeclineDialog(dialogRef, data, userservice, jobservice, fb) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.jobID = '';
        this.type = '';
        this.userid = '';
        console.log(data);
        this.jobID = data.jobID;
        this.type = data.type;
        this.userid = data.userid;
    }
    HireDeclineDialog.prototype.onNoClick = function () {
        this.dialogRef.close('ignore');
    };
    HireDeclineDialog.prototype.onYesClick = function (type_sent) {
        var _this = this;
        this.jobservice.hireDecline(type_sent, this.jobID, this.userid).subscribe(function (result) {
            if (result.success && type_sent == 1) {
                _this.dialogRef.close('Hired');
            }
            if (result.success && type_sent == 2) {
                _this.dialogRef.close('Declined');
            }
            _this.dialogRef.close('ignore');
        });
    };
    HireDeclineDialog = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'dialog-hire-decline',
            template: __webpack_require__(/*! ./dialog-hire-decline.html */ "./src/app/frontend/views/jobs/users/jobdetails/dialog-hire-decline.html"),
            styles: [__webpack_require__(/*! ./dialog-hire-decline.css */ "./src/app/frontend/views/jobs/users/jobdetails/dialog-hire-decline.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_8__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialogRef"], Object, _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_5__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]])
    ], HireDeclineDialog);
    return HireDeclineDialog;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/users/joblisting/dialog-overview-example-dialog.css":
/*!*****************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/joblisting/dialog-overview-example-dialog.css ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-container{\r\n\tpadding:35px !important;\r\n}\r\n.mat-raised-button.mat-primary{\r\n\tbackground-color:#1695C2;\r\n}\r\n.mat-dialog-actions{padding:25px 0;}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JsaXN0aW5nL2RpYWxvZy1vdmVydmlldy1leGFtcGxlLWRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyx1QkFBdUI7QUFDeEI7QUFDQTtDQUNDLHdCQUF3QjtBQUN6QjtBQUVBLG9CQUFvQixjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9mcm9udGVuZC92aWV3cy9qb2JzL3VzZXJzL2pvYmxpc3RpbmcvZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZGlhbG9nLWNvbnRhaW5lcntcclxuXHRwYWRkaW5nOjM1cHggIWltcG9ydGFudDtcclxufVxyXG4ubWF0LXJhaXNlZC1idXR0b24ubWF0LXByaW1hcnl7XHJcblx0YmFja2dyb3VuZC1jb2xvcjojMTY5NUMyO1xyXG59XHJcblxyXG4ubWF0LWRpYWxvZy1hY3Rpb25ze3BhZGRpbmc6MjVweCAwO30iXX0= */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/joblisting/dialog-overview-example-dialog.html":
/*!******************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/joblisting/dialog-overview-example-dialog.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div mat-dialog-content>\r\n  <p>Do you want to delete this Estimates?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n\t<button mat-raised-button color=\"primary\" (click)=\"onYesClick()\" cdkFocusInitial>Yes</button>\r\n\t<button mat-raised-button color=\"warn\" (click)=\"onNoClick()\">No</button>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/joblisting/joblisting.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/joblisting/joblisting.component.css ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".action a{margin-right:7px}\r\n.joblisting-panel .content-left .time_ago{font-size:12px;}\r\n.mode.New .fas {\r\n    color: #0CAF03;\r\n    font-size: 14px;\r\n}\r\n.mode.Old .fas {\r\n    color: red;\r\n    font-size: 14px;\r\n}\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JsaXN0aW5nL2pvYmxpc3RpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLGdCQUFnQjtBQUMxQiwwQ0FBMEMsY0FBYyxDQUFDO0FBRXpEO0lBQ0ksY0FBYztJQUNkLGVBQWU7QUFDbkI7QUFDQTtJQUNJLFVBQVU7SUFDVixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy9qb2JsaXN0aW5nL2pvYmxpc3RpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24gYXttYXJnaW4tcmlnaHQ6N3B4fVxyXG4uam9ibGlzdGluZy1wYW5lbCAuY29udGVudC1sZWZ0IC50aW1lX2Fnb3tmb250LXNpemU6MTJweDt9XHJcblxyXG4ubW9kZS5OZXcgLmZhcyB7XHJcbiAgICBjb2xvcjogIzBDQUYwMztcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG4ubW9kZS5PbGQgLmZhcyB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/joblisting/joblisting.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/joblisting/joblisting.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\t\t\t<h3 class=\"mb-4\">All Estimates Posted</h3>\r\n\t\t\t<div class=\"col-12\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<flash-messages></flash-messages>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"table-responsive\">\r\n\t\t\t\t<table class=\"table table-striped text-center\">\r\n\t\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Job ID</th>\r\n\t\t\t\t\t\t\t<th>Created Date</th>\r\n\t\t\t\t\t\t\t<th>Job Status</th>\r\n\t\t\t\t\t\t\t<th>Bid Count</th>\r\n\t\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody *ngIf=\"allJobs && allJobs.length > 0\">\r\n\t\t\t\t\t\t<tr *ngFor=\"let jobs of allJobs\" ngClass=\"myclass_{{jobs._id}}\">\r\n\t\t\t\t\t\t\t<td><a class=\"job_id\" routerLink=\"/detail-job/{{jobs._id}}\">{{jobs.jobId}}</a></td>\r\n\t\t\t\t\t\t\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t\t<td>{{jobs.jobStatus}}</td>\r\n\t\t\t\t\t\t\t<td>{{jobs.bidcount}} Bids</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\" routerLink=\"/detail-job/{{jobs._id}}\">View</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\" routerLink=\"/edit-job/{{jobs._id}}\">Edit</a>\r\n\t\t\t\t\t\t\t\t<a class=\"hire\" (click)=\"openDialog(jobs._id)\" href=\"javascript:void(0)\" >Delete</a>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<tbody *ngIf=\"!allJobs || allJobs.length == 0\" >\r\n\t\t\t\t\t\t<tr><td colspan=\"5\"><p class=\"text-center\">No estimates posted</td></tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/joblisting/joblisting.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/joblisting/joblisting.component.ts ***!
  \******************************************************************************/
/*! exports provided: ListingJobComponent, DialogOverviewExampleDialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListingJobComponent", function() { return ListingJobComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogOverviewExampleDialog", function() { return DialogOverviewExampleDialog; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");





//import { PasswordValidator } from '../../../validator/password.validator';



var ListingJobComponent = /** @class */ (function () {
    function ListingJobComponent(_flashMessagesService, userservice, jobservice, fb, dialog, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.dialog = dialog;
        this.titleService = titleService;
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.isValid = false;
        this.name = '';
        this.animal = '';
        this.jobidisset = '';
        this.message = '';
        this.getAllJobs();
        this.titleService.setTitle('All Jobs | MoveLaunch');
    }
    ListingJobComponent.prototype.openDialog = function (jobId) {
        var _this = this;
        var dialogRef = this.dialog.open(DialogOverviewExampleDialog, {
            width: '450px',
            data: { jobID: jobId }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            if (result == 'Success') {
                _this._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success', timeout: 6000 });
            }
        });
    };
    ListingJobComponent.prototype.getAllJobs = function () {
        var _this = this;
        this.jobservice.getAllJobs().subscribe(function (result) {
            _this.isValid = true;
            if (result.success) {
                var d = new Date();
                var month = '' + (d.getMonth() + 1);
                var day = '' + d.getDate();
                var year = d.getFullYear();
                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;
                var mindateset = [year, month, day].join('-');
                _this.allJobs = result.job;
                _this.allJobs.forEach(function (x, key) {
                    var d1 = new Date(x.jobStart);
                    var month1 = '' + (d1.getMonth() + 1);
                    var day1 = '' + d1.getDate();
                    var year1 = d1.getFullYear();
                    if (month1.length < 2)
                        month1 = '0' + month1;
                    if (day1.length < 2)
                        day1 = '0' + day1;
                    var mindateset1 = [year1, month1, day1].join('-');
                    if (mindateset1 < mindateset) {
                        result.job[key].jobStatus = 'Old';
                    }
                    else {
                        result.job[key].jobStatus = 'New';
                    }
                });
                console.log(_this.allJobs);
            }
            else {
                _this.isValid = true;
                _this._flashMessagesService.show("Error in Creating Job", { cssClass: 'alert-danger', timeout: 6000 });
            }
        });
    };
    ListingJobComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.isValid = false;
    };
    ListingJobComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./joblisting.component.html */ "./src/app/frontend/views/jobs/users/joblisting/joblisting.component.html"),
            styles: [__webpack_require__(/*! ./joblisting.component.css */ "./src/app/frontend/views/jobs/users/joblisting/joblisting.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__["FlashMessagesService"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_4__["JobService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], ListingJobComponent);
    return ListingJobComponent;
}());

var DialogOverviewExampleDialog = /** @class */ (function () {
    function DialogOverviewExampleDialog(dialogRef, data, userservice, jobservice, fb) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.jobID = '';
        this.jobID = data.jobID;
    }
    DialogOverviewExampleDialog.prototype.onNoClick = function () {
        this.dialogRef.close('ignore');
    };
    DialogOverviewExampleDialog.prototype.onYesClick = function () {
        var _this = this;
        this.jobservice.deleteJob(this.jobID).subscribe(function (result) {
            if (result.success) {
                var myElement = document.getElementsByClassName('myclass_' + _this.jobID);
                myElement[0].style.display = "none";
                _this.dialogRef.close('Success');
            }
        });
    };
    DialogOverviewExampleDialog = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'dialog-overview-example-dialog',
            template: __webpack_require__(/*! ./dialog-overview-example-dialog.html */ "./src/app/frontend/views/jobs/users/joblisting/dialog-overview-example-dialog.html"),
            styles: [__webpack_require__(/*! ./dialog-overview-example-dialog.css */ "./src/app/frontend/views/jobs/users/joblisting/dialog-overview-example-dialog.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_6__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogRef"], Object, _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_4__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
    ], DialogOverviewExampleDialog);
    return DialogOverviewExampleDialog;
}());



/***/ }),

/***/ "./src/app/frontend/views/jobs/users/userscompletedjobs/dialog-overview-example-dialog.css":
/*!*************************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/userscompletedjobs/dialog-overview-example-dialog.css ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-dialog-container{\r\n\tpadding:35px !important;\r\n}\r\n.mat-raised-button.mat-primary{\r\n\tbackground-color:#1695C2;\r\n}\r\n.mat-dialog-actions{padding:25px 0;}\r\n.desc{\r\n\tline-height:18px;\r\n\tfont-size:14px;\r\n\tpadding:15px 18px;\r\n}\r\n.desc label{font-weight:bold}\r\n.rating {\r\n    float:left;\r\n}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  float: left;\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy91c2Vyc2NvbXBsZXRlZGpvYnMvZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLHVCQUF1QjtBQUN4QjtBQUNBO0NBQ0Msd0JBQXdCO0FBQ3pCO0FBRUEsb0JBQW9CLGNBQWMsQ0FBQztBQUduQztDQUNDLGdCQUFnQjtDQUNoQixjQUFjO0NBQ2QsaUJBQWlCO0FBQ2xCO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUI7SUFDSSxVQUFVO0FBQ2Q7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy91c2Vyc2NvbXBsZXRlZGpvYnMvZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZGlhbG9nLWNvbnRhaW5lcntcclxuXHRwYWRkaW5nOjM1cHggIWltcG9ydGFudDtcclxufVxyXG4ubWF0LXJhaXNlZC1idXR0b24ubWF0LXByaW1hcnl7XHJcblx0YmFja2dyb3VuZC1jb2xvcjojMTY5NUMyO1xyXG59XHJcblxyXG4ubWF0LWRpYWxvZy1hY3Rpb25ze3BhZGRpbmc6MjVweCAwO31cclxuXHJcblxyXG4uZGVzY3tcclxuXHRsaW5lLWhlaWdodDoxOHB4O1xyXG5cdGZvbnQtc2l6ZToxNHB4O1xyXG5cdHBhZGRpbmc6MTVweCAxOHB4O1xyXG59XHJcbi5kZXNjIGxhYmVse2ZvbnQtd2VpZ2h0OmJvbGR9XHJcbi5yYXRpbmcge1xyXG4gICAgZmxvYXQ6bGVmdDtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OjEuMjtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlciB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjMTY5MWJlO1xyXG59XHJcblxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlcixcclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlciB+IGxhYmVsLFxyXG4ucmF0aW5nID4gbGFiZWw6aG92ZXIgfiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDIxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9Il19 */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/userscompletedjobs/dialog-overview-example-dialog.html":
/*!**************************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/userscompletedjobs/dialog-overview-example-dialog.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n\t<h3 class=\"col-md-12\">User Rating and Feedback</h3>\r\n\t<div class=\" col-md-12\">\r\n\t\t<div class=\"star-ratings-sprite\"><span [style.width.%]=\"width\" class=\"star-ratings-sprite-rating\"></span></div>\r\n\t</div>\r\n\t<div class=\"desc col-md-12\">\r\n\t\t<label>Comments</label> : {{reviews.feedback}}\r\n\t</div>\r\n\t<div class=\"desc col-md-12\">\r\n\t\t<a (click)= \"closeDialog();\" routerLink=\"/edit-feedback/{{reviews._id}}\"><i class=\"fa fa-pencil\"></i> Edit Feedback</a>\r\n\t</div>\r\n</div>"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.css":
/*!***********************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.css ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".action a{margin-right:7px}\r\n.joblisting-panel .content-left .time_ago{font-size:12px;}\r\n.rating:not(:checked) > input {\r\n    position:absolute;\r\n    top:-9999px;\r\n    clip:rect(0,0,0,0);\r\n}\r\n.rating:not(:checked) > label {\r\n    float:right;\r\n    width:1em;\r\n    padding:0.1em;\r\n    overflow:hidden;\r\n    white-space:nowrap;\r\n    cursor:pointer;\r\n    font-size:100%;\r\n    line-height:1.2;\r\n    color:#ddd;\r\n}\r\n.rating:not(:checked) > label:before {\r\n    content: '★ ';\r\n}\r\n.rating > input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.rating:not(:checked) > label:hover,\r\n.rating:not(:checked) > label:hover ~ label {\r\n    color: #1691be;\r\n}\r\n.rating > input:checked ~ label:hover,\r\n.rating > input:checked ~ label:hover ~ label,\r\n.rating > label:hover ~ input:checked ~ label {\r\n    color: #51b608;\r\n}\r\n.star-ratings-sprite {\r\n  background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n  font-size: 0;\r\n  height: 21px;\r\n  line-height: 0;\r\n  overflow: hidden;\r\n  text-indent: -999em;\r\n  width: 110px;\r\n  /* float: left; */\r\n  margin: 0 auto;\r\n}\r\n.star-ratings-sprite-rating{\r\n    background: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/2605/star-rating-sprite.png\") repeat-x;\r\n    background-position: 0 100%;\r\n    float: left;\r\n    height: 21px;\r\n    display:block;\r\n  }\r\n  \r\n   \r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy91c2Vyc2NvbXBsZXRlZGpvYnMvdXNlcnNjb21wbGV0ZWRqb2JzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxnQkFBZ0I7QUFDMUIsMENBQTBDLGNBQWMsQ0FBQztBQUV6RDtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7QUFDZDtBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUVBO0lBQ0ksY0FBYztBQUNsQjtBQUVBOztJQUVJLGNBQWM7QUFDbEI7QUFHQTs7O0lBR0ksY0FBYztBQUNsQjtBQUdBO0VBQ0Usb0dBQW9HO0VBQ3BHLFlBQVk7RUFDWixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCO0FBR0E7SUFDSSxvR0FBb0c7SUFDcEcsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtFQUNmIiwiZmlsZSI6InNyYy9hcHAvZnJvbnRlbmQvdmlld3Mvam9icy91c2Vycy91c2Vyc2NvbXBsZXRlZGpvYnMvdXNlcnNjb21wbGV0ZWRqb2JzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uIGF7bWFyZ2luLXJpZ2h0OjdweH1cclxuLmpvYmxpc3RpbmctcGFuZWwgLmNvbnRlbnQtbGVmdCAudGltZV9hZ297Zm9udC1zaXplOjEycHg7fVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gaW5wdXQge1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICB0b3A6LTk5OTlweDtcclxuICAgIGNsaXA6cmVjdCgwLDAsMCwwKTtcclxufVxyXG5cclxuLnJhdGluZzpub3QoOmNoZWNrZWQpID4gbGFiZWwge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICB3aWR0aDoxZW07XHJcbiAgICBwYWRkaW5nOjAuMWVtO1xyXG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xyXG4gICAgd2hpdGUtc3BhY2U6bm93cmFwO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6MTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OjEuMjtcclxuICAgIGNvbG9yOiNkZGQ7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAn4piFICc7XHJcbn1cclxuXHJcbi5yYXRpbmcgPiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcbi5yYXRpbmc6bm90KDpjaGVja2VkKSA+IGxhYmVsOmhvdmVyLFxyXG4ucmF0aW5nOm5vdCg6Y2hlY2tlZCkgPiBsYWJlbDpob3ZlciB+IGxhYmVsIHtcclxuICAgIGNvbG9yOiAjMTY5MWJlO1xyXG59XHJcblxyXG5cclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlcixcclxuLnJhdGluZyA+IGlucHV0OmNoZWNrZWQgfiBsYWJlbDpob3ZlciB+IGxhYmVsLFxyXG4ucmF0aW5nID4gbGFiZWw6aG92ZXIgfiBpbnB1dDpjaGVja2VkIH4gbGFiZWwge1xyXG4gICAgY29sb3I6ICM1MWI2MDg7XHJcbn1cclxuXHJcblxyXG4uc3Rhci1yYXRpbmdzLXNwcml0ZSB7XHJcbiAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zLmNkcG4uaW8vMjYwNS9zdGFyLXJhdGluZy1zcHJpdGUucG5nXCIpIHJlcGVhdC14O1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDIxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xyXG4gIHdpZHRoOiAxMTBweDtcclxuICAvKiBmbG9hdDogbGVmdDsgKi9cclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuXHJcbi5zdGFyLXJhdGluZ3Mtc3ByaXRlLXJhdGluZ3tcclxuICAgIGJhY2tncm91bmQ6IHVybChcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzI2MDUvc3Rhci1yYXRpbmctc3ByaXRlLnBuZ1wiKSByZXBlYXQteDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICB9XHJcbiAgXHJcbiAgICJdfQ== */"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.html":
/*!************************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container job_dashboard\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col\"> \r\n\t\t\t\r\n\t\t<h3 class=\"mb-4\">History of Completed Estimates</h3>\r\n\r\n\t\t\t<div class=\"table-responsive\">\r\n\t\t\t<table class=\"table table-striped text-center\">\r\n\t\t\t\t<thead class=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Job ID</th>\r\n\t\t\t\t\t\t<th>Request Date</th>\r\n\t\t\t\t\t\t<th>Company Name</th>\r\n\t\t\t\t\t\t<th>Response On</th>\r\n\t\t\t\t\t\t<th>$</th>\r\n\t\t\t\t\t\t<th>Attachments</th>\r\n\t\t\t\t\t\t<th>Rating</th>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody *ngIf=\"compuserslist && compuserslist.length > 0\">\r\n\t\t\t\t\t<tr *ngFor=\"let jobs of compuserslist\">\r\n\t\t\t\t\t\t<td><a class=\"job_id\" routerLink=\"/detail-job/{{jobs.job_id}}\">{{jobs.jobId}}</a></td>\r\n\t\t\t\t\t\t<td>{{jobs.job_created | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t<td>{{jobs.companyName}}</td>\r\n\t\t\t\t\t\t<td>{{jobs.created_at | date:'mediumDate'}}</td>\r\n\t\t\t\t\t\t<td>${{jobs.bid_price}}</td>\r\n\t\t\t\t\t\t<td><p *ngIf=\"jobs.attachemnt_pic\">{{jobs.attachemnt_pic}}</p><p *ngIf=\"!jobs.attachemnt_pic\">N.A.</p></td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<div class=\"rate\">\r\n\t\t\t\t\t\t\t\t<div class=\"star-ratings-sprite\"><span [style.width.%]=\"jobs.width\" class=\"star-ratings-sprite-rating\"></span></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t\t<tbody *ngIf=\"!compuserslist || compuserslist.length == 0\" >\r\n\t\t\t\t\t<tr><td colspan=\"7\"><p class=\"text-center\">No estimates completed</td></tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>                                \r\n\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.ts":
/*!**********************************************************************************************!*\
  !*** ./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.ts ***!
  \**********************************************************************************************/
/*! exports provided: UsersCompletedJobsComponent, DialogOverviewFeedback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UsersCompletedJobsComponent", function() { return UsersCompletedJobsComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogOverviewFeedback", function() { return DialogOverviewFeedback; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _services_job_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../services/job.service */ "./src/app/services/job.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-flash-messages */ "./node_modules/angular2-flash-messages/module/index.js");
/* harmony import */ var angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");





//import { PasswordValidator } from '../../../validator/password.validator';



var UsersCompletedJobsComponent = /** @class */ (function () {
    function UsersCompletedJobsComponent(_flashMessagesService, userservice, jobservice, fb, dialog, titleService) {
        this._flashMessagesService = _flashMessagesService;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.dialog = dialog;
        this.titleService = titleService;
        this.first_show = false;
        this.val = '';
        this.allJobs = "";
        this.jobservices = "";
        this.allservice = "";
        this.isValid = false;
        this.name = '';
        this.animal = '';
        this.jobidisset = '';
        this.message = '';
        this.compuserslist = '';
        this.getAllJobs();
        this.titleService.setTitle('Completed Jobs | MoveLaunch');
    }
    UsersCompletedJobsComponent.prototype.openDialog = function (jobId) {
        var _this = this;
        var dialogRef = this.dialog.open(DialogOverviewFeedback, {
            width: '450px',
            data: { jobID: jobId }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            if (result == 'Success') {
                _this._flashMessagesService.show('job has been deleted successfully', { cssClass: 'alert-success', timeout: 6000 });
            }
        });
    };
    UsersCompletedJobsComponent.prototype.getAllJobs = function () {
        var _this = this;
        this.jobservice.getFilteredJobsForUserDashboard(2).subscribe(function (result) {
            if (result.success) {
                _this.isValid = true;
                var d = new Date();
                var month = '' + (d.getMonth() + 1);
                var day = '' + d.getDate();
                var year = d.getFullYear();
                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;
                var mindateset = [year, month, day].join('-');
                console.log(result.jobs);
                _this.allJobs = result.jobs;
                var userslist2_1 = [];
                _this.allJobs.forEach(function (x, key) {
                    x.bidsData.forEach(function (value, index) {
                        userslist2_1.push({ 'job_id': x._id, 'user_id': value.userId._id, 'bid_price': value.bid_price, 'created_at': value.created_at, 'bidStatus': value.bidStatus, 'companyName': value.userId.companyName, 'jobId': x.jobId, 'job_created': x.created_at, 'width': value.rating * 20 });
                    });
                });
                _this.compuserslist = userslist2_1;
                console.log(_this.compuserslist);
            }
            else {
                _this.isValid = true;
                //this._flashMessagesService.show("No job founds", { cssClass: 'alert-danger',timeout:6000});
            }
        });
        /*
        this.jobservice.getFilteredJobsForUser(2).subscribe(result =>
        {
            if(result.success){
                this.isValid = true;
                var d = new Date();
                var month = '' + (d.getMonth() + 1);
                var day = '' + d.getDate();
                var year = d.getFullYear();
                if (month.length < 2) month = '0' + month;
                if (day.length < 2) day = '0' + day;
                var mindateset = [year, month, day].join('-');
                
                this.allJobs = result.jobs;
                this.allJobs.forEach((x,key) => {
                    this.jobservice.getJobBids(x._id).subscribe(result=>{
                        console.log(result.users);
                        $.each(result.users, function(index, value) {
                            result.users[index].width = value.userRating*20;
                            result.users[index].jobId = x.jobId;
                            result.users[index].job_created = x.created_at;
                            //this.allJobs[index].userEmail =  value.email;
                        });
                        console.log(result);
                        this.compuserslist = result.users;
                        
                    });
                    
                    
                });
                
            }else{
                this.isValid = true;
                //this._flashMessagesService.show("No job founds", { cssClass: 'alert-danger',timeout:6000});
            }
           
        }); */
    };
    UsersCompletedJobsComponent.prototype.ngOnInit = function () {
        this.first_show = true;
        this.isValid = false;
    };
    UsersCompletedJobsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! ./userscompletedjobs.component.html */ "./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.html"),
            styles: [__webpack_require__(/*! ./userscompletedjobs.component.css */ "./src/app/frontend/views/jobs/users/userscompletedjobs/userscompletedjobs.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [angular2_flash_messages__WEBPACK_IMPORTED_MODULE_5__["FlashMessagesService"], _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_3__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
    ], UsersCompletedJobsComponent);
    return UsersCompletedJobsComponent;
}());

var DialogOverviewFeedback = /** @class */ (function () {
    function DialogOverviewFeedback(dialogRef, data, userservice, jobservice, fb) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.userservice = userservice;
        this.jobservice = jobservice;
        this.fb = fb;
        this.jobID = '';
        this.reviews = '';
        this.width = '';
        this.jobID = data.jobID;
        this.getFeedback(this.jobID);
    }
    DialogOverviewFeedback.prototype.getFeedback = function (jobID) {
        var _this = this;
        this.jobservice.getJobFeedbackForUser(jobID).subscribe(function (result) {
            _this.reviews = result.review;
            _this.width = result.review.rating * 20;
        });
    };
    DialogOverviewFeedback.prototype.closeDialog = function () {
        this.dialogRef.close();
    };
    DialogOverviewFeedback = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'dialog-overview-example-dialog',
            template: __webpack_require__(/*! ./dialog-overview-example-dialog.html */ "./src/app/frontend/views/jobs/users/userscompletedjobs/dialog-overview-example-dialog.html"),
            styles: [__webpack_require__(/*! ./dialog-overview-example-dialog.css */ "./src/app/frontend/views/jobs/users/userscompletedjobs/dialog-overview-example-dialog.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_6__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialogRef"], Object, _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"], _services_job_service__WEBPACK_IMPORTED_MODULE_3__["JobService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]])
    ], DialogOverviewFeedback);
    return DialogOverviewFeedback;
}());



/***/ })

}]);
//# sourceMappingURL=frontend-views-jobs-jobs-module.js.map