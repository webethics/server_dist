{"version":3,"sources":["webpack:///./src/app/admin/modules/manage-questions/add-questions/add-questions.component.css","webpack:///./src/app/admin/modules/manage-questions/add-questions/add-questions.component.html","webpack:///./src/app/admin/modules/manage-questions/add-questions/add-questions.component.ts","webpack:///./src/app/admin/modules/manage-questions/edit-questions/edit-questions.component.css","webpack:///./src/app/admin/modules/manage-questions/edit-questions/edit-questions.component.html","webpack:///./src/app/admin/modules/manage-questions/edit-questions/edit-questions.component.ts","webpack:///./src/app/admin/modules/manage-questions/list-questions/list-questions.component.css","webpack:///./src/app/admin/modules/manage-questions/list-questions/list-questions.component.html","webpack:///./src/app/admin/modules/manage-questions/list-questions/list-questions.component.ts","webpack:///./src/app/admin/modules/manage-questions/manage-questions-routing.module.ts","webpack:///./src/app/admin/modules/manage-questions/manage-questions.module.ts"],"names":[],"mappings":"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","file":"modules-manage-questions-manage-questions-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"Helloooooooooooooo this is a add question page\\n\\n<!-- <div class=\\\"an-page-content\\\">\\n  <div class=\\\"an-content-body manage-price\\\">\\n      <div class=\\\"an-body-topbar wow fadeIn\\\">\\n          <div class=\\\"an-page-title\\\">\\n              <h2>Add Super Important Question</h2>\\n          </div>\\n      </div>\\n      <form [formGroup]=\\\"addYoutubeForm\\\" novalidate (ngSubmit)=\\\"onAdd()\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <div class=\\\"\\\">\\n                          <input type=\\\"text\\\" formControlName=\\\"question\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"Question\\\">\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <div class=\\\"\\\">\\n                          <input type=\\\"text\\\" formControlName=\\\"option1\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"Option 1\\\">\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-md-12\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"\\\">\\n                        <input type=\\\"text\\\" formControlName=\\\"option1\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"Option 1\\\">\\n                    </div>\\n                </div>\\n            </div>\\n          \\n          </div>\\n          <div class=\\\"\\\">\\n              <div class=\\\"form-group\\\">\\n                  <div class=\\\"\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary \\\">ADD</button>\\n                  </div>\\n              </div>\\n          </div>\\n      </form>\\n  </div>\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-questions',\n  templateUrl: './add-questions.component.html',\n  styleUrls: ['./add-questions.component.css']\n})\nexport class AddQuestionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  edit-questions works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-questions',\n  templateUrl: './edit-questions.component.html',\n  styleUrls: ['./edit-questions.component.css']\n})\nexport class EditQuestionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n// onUpdate() {\n//   if (this.updateForm.valid) {\n//     this.route.params.subscribe(params => {\n//       console.log(this.updateForm.value)\n//       this.admin_service.editVideoInfo(this.updateForm.value, params['id']).subscribe(res => {\n//         if (res.code == 200) {\n//           this.getformdata();\n//           this.notification.successToast('Edited')\n//         } else {\n//           this.notification.warningToast('Not Edited')\n//         }\n//       })\n//       this.router.navigate(['admin/managevideos/list'])\n//     });\n//   } else {\n//     this.notification.errorToast(StringConst.INVALID_INFORMATION);\n\n//   }\n// }\n}\n","module.exports = \"\\n  .box-video__title{\\n    margin: 10px 0;\\n    font-family: Roboto, sans-serif;\\n    font-size: 15px;\\n    color: #1d0033;\\n  }\\n  .error{\\n  color: red;\\n   /* padding-left:20%; */\\n  font-weight: normal;\\n  }\\n \"","module.exports = \"<div class=\\\"admin-main-content\\\">\\n  <h3>Questions</h3>\\n  <div class=\\\"admin-box-controls\\\">\\n    <div class=\\\"add-element\\\">\\n      <a class=\\\"add-element__link\\\" (click)=\\\"openModal()\\\">\\n        <i class=\\\"fa fa-plus-circle\\\"></i>\\n      </a>\\n    </div>\\n    <div class=\\\"clear-trash\\\">\\n      <a class=\\\"clear-trash-wrap\\\" (click)=\\\"deleteMultipleQuestion()\\\">\\n        <span class=\\\"clear-trash__icon fa fa-trash\\\"></span>\\n      </a>\\n    </div>\\n    <div class=\\\"clear-trash\\\">\\n      <a class=\\\"clear-trash-wrap\\\" (click)=\\\"exportToCSV()\\\">\\n        <button class=\\\"clear-trash__icon\\\">Export to CSV</button>\\n      </a>\\n    </div>\\n  </div>\\n  <div class=\\\"admin-box-item user-control\\\">\\n    <div class=\\\"table-responsive\\\">\\n      <div *ngIf=\\\"questions?.length\\\">\\n        <div class=\\\"box-video__item\\\">\\n          <div class=\\\"box-video__content\\\">\\n            <table class=\\\"table NoTopBorder custom-table\\\">\\n              <tr>\\n                <th align=\\\"center\\\"></th>\\n                <th>Questions</th>\\n                <th>Option1</th>\\n                <th>Option2</th>\\n                <th>Action</th>\\n              </tr>\\n              <tr *ngFor=\\\"let question of questions;let i = index\\\">\\n\\n                <td align=\\\"center\\\">\\n                  <div class=\\\"box-video__item\\\">\\n                    <form [formGroup]=\\\"checkBoxForm\\\">\\n                      <input type=\\\"checkbox\\\" (change)=\\\"onCheckboxChagen(question._id, $event.target.checked)\\\">\\n                    </form>\\n                  </div>\\n                </td>\\n                <td class=\\\"h3 box-video__title\\\">\\n                  {{question.questions}}\\n                </td>\\n                <td class=\\\"h3 box-video__title\\\">\\n                  {{question.option1}}\\n                </td>\\n                <td class=\\\"h3 box-video__title\\\">\\n                  {{question.option2}}\\n                </td>\\n                <td>\\n                  <a class=\\\"dropdown-item view-item\\\"\\n                    (click)=\\\"openEditModal(question._id,question.questions,question.option1,question.option2)\\\">\\n                    <i class=\\\"fa fa-eye\\\"></i> </a>\\n                  <a class=\\\"dropdown-item del-item\\\" (click)=\\\"deleteQuestion(question._id)\\\">\\n                    <i class=\\\"fa fa-trash-o\\\"></i> </a>\\n                </td>\\n              </tr>\\n            </table>\\n            <p-paginator [rows]=\\\"20\\\" [totalRecords]=totalCount (onPageChange)=\\\"paginate($event)\\\"></p-paginator>\\n          </div>\\n          <div class=\\\"box-video__meta\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n<!-- <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls> -->\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n  <div class=\\\"modal-box\\\">\\n    <button title=\\\"Close (Esc)\\\" class=\\\"modal-close\\\" (click)=\\\"closeModal()\\\">×</button>\\n    <form [formGroup]=\\\"addQuestionForm\\\" novalidate (ngSubmit)=\\\"onAdd()\\\" class=\\\"form-default\\\">\\n      <div class=\\\"modal-header__title\\\">\\n        <span class=\\\"modal-header__icon\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>\\n        </span>\\n        Add Question\\n      </div>\\n      <div class=\\\"modal-form-body\\\">\\n        <label class=\\\"form__label\\\" for=\\\"Question\\\">\\n          <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"question\\\" placeholder=\\\"Enter the Question...\\\"\\n            required>\\n          <!-- <app-mm-form-error [control]=\\\"addQuestionForm.controls.question\\\" [msg]=\\\"'Question'\\\"></app-mm-form-error> -->\\n          <div *ngIf=\\\"addQuestionForm.controls['question'].touched\\\">\\n            <span *ngIf=\\\"addQuestionForm.controls['question'].hasError('required')\\\" class=\\\"error\\\">\\n              Question is required\\n            </span>\\n\\n          </div>\\n          <span *ngIf=\\\"addQuestionForm.controls['question'].hasError('maxlength')\\\" class=\\\"error\\\">\\n            Length exceded\\n          </span>\\n        </label>\\n        <label class=\\\"form__label\\\" for=\\\"Option 1\\\">\\n          <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"option1\\\" placeholder=\\\"Enter option1...\\\" required>\\n          <div *ngIf=\\\"addQuestionForm.controls['option1'].touched\\\">\\n            <span *ngIf=\\\"addQuestionForm.controls['option1'].hasError('required')\\\" class=\\\"error\\\">\\n              Option 1 is required\\n            </span>\\n          </div>\\n          <span *ngIf=\\\"addQuestionForm.controls['option1'].hasError('maxlength')\\\" class=\\\"error\\\">\\n            Length exceded\\n          </span>\\n        </label>\\n\\n        <label class=\\\"form__label\\\" for=\\\"Option 2\\\">\\n          <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"option2\\\" placeholder=\\\"Enter option2...\\\" required>\\n          <div *ngIf=\\\"addQuestionForm.controls['option2'].touched\\\">\\n            <span *ngIf=\\\"addQuestionForm.controls['option2'].hasError('required')\\\" class=\\\"error\\\">\\n              Option 2 is required\\n            </span>\\n          </div>\\n          <span *ngIf=\\\"addQuestionForm.controls['option2'].hasError('maxlength')\\\" class=\\\"error\\\">\\n            Length exceded\\n          </span>\\n        </label>\\n\\n        <div class=\\\"btn-group btn-group--c\\\">\\n          <button type=\\\"submit\\\" [disabled]='!addQuestionForm.valid' class=\\\"btn btn--orange\\\">submit</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"myModalEdit\\\">\\n  <div class=\\\"modal-box\\\">\\n    <button title=\\\"Close (Esc)\\\" class=\\\"modal-close\\\" (click)=\\\"closeEditModal()\\\">×</button>\\n    <form [formGroup]=\\\"editQuestionForm\\\" novalidate (ngSubmit)=\\\"onEdit()\\\" class=\\\"form-default\\\">\\n      <div class=\\\"modal-header__title\\\">\\n        <span class=\\\"modal-header__icon\\\">\\n          <i class=\\\"fa fa-plus-circle\\\"></i>\\n        </span>\\n        Edit Question\\n      </div>\\n      <div class=\\\"modal-form-body\\\">\\n        <label class=\\\"form__label\\\">\\n          <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"qid\\\" style=\\\"display: none;\\\">\\n        </label>\\n        <label class=\\\"form__label\\\">\\n          <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"question\\\" placeholder=\\\"Enter the Question...\\\"\\n            required>\\n          <div *ngIf=\\\"editQuestionForm.controls['question'].touched\\\">\\n            <span *ngIf=\\\"editQuestionForm.controls['question'].hasError('required')\\\" class=\\\"error\\\">\\n              Question is required\\n            </span>\\n          </div>\\n          <span *ngIf=\\\"editQuestionForm.controls['question'].hasError('maxlength')\\\" class=\\\"error\\\">\\n            Length exceded\\n          </span>\\n        </label>\\n\\n        <label class=\\\"form__label\\\">\\n          <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"option1\\\" placeholder=\\\"Enter option1...\\\" required>\\n          <div *ngIf=\\\"editQuestionForm.controls['option1'].touched\\\">\\n            <span *ngIf=\\\"editQuestionForm.controls['option1'].hasError('required')\\\" class=\\\"error\\\">\\n              Option 1 is required\\n            </span>\\n          </div>\\n          <span *ngIf=\\\"editQuestionForm.controls['option1'].hasError('maxlength')\\\" class=\\\"error\\\">\\n            Length exceded\\n          </span>\\n        </label>\\n\\n        <label class=\\\"form__label\\\">\\n          <input type=\\\"text\\\" class=\\\"form__control\\\" formControlName=\\\"option2\\\" placeholder=\\\"Enter option2...\\\" required>\\n          <div *ngIf=\\\"editQuestionForm.controls['option2'].touched\\\">\\n            <span *ngIf=\\\"editQuestionForm.controls['option2'].hasError('required')\\\" class=\\\"error\\\">\\n              Option 2 is required\\n            </span>\\n          </div>\\n          <span *ngIf=\\\"editQuestionForm.controls['option2'].hasError('maxlength')\\\" class=\\\"error\\\">\\n            Length exceded\\n          </span>\\n        </label>\\n\\n\\n        <div class=\\\"btn-group btn-group--c\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"editQuestionForm.invalid\\\" class=\\\"btn btn--orange\\\">submit</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<ngx-spinner bdOpacity=0.1 size=\\\"medium\\\" color=\\\"#50008e\\\" type=\\\"line-scale\\\" [fullScreen]=\\\"true\\\">\\n  <p style=\\\"color: white\\\"> Loading... </p>\\n</ngx-spinner>\"","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { AdminService } from '../../../admin.service';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { NotificationService } from '../../../../shared/service/notifiation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { CdkVirtualScrollViewport, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { filter } from 'rxjs/operators';\nimport { ExportXlxsService } from 'src/app/shared/service/export-xlxs.service';\n\n@Component({\n  selector: 'app-list-questions',\n  templateUrl: './list-questions.component.html',\n  styleUrls: ['./list-questions.component.css']\n})\nexport class ListQuestionsComponent implements OnInit {\n  addQuestionForm: FormGroup;\n  checkBoxForm: FormGroup;\n  editQuestionForm: FormGroup;\n  page = 0;\n  @ViewChild(CdkVirtualScrollViewport) virtualScroll: CdkVirtualScrollViewport;\n  totalCount: any;\n  questionList: any;\n  userList: any;\n\n  constructor(private admin: AdminService,\n    private fb: FormBuilder,\n    private spinner: NgxSpinnerService,\n    private notification: NotificationService,\n    private scrollDispatcher: ScrollDispatcher,\n    private excelService: ExportXlxsService,\n    private cd: ChangeDetectorRef) { }\n  questions: any;\n  ngOnInit() {\n    this.checkBoxForm = this.fb.group({\n      qId: this.fb.array([])\n    });\n    this.addQuestionForm = new FormGroup({\n      question: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(50)\n      ]),\n      option1: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(50)\n        // Validators.compose()\n\n      ]),\n      option2: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(50)\n\n      ])\n    });\n    this.editQuestionForm = new FormGroup({\n      qid: new FormControl(''),\n      question: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(50)\n\n      ]),\n      option1: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(50)\n\n      ]),\n      option2: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(50)\n\n      ])\n    });\n    this.listQuestion();\n  }\n  listQuestion() {\n    const data = {\n      page: 0\n    };\n    this.admin.listQuestions(data).subscribe(res => {\n      this.spinner.show();\n      if (res.code === 200) {\n        this.spinner.hide();\n        this.questions = res.data.data;\n        this.totalCount = res.data.count;\n      } else {\n        this.spinner.hide();\n\n      }\n    });\n  }\n\n  // ngAfterViewInit(): void {\n  //   this.scrollDispatcher.scrolled().pipe(\n  //     filter(event => this.virtualScroll.measureScrollOffset('bottom') === 0)\n  //   ).subscribe(event => {\n  //     this.page++;\n  //     this.listQuestion();\n  //     this.cd.detectChanges();\n  //   });\n\n  // }\n\n  openModal() {\n    console.log('test test');\n    document.getElementById('myModal').style.display = 'block';\n  }\n\n  closeModal() {\n    document.getElementById('myModal').style.display = 'none';\n\n  }\n  closeEditModal() {\n    document.getElementById('myModalEdit').style.display = 'none';\n\n  }\n\n  onCheckboxChagen(id: string, isChecked: boolean) {\n    console.log(isChecked, 'isChecked');\n    const questionIDFormArray = <FormArray>this.checkBoxForm.controls.qId;\n\n    if (isChecked) {\n      questionIDFormArray.push(new FormControl(id));\n    } else {\n      let index = questionIDFormArray.controls.findIndex(x => x.value == id);\n      questionIDFormArray.removeAt(index);\n    }\n    console.log('question', this.checkBoxForm.value);\n  }\n  onAdd() {\n    console.log('', this.addQuestionForm.value);\n    if (this.addQuestionForm.valid) {\n      this.admin.addQuestions(this.addQuestionForm.value).subscribe(res => {\n        if (res.code == 200) {\n          this.notification.successToast(res.message);\n          this.listQuestion();\n          this.closeModal();\n          this.addQuestionForm.reset();\n        } else {\n          this.notification.successToast(res.message);\n          this.listQuestion();\n          this.closeModal();\n          this.addQuestionForm.reset();\n        }\n      });\n    } else {\n      this.notification.errorToast('Invalid');\n\n    }\n  }\n\n\n\n\n  openEditModal(id, question, option1, option2) {\n    document.getElementById('myModalEdit').style.display = 'block';\n    this.editQuestionForm.setValue({ 'qid': id, 'question': question, 'option1': option1, 'option2': option2 });\n  }\n\n  onEdit() {\n    console.log('this.edittt', this.editQuestionForm.value);\n    if (this.editQuestionForm.valid) {\n      this.admin.EditQuestions(this.editQuestionForm.value).subscribe(res => {\n        if (res.code == 200) {\n          this.listQuestion();\n          this.editQuestionForm.reset();\n          this.closeEditModal();\n          this.notification.successToast(res.message);\n        } else {\n          this.notification.infoToast(res.message);\n        }\n      });\n    } else {\n      this.notification.errorToast('Invalid');\n    }\n\n  }\n  paginate(event) {\n    const obj = {\n      page: event.page\n    };\n    this.admin.listQuestions(obj).subscribe(res => {\n      console.log('users', res);\n      if (res.code === 200) {\n        this.spinner.hide();\n        this.questions = res.data.data;\n        this.totalCount = res.data.count;\n      }\n    });\n\n  }\n\n  deleteQuestion(id) {\n    this.notification.confirm('You want to delete question').then(data => {\n      console.log('dataaaaa', data);\n      if (data.value) {\n        this.admin.deleteQuestions(id).subscribe(res => {\n          if (res.code == 200) {\n            this.listQuestion();\n          } else {\n            this.listQuestion();\n          }\n        });\n      } else {\n        this.notification.infoToast('Cancelled');\n      }\n    });\n  }\n\n  deleteMultipleQuestion() {\n    console.log('asasasasasasasasaSAs');\n    if (this.checkBoxForm.value.qId.length == 0) {\n      this.notification.infoToast('Please select items from the list');\n    } else {\n      this.notification.confirm('You want to delete questions').then(data => {\n        console.log('dataaaaa', data);\n        if (data.value) {\n          this.admin.deleteMultipleQuestions(this.checkBoxForm.value).subscribe(res => {\n            if (res.code == 200) {\n              this.notification.successToast(res.message);\n              this.listQuestion();\n            } else {\n              this.notification.infoToast(res.message);\n              this.listQuestion();\n            }\n          });\n        } else {\n          this.notification.infoToast('Cancelled');\n        }\n      });\n    }\n  }\n\n  exportToCSV() {\n    const userList = [];\n    this.admin.exportQuestionsToCSV(userList).subscribe(res => {\n      console.log(res)\n      if (res.code === 200) {\n        this.questionList = res.data;\n        this.questionList.forEach(element => {\n          // console.log(element, 'element');\n          userList.push({\n            Question: element.questions,\n            option1: element.option1,\n            option2: element.option2,\n            // ClientName: element.firstName,\n            // email: element.email,\n            // Age: element.age,\n            // Gender: element.gender ? 'Female' : 'Male',\n            // Device_type: element.device_type,\n            // MemberShip_since: element.createdAt\n          });\n        });\n      }\n      if (userList.length) {\n        this.excelService.exportAsExcelFile(userList, 'Questions');\n      } else {\n        // this.notification.infoToast('No data available to export')\n        // this.toastr.info('No data available to export');\n      }\n    });\n  }\n\n\n\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddQuestionsComponent } from './add-questions/add-questions.component';\nimport { ListQuestionsComponent } from './list-questions/list-questions.component';\nimport { EditQuestionsComponent } from './edit-questions/edit-questions.component';\n\nconst routes: Routes = [\n  {\n    path:'add-questions',\n    component:AddQuestionsComponent\n  },\n  {\n    path:'list-questions',\n    component:ListQuestionsComponent\n  },\n  {\n    path:'edit-question/:id',\n    component:EditQuestionsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManageQuestionsRoutingModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageQuestionsRoutingModule } from './manage-questions-routing.module';\nimport { AddQuestionsComponent } from './add-questions/add-questions.component';\nimport { ListQuestionsComponent } from './list-questions/list-questions.component';\nimport { EditQuestionsComponent } from './edit-questions/edit-questions.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NotificationService } from '../../../shared/service/notifiation.service';\n// import { NgxPaginationModule } from 'ngx-pagination';\nimport {ScrollDispatchModule, ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {PaginatorModule} from 'primeng/paginator';\n\n@NgModule({\n  declarations: [AddQuestionsComponent, ListQuestionsComponent, EditQuestionsComponent],\n  imports: [\n    CommonModule,\n    ManageQuestionsRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ScrollDispatchModule,\n    PaginatorModule\n    // NgxPaginationModule\n  ],\n  providers: [NotificationService, ScrollDispatcher],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n\n})\nexport class ManageQuestionsModule { }\n"],"sourceRoot":""}